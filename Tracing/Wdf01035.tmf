// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxhandle_h356 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxObjectHandleGetPtr
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxhandle_h460 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxObjectHandleGetPtrAndGlobals
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxverifier_h209 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=FxVerifierCheckIrqlLevel
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
726c9341-86b6-34b8-3188-b2d437396489 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp1134 34 "%0Cannot call %!FUNC! on non packet or system profile WDFDMATRANSACTION (%10!p!) (transaction profile is %11!s!) - %12!s!." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionAllocateResources FUNC=imp_WdfDmaTransactionAllocateResources
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_DMA_PROFILE) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmatransactionapi_cpp1151 35 "%0Allocation of DMA adapter for WDFDMATRANSACTION 0x%10!p!, DmaDirection 0x%11!x! is an invalid value, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionAllocateResources FUNC=imp_WdfDmaTransactionAllocateResources
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmatransactionapi_cpp1112 33 "%0Cannot call %!FUNC! on WDFDMATRANSACTION %10!p! because WDFDMAENABLER %11!p! was not configured for DMA version 3 - %12!s!." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionAllocateResources FUNC=imp_WdfDmaTransactionAllocateResources
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmatransactionapi_cpp1248 38 "%0Cannot call %!FUNC! WDFDMATRANSACTION (%10!p!) because enabler is not using DMA version 3" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionCancel FUNC=imp_WdfDmaTransactionCancel
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp611 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDmaTransactionDmaCompletedWithLength
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
aaa5e587-2264-32f9-aa2c-c43a805ae1da base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp539 21 "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::Execute FUNC=imp_WdfDmaTransactionExecute
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp534 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDmaTransactionExecute
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
726c9341-86b6-34b8-3188-b2d437396489 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp1195 36 "%0Cannot call %!FUNC! on non packet or system profile WDFDMATRANSACTION (%10!p!) (transaction profile is %11!s!)." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionFreeResources FUNC=imp_WdfDmaTransactionFreeResources
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_DMA_PROFILE) -- 11
}
#typev fxdmatransactionapi_cpp1211 37 "%0Cannot call %!FUNC! on WDFDMATRANSACTION %10!p! because WDFDMAENABLER %11!p! was not configured for DMA version 3" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionFreeResources FUNC=imp_WdfDmaTransactionFreeResources
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp790 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDmaTransactionGetCurrentDmaTransferLength
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
726c9341-86b6-34b8-3188-b2d437396489 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp463 22 "%0VirtualAddress %10!p! is not within the Mdl bounds, StartVA (%11!p!) + ByteCount (0x%12!x!), %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitialize FUNC=imp_WdfDmaTransactionInitialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmatransactionapi_cpp511 24 "%0WDFTANSACTION 0x%10!p! initialization failed: %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitialize FUNC=imp_WdfDmaTransactionInitialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
aaa5e587-2264-32f9-aa2c-c43a805ae1da base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp501 12 "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::Initialize FUNC=imp_WdfDmaTransactionInitialize
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
726c9341-86b6-34b8-3188-b2d437396489 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp489 23 "%0VirtualAddress+Length (%10!p!+%11!I64d!) is out of bounds of MDL VA + MDL Byte count (max address is %12!p!). Possibly a chained MDL, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitialize FUNC=imp_WdfDmaTransactionInitialize
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmatransactionapi_cpp447 21 "%0Initialization of WDFDMATRANSACTION 0x%10!p!,DmaDirection 0x%11!x! is an invalid value, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitialize FUNC=imp_WdfDmaTransactionInitialize
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp475 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDmaTransactionInitialize
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxdmatransactionapi_cpp427 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDmaTransactionInitialize
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
726c9341-86b6-34b8-3188-b2d437396489 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp438 20 "%0Can't initialize WDFDMATRANSACTION 0x%10!p! with zero length transfer" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitialize FUNC=imp_WdfDmaTransactionInitialize
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
aaa5e587-2264-32f9-aa2c-c43a805ae1da base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp501 13 "%0Exit WDFDMATRANSACTION %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::Initialize FUNC=imp_WdfDmaTransactionInitialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionapi_cpp501 11 "%0Enter WDFDMATRANSACTION %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::Initialize FUNC=imp_WdfDmaTransactionInitialize
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
726c9341-86b6-34b8-3188-b2d437396489 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp344 19 "%0WDFTANSACTION 0x%10!p! initialization failed: %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionapi_cpp324 18 "%0WDFREQUEST %10!p! transfer length (%11!d!) is out of bounds of MDL Byte count (%12!d!), %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmatransactionapi_cpp305 17 "%0Zero length request, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdmatransactionapi_cpp296 16 "%0Couldn't retrieve mdl from WDFREQUEST 0x%10!p! for WDFTRANSACTION 0x%11!p! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmatransactionapi_cpp172 11 "%0Dma direction %10!s! of WDFTRANSACTION 0x%11!p! doesn't match with the WDFREQUEST 0x%12!p! type %13!s! %14!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Arg, ItemEnum(_WDF_DMA_DIRECTION) -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemEnum(_WDF_REQUEST_TYPE) -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxdmatransactionapi_cpp192 12 "%0Dma direction %10!s! of WDFTRANSACTION 0x%11!p! doesn't match with the WDFREQUEST 0x%12!p! type %13!s! %14!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Arg, ItemEnum(_WDF_DMA_DIRECTION) -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemEnum(_WDF_REQUEST_TYPE) -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxdmatransactionapi_cpp236 13 "%0Dma direction %10!s! of WDFTRANSACTION 0x%11!p! doesn't match with WDFREQUEST 0x%12!p! ioctl type METHOD_IN_DIRECT %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Arg, ItemEnum(_WDF_DMA_DIRECTION) -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmatransactionapi_cpp260 14 "%0Dma direction %10!s! of WDFTRANSACTION 0x%11!p! doesn't match with WDFREQUEST 0x%12!p! ioctl type METHOD_OUT_DIRECT %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Arg, ItemEnum(_WDF_DMA_DIRECTION) -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmatransactionapi_cpp279 15 "%0Invalid ioctl code in WDFREQUEST 0x%10!p! %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionapi_cpp145 10 "%0Initialization of WDFDMATRANSACTION 0x%10!p! using WDFREQUEST %11!p!, DmaDirection 0x%12!x! is an invalid value, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp554 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDmaTransactionRelease
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
726c9341-86b6-34b8-3188-b2d437396489 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionapi_cpp847 27 "%0Cannot call %!FUNC! on non-system-profile WDFDMATRANSACTION (%10!p!) (transaction profile is %11!s!)." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionSetChannelConfigurationCallback FUNC=imp_WdfDmaTransactionSetChannelConfigurationCallback
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_DMA_PROFILE) -- 11
}
#typev fxdmatransactionapi_cpp944 29 "%0Cannot call %!FUNC! on non-system-profile WDFDMATRANSACTION (%10!p!) (transaction profile is %11!s!)." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionSetDeviceAddressOffset FUNC=imp_WdfDmaTransactionSetDeviceAddressOffset
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_DMA_PROFILE) -- 11
}
#typev fxdmatransactionapi_cpp1063 32 "%0Cannot call %!FUNC! for WDFDMATRANSACTION %10!p! because the parent WDFDMAENABLER (%11!p!) is not configured to use DMA version 3." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionSetImmediateExecution FUNC=imp_WdfDmaTransactionSetImmediateExecution
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxdmatransactionapi_cpp739 26 "%0Cannot call %!FUNC! for WDFDMATRANSACTION %10!p! because it was already initialized (state is %11!s!)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionSetSingleTransferRequirement FUNC=imp_WdfDmaTransactionSetSingleTransferRequirement
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
#typev fxdmatransactionapi_cpp725 25 "%0Cannot call %!FUNC! for WDFDMATRANSACTION %10!p! because WDFDMAENABLER %11!p! is not configured to use DMA version 3." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionSetSingleTransferRequirement FUNC=imp_WdfDmaTransactionSetSingleTransferRequirement
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxdmatransactionapi_cpp896 28 "%0Cannot call %!FUNC! on non-system-profile WDFDMATRANSACTION (%10!p!) (transaction profile is %11!s!)." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionSetTransferCompleteCallback FUNC=imp_WdfDmaTransactionSetTransferCompleteCallback
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_DMA_PROFILE) -- 11
}
#typev fxdmatransactionapi_cpp1284 39 "%0Cannot call %!FUNC! on non-system-profile WDFDMATRANSACTION (%10!p!) (transaction profile is %11!s!)." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionStopSystemTransfer FUNC=imp_WdfDmaTransactionStopSystemTransfer
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_DMA_PROFILE) -- 11
}
#typev fxdmatransactionapi_cpp998 31 "%0Cannot call %!FUNC! on WDFDMATRANSACTION %10!p! becuase it is uninitialized, reused, deleted (state is %11!s!)." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionWdmGetTransferContext FUNC=imp_WdfDmaTransactionWdmGetTransferContext
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
#typev fxdmatransactionapi_cpp982 30 "%0Cannot call %!FUNC! for WDFDMATRANSACTION %10!p! because the parent WDFDMAENABLER (%11!p!) is not configured to use DMA version 3." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionWdmGetTransferContext FUNC=imp_WdfDmaTransactionWdmGetTransferContext
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxNonPagedObject_hpp112 10 "%0Handle %10!s! %11!p! (raw object %12!p!) was freed using WdfObjectDereference(), not WdfObjectDelete()" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGOBJECT FUNC=FxObject::~FxObject FUNC=FxNonPagedObject::~FxNonPagedObject
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ff5ed2ad-90c3-3625-80bc-821a11a612a5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxNonPagedObject_hpp112 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxNonPagedObject::~FxNonPagedObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
fa140e8e-25c0-3ec8-7c17-3e7fc367fd33 base // SRC=Unknown_cxx00 MJ= MN=
#typev FxVerifierLock_hpp485 13 "%0Lock 0x%10!p! is being destroyed while owned by thread 0x%11!p!, Owning Object 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::~FxVerifierLock FUNC=FxVerifierLock::~FxVerifierLock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4919422f-631d-3912-3200-fc7f52f21435 base // SRC=Unknown_cxx00 MJ= MN=
#typev FxDmaTransactionPacket_hpp397 12 "%0Allocating DMA resources (%10!d! map registers) for WDFDMATRANSACTION %11!p! returned %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::AllocateAdapterChannel FUNC=FxDmaPacketTransaction::AllocateAdapterChannel
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev FxDmaTransactionPacket_hpp345 11 "%0Using %10!d! reserved map registers for WDFDMATRANSACTION %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::AllocateAdapterChannel FUNC=FxDmaPacketTransaction::AllocateAdapterChannel
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}
#typev FxDmaTransactionPacket_hpp335 10 "%0Allocating %10!d! map registers for WDFDMATRANSACTION %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::AllocateAdapterChannel FUNC=FxDmaPacketTransaction::AllocateAdapterChannel
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}
#typev FxDmaTransactionPacket_hpp640 18 "%0Freeing %10!d! map registers for WDFDMATRANSACTION %11!p! (base %12!p!)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::FreeMapRegistersAndAdapter FUNC=FxDmaPacketTransaction::FreeMapRegistersAndAdapter
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev FxDmaTransactionPacket_hpp624 17 "%0Skipping free of %10!d! map registers for WDFDMATRANSACTION %11!p! because base was NULL" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::FreeMapRegistersAndAdapter FUNC=FxDmaPacketTransaction::FreeMapRegistersAndAdapter
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}
#typev FxDmaTransactionPacket_hpp716 20 "%0Cannot call GetSgListBufferSize for Packet-based WDFDMATRANSACTION 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::GetSgListBufferSize FUNC=FxDmaPacketTransaction::GetSgListBufferSize
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
72d86d8a-909d-3788-8e4b-6e1436d16f8d base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionpacket_cpp367 18 "%0Exit WDFDMATRANSACTION %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::ReleaseAdapter FUNC=FxDmaPacketTransaction::ReleaseAdapter
{
Arg, ItemPtr -- 10
}
#typev fxdmatransactionpacket_cpp350 17 "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::ReleaseAdapter FUNC=FxDmaPacketTransaction::ReleaseAdapter
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
#typev fxdmatransactionpacket_cpp338 16 "%0Enter WDFDMATRANSACTION %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::ReleaseAdapter FUNC=FxDmaPacketTransaction::ReleaseAdapter
{
Arg, ItemPtr -- 10
}
#typev fxdmatransactionpacket_cpp193 13 "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::ReserveAdapter FUNC=FxDmaPacketTransaction::ReserveAdapter
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
#typev fxdmatransactionpacket_cpp321 15 "%0Exit WDFDMATRANSACTION %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::ReserveAdapter FUNC=FxDmaPacketTransaction::ReserveAdapter
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionpacket_cpp208 14 "%0WDFDMATRANSACTION %10!p! already has allocated map registers." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::ReserveAdapter FUNC=FxDmaPacketTransaction::ReserveAdapter
{
Arg, ItemPtr -- 10
}
#typev fxdmatransactionpacket_cpp176 12 "%0RequiredMapRegisters cannot be 0 because WDFDMATRANSACTION %10!p! is not initialized (state is %11!s!) - %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::ReserveAdapter FUNC=FxDmaPacketTransaction::ReserveAdapter
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmatransactionpacket_cpp162 11 "%0Enter WDFDMATRANSACTION %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::ReserveAdapter FUNC=FxDmaPacketTransaction::ReserveAdapter
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4919422f-631d-3912-3200-fc7f52f21435 base // SRC=Unknown_cxx00 MJ= MN=
#typev FxDmaTransactionPacket_hpp696 19 "%0Cannot call SetNewSgListBuffer for Packet-based WDFDMATRANSACTION 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::SetNewSgListBuffer FUNC=FxDmaPacketTransaction::SetNewSgListBuffer
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
72d86d8a-909d-3788-8e4b-6e1436d16f8d base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionpacket_cpp1044 31 "%0Exit WDFDMATRANSACTION %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StageTransfer FUNC=FxDmaPacketTransaction::StageTransfer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionpacket_cpp994 30 "%0Invoking DmaCompleted callback %10!p! (context %11!p!) for WDFDMATRANSACTION %12!p! (status %13!x!) after deferral" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StageTransfer FUNC=FxDmaPacketTransaction::StageTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxdmatransactionpacket_cpp920 29 "%0Invoking ProgramDma callback %10!p! (context %11!p!) for WDFDMATRANSACTION %12!p!." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StageTransfer FUNC=FxDmaPacketTransaction::StageTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4919422f-631d-3912-3200-fc7f52f21435 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionpacket_cpp889 14 "%0MapTransfer mapped next %10!d! bytes of WDFDMATRANSACTION %11!p! - status %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::MapTransfer FUNC=FxDmaPacketTransaction::StageTransfer
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmatransactionpacket_cpp889 13 "%0Mapping transfer for WDFDMATRANSACTION %10!p!.  MDL %11!p!, Offset %12!I64x!, Length %13!x!, MapRegisterBase %14!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::MapTransfer FUNC=FxDmaPacketTransaction::StageTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
72d86d8a-909d-3788-8e4b-6e1436d16f8d base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionpacket_cpp819 28 "%0Initiating %10!s! transfer for WDFDMATRANSACTION %11!p!.  Mdl %12!p!, Offset %13!I64x!, Length %14!I64x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StageTransfer FUNC=FxDmaPacketTransaction::StageTransfer
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemLongLongX -- 13
Arg, ItemLongLongX -- 14
}
#typev fxdmatransactionpacket_cpp711 27 "%0Staging next fragment of WDFDMATRANSACTION %10!p! deferred" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StageTransfer FUNC=FxDmaPacketTransaction::StageTransfer
{
Arg, ItemPtr -- 10
}
#typev fxdmatransactionpacket_cpp686 26 "%0Enter WDFDMATRANSACTION %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StageTransfer FUNC=FxDmaPacketTransaction::StageTransfer
{
Arg, ItemPtr -- 10
}
#typev fxdmatransactionpacket_cpp517 23 "%0Exit WDFDMATRANSACTION %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StartTransfer FUNC=FxDmaPacketTransaction::StartTransfer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionpacket_cpp504 22 "%0AllocateAdapterChannel failed for WDFDMATRANSACTION %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StartTransfer FUNC=FxDmaPacketTransaction::StartTransfer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionpacket_cpp416 21 "%0Only one transaction can be queued at one time on a packet based WDFDMAENABLER %10!p! %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StartTransfer FUNC=FxDmaPacketTransaction::StartTransfer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionpacket_cpp397 20 "%0Starting WDFDMATRANSACTION %10!p! - MDL %11!#p!, offset %12!I64x!, length %13!I64x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StartTransfer FUNC=FxDmaPacketTransaction::StartTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemLongLongX -- 13
}
#typev fxdmatransactionpacket_cpp393 19 "%0Enter WDFDMATRANSACTION %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StartTransfer FUNC=FxDmaPacketTransaction::StartTransfer
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4919422f-631d-3912-3200-fc7f52f21435 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionpacket_cpp1065 15 "%0Flushing DMA buffers for WDFDMATRANSACTION %10!p!.  MDL %11!p!, Offset %12!I64x!, Length %13!I64x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::FlushAdapterBuffers FUNC=FxDmaPacketTransaction::TransferCompleted
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemLongLongX -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
72d86d8a-909d-3788-8e4b-6e1436d16f8d base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionpacket_cpp1068 32 "%0FlushAdapterBuffers on WDFDMATRANSACTION %10!p! failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::TransferCompleted FUNC=FxDmaPacketTransaction::TransferCompleted
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4919422f-631d-3912-3200-fc7f52f21435 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionpacket_cpp1065 16 "%0Flushing DMA buffers for WDFDMATRANSACTION %10!p! (MDL %11!p!, Offset %12!I64x!, Length %13!I64x!)completed with %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::FlushAdapterBuffers FUNC=FxDmaPacketTransaction::TransferCompleted
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemLongLongX -- 13
Arg, ItemNTSTATUS -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
72d86d8a-909d-3788-8e4b-6e1436d16f8d base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionpacket_cpp636 25 "%0Invoking DmaCompleted callback %10!p! (context %11!p!) for WDFDMATRANSACTION %12!p! (status %13!x!) due to staging failure (%14!s!)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::_AdapterControl FUNC=FxDmaPacketTransaction::_AdapterControl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxdmatransactionpacket_cpp564 24 "%0Map registers for WDFDMATRANSACTION %10!p! allocated (base %11!p!)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::_AdapterControl FUNC=FxDmaPacketTransaction::_AdapterControl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxdmatransactionpacket_cpp73 10 "%0Could not allocate memory for WDFTRANSACTION, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::_Create FUNC=FxDmaPacketTransaction::_Create
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2535664e-021b-3de7-6124-8de4ae7b52ff base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionscattergather_cpp244 13 "%0WDFDMATRANSACTION %10!p! for MDL %11!p! is more fragmented (%12!d!) than the limit (%13!I64d!) specified by the driver, %14!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::InitializeResources FUNC=FxDmaScatterGatherTransaction::InitializeResources
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLongLong -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxdmatransactionscattergather_cpp234 12 "%0CalculateScatterGatherList failed for WDFDMATRANSACTION %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::InitializeResources FUNC=FxDmaScatterGatherTransaction::InitializeResources
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionscattergather_cpp407 17 "%0Exit WDFDMATRANSACTION %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::StageTransfer FUNC=FxDmaScatterGatherTransaction::StageTransfer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionscattergather_cpp389 16 "%0Build or GetScatterGatherList failed for WDFDMATRANSACTION %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::StageTransfer FUNC=FxDmaScatterGatherTransaction::StageTransfer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionscattergather_cpp310 14 "%0Enter WDFDMATRANSACTION %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::StageTransfer FUNC=FxDmaScatterGatherTransaction::StageTransfer
{
Arg, ItemPtr -- 10
}
#typev fxdmatransactionscattergather_cpp357 15 "%0WDFDMATRANSACTION %10!p! for MDL %11!p! is more fragmented (%12!d!) than the limit (%13!I64d!) specified by the driver, %14!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::StageTransfer FUNC=FxDmaScatterGatherTransaction::StageTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLongLong -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxdmatransactionscattergather_cpp461 19 "%0Exit WDFDMATRANSACTION %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::_AdapterListControl FUNC=FxDmaScatterGatherTransaction::_AdapterListControl
{
Arg, ItemPtr -- 10
}
#typev fxdmatransactionscattergather_cpp436 18 "%0Enter WDFDMATRANSACTION %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::_AdapterListControl FUNC=FxDmaScatterGatherTransaction::_AdapterListControl
{
Arg, ItemPtr -- 10
}
#typev fxdmatransactionscattergather_cpp86 11 "%0Unable to allocate memory for SG List, WDFDMATRANSACTION %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::_Create FUNC=FxDmaScatterGatherTransaction::_Create
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionscattergather_cpp66 10 "%0Could not allocate memory for WDFTRANSACTION, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::_Create FUNC=FxDmaScatterGatherTransaction::_Create
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
543b52d5-9775-30c2-16f4-5bfe5404a69d base // SRC=Unknown_cxx00 MJ= MN=
#typev FxDmaTransactionSystem_hpp122 11 "%0Stopping WDFDMATRANSACTION %10!p! returned status %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaSystemTransaction::CancelMappedTransfer FUNC=FxDmaSystemTransaction::CancelMappedTransfer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev FxDmaTransactionSystem_hpp90 10 "%0Freeing adapter channel for WDFDMATRANSACTION %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaSystemTransaction::FreeMapRegistersAndAdapter FUNC=FxDmaSystemTransaction::FreeMapRegistersAndAdapter
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
41e714a2-81c2-3fc0-83cb-319f49a59697 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionsystem_cpp112 11 "%0Invoking ConfigureChannel callback %10!p! (context %11!p!) for WDFDMATRANSACTION %12!p!." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaSystemTransaction::PreMapTransfer FUNC=FxDmaSystemTransaction::PreMapTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxdmatransactionsystem_cpp271 14 "%0WDFDMATRANSACTION %10!p! has already been stopped" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaSystemTransaction::StopTransfer FUNC=FxDmaSystemTransaction::StopTransfer
{
Arg, ItemPtr -- 10
}
#typev fxdmatransactionsystem_cpp58 10 "%0Could not allocate memory for WDFTRANSACTION, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaSystemTransaction::_Create FUNC=FxDmaSystemTransaction::_Create
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdmatransactionsystem_cpp234 13 "%0Invoking DmaCompleted callback %10!p! (context %11!p!) for WDFDMATRANSACTION %12!p! (status %13!x!)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaSystemTransaction::_SystemDmaCompletion FUNC=FxDmaSystemTransaction::_SystemDmaCompletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxdmatransactionsystem_cpp215 12 "%0Deferring DmaCompleted callback for WDFDMATRANSACTION %10!p!(status %11!x!)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaSystemTransaction::_SystemDmaCompletion FUNC=FxDmaSystemTransaction::_SystemDmaCompletion
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
aaa5e587-2264-32f9-aa2c-c43a805ae1da base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionbase_cpp726 31 "%0WDFDMATRANSACTION %10!p! cannot be cancelled in state %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::CancelResourceAllocation FUNC=FxDmaTransactionBase::CancelResourceAllocation
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
fa140e8e-25c0-3ec8-7c17-3e7fc367fd33 base // SRC=Unknown_cxx00 MJ= MN=
#typev FxVerifierLock_hpp462 12 "%0Failed to allocate verifier lock, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::CreateAndInitialize FUNC=FxVerifierLock::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
aaa5e587-2264-32f9-aa2c-c43a805ae1da base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmatransactionbase_cpp102 10 "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::Dispose FUNC=FxDmaTransactionBase::Dispose
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
#typev fxdmatransactionbase_cpp626 27 "%0Exit WDFDMATRANSACTION %10!p! Transitioned(%11!s!)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::DmaCompleted FUNC=FxDmaTransactionBase::DmaCompleted
{
Arg, ItemPtr -- 10
Arg, ItemListByte(FALSE,TRUE) -- 11
}
#typev fxdmatransactionbase_cpp603 26 "%0WDFDMATRANSACTION %10!p! completed with status %11!s! - releasing DMA resources" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::DmaCompleted FUNC=FxDmaTransactionBase::DmaCompleted
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionbase_cpp500 24 "%0WDFDMATRANSACTION %10!p! Transfered Length %11!I64d! can't be more than the length asked to transfer %12!I64d! %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::DmaCompleted FUNC=FxDmaTransactionBase::DmaCompleted
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmatransactionbase_cpp488 23 "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::DmaCompleted FUNC=FxDmaTransactionBase::DmaCompleted
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
#typev fxdmatransactionbase_cpp479 22 "%0Enter WDFDMATRANSACTION %10!p!, length %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::DmaCompleted FUNC=FxDmaTransactionBase::DmaCompleted
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxdmatransactionbase_cpp548 25 "%0WDFDMATRANSACTION %10!p! cannot complete in a single transfer, %11!Iu! remaining bytes out of %12!Iu! total %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::DmaCompleted FUNC=FxDmaTransactionBase::DmaCompleted
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmatransactionbase_cpp963 32 "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::GetTransferInfo FUNC=FxDmaTransactionBase::GetTransferInfo
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
#typev fxdmatransactionbase_cpp150 12 "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::Initialize FUNC=FxDmaTransactionBase::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
#typev fxdmatransactionbase_cpp221 13 "%0Exit WDFDMATRANSACTION %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::Initialize FUNC=FxDmaTransactionBase::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionbase_cpp141 11 "%0Enter WDFDMATRANSACTION %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::Initialize FUNC=FxDmaTransactionBase::Initialize
{
Arg, ItemPtr -- 10
}
#typev fxdmatransactionbase_cpp378 20 "%0WDFDMAENABLER %10!p! reallocated SG list buffer of size 0x%11!X! (was 0x%12!IX!) by WDFDMATRANSACTION %13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::PrepareForSingleTransfer FUNC=FxDmaTransactionBase::PrepareForSingleTransfer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}
#typev fxdmatransactionbase_cpp366 19 "%0WDFDMAENABLER %10!p! unable to reallocate SG list of size 0x%11!X! (currently 0x%12!IX!) by WDFDMATRANSACTION %13!p!, %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::PrepareForSingleTransfer FUNC=FxDmaTransactionBase::PrepareForSingleTransfer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxdmatransactionbase_cpp330 18 "%0WDFDMATRANSACTION %10!p! cannot complete in a single transfer: requires %11!u! SG elements, packet profile limit is 1, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::PrepareForSingleTransfer FUNC=FxDmaTransactionBase::PrepareForSingleTransfer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmatransactionbase_cpp319 17 "%0WDFDMATRANSACTION %10!p! cannot complete in a single transfer: requires %11!u! SG elements, device limit is %12!u!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::PrepareForSingleTransfer FUNC=FxDmaTransactionBase::PrepareForSingleTransfer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmatransactionbase_cpp308 16 "%0WDFDMATRANSACTION %10!p! cannot complete in a single transfer: requires %11!u! map registers, limit is %12!u!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::PrepareForSingleTransfer FUNC=FxDmaTransactionBase::PrepareForSingleTransfer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmatransactionbase_cpp295 15 "%0WDFDMATRANSACTION %10!p! GetDmaTransferInfo failed %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::PrepareForSingleTransfer FUNC=FxDmaTransactionBase::PrepareForSingleTransfer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionbase_cpp276 14 "%0WDFDMATRANSACTION %10!p! cannot complete in a single transfer: transfer size %11!Iu!, device limit is %12!Iu!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::PrepareForSingleTransfer FUNC=FxDmaTransactionBase::PrepareForSingleTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmatransactionbase_cpp662 29 "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid (release transaction)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::ReleaseForReuse FUNC=FxDmaTransactionBase::ReleaseForReuse
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
#typev fxdmatransactionbase_cpp651 28 "%0WDFDMATRANSACTION %10!p! is already released, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::ReleaseForReuse FUNC=FxDmaTransactionBase::ReleaseForReuse
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmatransactionbase_cpp698 30 "%0Must set immediate execution flag for WDFDMATRANSACTION %10!p! before calling AllocateResources or Execute (current state is %11!s!)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::SetImmediateExecution FUNC=FxDmaTransactionBase::SetImmediateExecution
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxDmaTransactionStateInvalid=0x0,FxDmaTransactionStateCreated,FxDmaTransactionStateReserved,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
fc2c1296-a520-3fd4-5453-e7971188f69e base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmaenabler_cpp1098 28 "%0WDFDMAENABLER %10!p! AllocateCommonBuffer:  could cast value %11!I64d! to a ULONG" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::AllocateCommonBuffer FUNC=FxDmaEnabler::AllocateCommonBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
}
#typev fxdmaenabler_cpp603 19 "%0Unable to allocate scatter gather list for system DMA enabler %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::ConfigureSystemAdapter FUNC=FxDmaEnabler::ConfigureSystemAdapter
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmaenabler_cpp526 18 "%0WDFDMAENABLER %10!p!, profile %11!s! Enabler has already been configured for %12!s!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaEnabler::ConfigureSystemAdapter FUNC=FxDmaEnabler::ConfigureSystemAdapter
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_DMA_PROFILE) -- 11
Arg, ItemEnum(_WDF_DMA_DIRECTION) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmaenabler_cpp507 16 "%0Cannot set single transfer requirement for WDFDMAENABLER %10!p! because it is not configured to use DMA version 3, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::Initialize FUNC=FxDmaEnabler::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmaenabler_cpp507 17 "%0Cannot set single transfer requirement for WDFDMAENABLER %10!p!, only available for KMDF 1.19 and later clients, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::Initialize FUNC=FxDmaEnabler::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmaenabler_cpp377 15 "%0WdmDmaVersionOverride set to %10!d!, conflicts with required version of %11!d!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::Initialize FUNC=FxDmaEnabler::Initialize
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmaenabler_cpp350 14 "%0DMA AddressWidthOverride requires Windows version 6.2 or higher.  Windows cannot support %10!d! bit DMA is falling back to the next lower supported width (%11!d!-bit)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDMA FUNC=FxDmaEnabler::Initialize FUNC=FxDmaEnabler::Initialize
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxdmaenabler_cpp334 13 "%0AddressWidthOverride of less than 24 bits is not supported" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::Initialize FUNC=FxDmaEnabler::Initialize
{
}
#typev fxdmaenabler_cpp291 12 "%0AddressWidthOverride set to %10!d!.  AddressWidthOverride must be <= 32 when using a 32-bit DMA profile (%11!s!) - %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::Initialize FUNC=FxDmaEnabler::Initialize
{
Arg, ItemLong -- 10
Arg, ItemEnum(_WDF_DMA_PROFILE) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmaenabler_cpp275 11 "%0AddressWidthOverride set to %10!d!.  AddressWidthOverride must be zero when using a system DMA profile (%11!s!) - %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::Initialize FUNC=FxDmaEnabler::Initialize
{
Arg, ItemLong -- 10
Arg, ItemEnum(_WDF_DMA_PROFILE) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmaenabler_cpp146 10 "%0Unable to allocate DmaEnablerList for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::Initialize FUNC=FxDmaEnabler::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmaenabler_cpp901 23 "%0The maximum transfer length for WDFDMAENABLER %10!p! is reduced to %11!I64d! from %12!I64d! due to mapregisters limit" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaEnabler::InitializeResources FUNC=FxDmaEnabler::InitializeResources
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
}
#typev fxdmaenabler_cpp892 22 "%0WDFDMAENABLER %10!p!, profile %11!s! DmaAdapterObject %12!p!, MapRegisters %13!d!, MaximumFragmentLength %14!I64d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaEnabler::InitializeResources FUNC=FxDmaEnabler::InitializeResources
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_DMA_PROFILE) -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
Arg, ItemLongLong -- 14
}
#typev fxdmaenabler_cpp859 21 "%0CalculateScatterGatherList failed for WDFDMAENABLER %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::InitializeResources FUNC=FxDmaEnabler::InitializeResources
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmaenabler_cpp831 20 "%0Unable to allocate DmaAdapter object for WDFDMAENABLER %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::InitializeResources FUNC=FxDmaEnabler::InitializeResources
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmaenabler_cpp1069 27 "%0WDFDMAENABLER %10!p!: PowerDown: %11!s! failed %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::PowerDown FUNC=FxDmaEnabler::PowerDown
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxEvtDmaEnablerInvalid,FxEvtDmaEnablerFill,FxEvtDmaEnablerFlush,FxEvtDmaEnablerEnable,FxEvtDmaEnablerDisable,FxEvtDmaEnablerSelfManagedIoStart,FxEvtDmaEnablerSelfManagedIoStop) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmaenabler_cpp1028 26 "%0WDFDMAENABLER %10!p!: PowerDown notification" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaEnabler::PowerDown FUNC=FxDmaEnabler::PowerDown
{
Arg, ItemPtr -- 10
}
#typev fxdmaenabler_cpp1008 25 "%0WDFDMAENABLER %10!p!: PowerUp: %11!s! failed %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::PowerUp FUNC=FxDmaEnabler::PowerUp
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxEvtDmaEnablerInvalid,FxEvtDmaEnablerFill,FxEvtDmaEnablerFlush,FxEvtDmaEnablerEnable,FxEvtDmaEnablerDisable,FxEvtDmaEnablerSelfManagedIoStart,FxEvtDmaEnablerSelfManagedIoStop) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmaenabler_cpp968 24 "%0WDFDMAENABLER %10!p!: PowerUp notification" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaEnabler::PowerUp FUNC=FxDmaEnabler::PowerUp
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8bf21f6b-689f-3874-ab54-d8bed81f5c4b core // SRC=Unknown_cxx00 MJ= MN=
#typev FxValidateFunctions_hpp90 11 "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributesForParentHandle FUNC=FxValidateObjectAttributesForParentHandle
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev FxValidateFunctions_hpp78 10 "%0WDF_OBJECT_ATTRIBUTES required, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributesForParentHandle FUNC=FxValidateObjectAttributesForParentHandle
{
Arg, ItemNTSTATUS -- 10
}
#typev FxValidateFunctions_hpp100 12 "%0ParentObject required in WDF_OBJECT_ATTRIBUTES %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributesForParentHandle FUNC=FxValidateObjectAttributesForParentHandle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ebdb6fda-14fe-3d02-e83f-e9b413bc001c core // SRC=Unknown_cxx00 MJ= MN=
#typev fxdpcapi_cpp108 10 "%0WDF_DPC_CONFIG got Size %10!d!, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDpcCreate FUNC=imp_WdfDpcCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdpcapi_cpp193 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDpcEnqueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxdpcapi_cpp281 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDpcGetParentObject
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
1406772a-302d-36d4-88e5-876798f69c07 core // SRC=Unknown_cxx00 MJ= MN=
#typev fxchildlistapi_cpp559 35 "%0address description size %10!d! incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp559 37 "%0identification description size %10!d! incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp506 34 "%0cannot retrieve an address description from a list which was not initialized to use them, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlistapi_cpp530 36 "%0Must provide a valid AddressDescription because the WDFCHILDLIST 0x%10!p! is configured with AddressDescriptionSize, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxchildlistapi_cpp555 38 "%0Exit: WDFCHILDLIST %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxchildlistapi_cpp491 33 "%0Enter: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp310 23 "%0Iterator Flags 0x%10!x! not correct, valid mask 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListBeginIteration FUNC=imp_WdfChildListBeginIteration
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp301 22 "%0Iterator Size %10!d! not correct, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListBeginIteration FUNC=imp_WdfChildListBeginIteration
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp295 21 "%0Enter: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListBeginIteration FUNC=imp_WdfChildListBeginIteration
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp239 19 "%0Enter: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListBeginScan FUNC=imp_WdfChildListBeginScan
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp113 12 "%0Could not convert object to handle, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListCreate FUNC=imp_WdfChildListCreate
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlistapi_cpp81 11 "%0WDFDEVICE 0x%10!p! Config is invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListCreate FUNC=imp_WdfChildListCreate
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp64 10 "%0Enter, WDFDEVICE %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListCreate FUNC=imp_WdfChildListCreate
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp461 32 "%0Iterator Flags 0x%10!x! not correct, valid mask 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListEndIteration FUNC=imp_WdfChildListEndIteration
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp452 31 "%0Iterator Size %10!d! not correct, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListEndIteration FUNC=imp_WdfChildListEndIteration
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp446 30 "%0Enter: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListEndIteration FUNC=imp_WdfChildListEndIteration
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp263 20 "%0Enter: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListEndScan FUNC=imp_WdfChildListEndScan
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp138 13 "%0Enter: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListGetDevice FUNC=imp_WdfChildListGetDevice
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp795 54 "%0PDO WDFDEVICE %10!p! not reported yet to pnp, cannot eject!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfChildListRequestChildEject FUNC=imp_WdfChildListRequestChildEject
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp778 53 "%0found: WDFCHILDLIST %10!p!, WDFDEVICE PDO %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRequestChildEject FUNC=imp_WdfChildListRequestChildEject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlistapi_cpp763 52 "%0identification description size 0x%10!x! incorrect, expected 0x%11!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRequestChildEject FUNC=imp_WdfChildListRequestChildEject
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxchildlistapi_cpp750 51 "%0Enter: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRequestChildEject FUNC=imp_WdfChildListRequestChildEject
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp219 18 "%0Exit: WDFCHILDLIST %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveAddressDescription FUNC=imp_WdfChildListRetrieveAddressDescription
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxchildlistapi_cpp196 16 "%0cannot retrieve an address description from a list which was not initialized to use them, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveAddressDescription FUNC=imp_WdfChildListRetrieveAddressDescription
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlistapi_cpp225 15 "%0identification description size %10!d! incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveAddressDescription FUNC=imp_WdfChildListRetrieveAddressDescription
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp225 17 "%0description size %10!d! incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveAddressDescription FUNC=imp_WdfChildListRetrieveAddressDescription
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp168 14 "%0Enter: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveAddressDescription FUNC=imp_WdfChildListRetrieveAddressDescription
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp412 29 "%0address description size %10!d! incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice FUNC=imp_WdfChildListRetrieveNextDevice
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp400 28 "%0cannot retrieve an address description from a list which was not initialized to use them, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice FUNC=imp_WdfChildListRetrieveNextDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlistapi_cpp364 25 "%0Iterator Flags 0x%10!x! not correct, valid mask 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice FUNC=imp_WdfChildListRetrieveNextDevice
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp386 27 "%0identification description size %10!d! incorrect, expected %11!d!%12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice FUNC=imp_WdfChildListRetrieveNextDevice
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp424 24 "%0Iterator Size %10!d! not correct, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice FUNC=imp_WdfChildListRetrieveNextDevice
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp424 26 "%0Invalid RetrieveInfo Size %10!d!, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice FUNC=imp_WdfChildListRetrieveNextDevice
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp705 49 "%0address description size %10!d! incorrect, expected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo FUNC=imp_WdfChildListRetrievePdo
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxchildlistapi_cpp685 47 "%0identification description size %10!d! incorrect, expected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo FUNC=imp_WdfChildListRetrievePdo
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxchildlistapi_cpp677 46 "%0Invalid ID Description, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo FUNC=imp_WdfChildListRetrievePdo
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlistapi_cpp667 45 "%0Invalid RetrieveInfo Size %10!x!, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo FUNC=imp_WdfChildListRetrievePdo
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp697 48 "%0cannot retrieve an address description from a list which was not initialized to use them, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo FUNC=imp_WdfChildListRetrievePdo
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlistapi_cpp727 50 "%0Exit: WDFCHILDLIST %10!p!, WDFDEVICE Pdo %11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo FUNC=imp_WdfChildListRetrievePdo
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_CHILD_LIST_RETRIEVE_DEVICE_STATUS) -- 12
}
#typev fxchildlistapi_cpp655 44 "%0Enter: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo FUNC=imp_WdfChildListRetrievePdo
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp633 43 "%0Exit: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListUpdateAllChildDescriptionsAsPresent FUNC=imp_WdfChildListUpdateAllChildDescriptionsAsPresent
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp622 42 "%0Enter: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListUpdateAllChildDescriptionsAsPresent FUNC=imp_WdfChildListUpdateAllChildDescriptionsAsPresent
{
Arg, ItemPtr -- 10
}
#typev fxchildlistapi_cpp603 41 "%0Exit: WDFCHILDLIST %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListUpdateChildDescriptionAsMissing FUNC=imp_WdfChildListUpdateChildDescriptionAsMissing
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxchildlistapi_cpp592 40 "%0identification description size %10!d! incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListUpdateChildDescriptionAsMissing FUNC=imp_WdfChildListUpdateChildDescriptionAsMissing
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlistapi_cpp585 39 "%0Enter: WDFCHILDLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListUpdateChildDescriptionAsMissing FUNC=imp_WdfChildListUpdateChildDescriptionAsMissing
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicepdoapi_cpp50 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=GetPdoPackageFromDeviceHandle
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dc826a88-6618-3108-c9fb-002b1a047824 core // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicepdoapi_cpp72 10 "%0%10!s!: Incorrect device handle supplied (0x%11!p!).  Device is not a PDO." //   GLOBALS=(*ObjectGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=GetPdoPackageFromDeviceHandle FUNC=GetPdoPackageFromDeviceHandle
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicepdoapi_cpp178 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfPdoGetParent
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dc826a88-6618-3108-c9fb-002b1a047824 core // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicepdoapi_cpp189 13 "%0Can only eject PDOs, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoGetParent FUNC=imp_WdfPdoGetParent
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdevicepdoapi_cpp178 10 "%0%10!s!: Incorrect device handle supplied (0x%11!p!).  Device is not a PDO." //   GLOBALS=(*ObjectGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=GetPdoPackageFromDeviceHandle FUNC=imp_WdfPdoGetParent
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
}
#typev fxdevicepdoapi_cpp158 12 "%0Can only eject PDOs, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoRequestEject FUNC=imp_WdfPdoRequestEject
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdevicepdoapi_cpp151 11 "%0PDO WDFDEVICE %10!p! not reported yet to pnp, cannot eject!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoRequestEject FUNC=imp_WdfPdoRequestEject
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicepdoapi_cpp213 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfPdoRetrieveIdentificationDescription
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dc826a88-6618-3108-c9fb-002b1a047824 core // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicepdoapi_cpp213 10 "%0%10!s!: Incorrect device handle supplied (0x%11!p!).  Device is not a PDO." //   GLOBALS=(*ObjectGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=GetPdoPackageFromDeviceHandle FUNC=imp_WdfPdoRetrieveIdentificationDescription
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
954da655-e002-3917-f141-404e4f9690fd core // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicefdoapi_cpp96 11 "%0WDFDEVICE Child 0x%10!p! is either legacy or is not a PDO, %11!s!" //   GLOBALS=pFdo->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoAddStaticChild FUNC=imp_WdfFdoAddStaticChild
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicefdoapi_cpp80 10 "%0WDFDEVICE 0x%10!p! is either legacy or is not a Fdo, %11!s!" //   GLOBALS=pFdo->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoAddStaticChild FUNC=imp_WdfFdoAddStaticChild
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicefdoapi_cpp361 17 "%0Default child list for FDO %10!p! not configured, call WdfFdoInitSetDefaultChildListConfig to do so" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoGetDefaultChildList FUNC=imp_WdfFdoGetDefaultChildList
{
Arg, ItemPtr -- 10
}
#typev fxdevicefdoapi_cpp348 16 "%0WDFDEVICE %10!p! is not an FDO" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoGetDefaultChildList FUNC=imp_WdfFdoGetDefaultChildList
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicefdoapi_cpp151 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfFdoLockStaticChildListForIteration
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
954da655-e002-3917-f141-404e4f9690fd core // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicefdoapi_cpp161 12 "%0Invalid WDFDEVICE %10!p! is not an FDO" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoLockStaticChildListForIteration FUNC=imp_WdfFdoLockStaticChildListForIteration
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
d63b80db-0005-3b31-8c66-84ea6a6943da core // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicefdoapi_cpp176 17 "%0Begin iteration on WDFCHILDLIST %10!p!, scan count %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::BeginIteration FUNC=imp_WdfFdoLockStaticChildListForIteration
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicefdoapi_cpp222 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfFdoRetrieveNextStaticChild
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
954da655-e002-3917-f141-404e4f9690fd core // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicefdoapi_cpp232 13 "%0Invalid Flags 0x%10!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoRetrieveNextStaticChild FUNC=imp_WdfFdoRetrieveNextStaticChild
{
Arg, ItemLong -- 10
}
#typev fxdevicefdoapi_cpp243 14 "%0WDFDEVICE %10!p! is not an FDO" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoRetrieveNextStaticChild FUNC=imp_WdfFdoRetrieveNextStaticChild
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicefdoapi_cpp284 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfFdoUnlockStaticChildListFromIteration
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
954da655-e002-3917-f141-404e4f9690fd core // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicefdoapi_cpp294 15 "%0WDFDEVICE %10!p! is not an FDO" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoUnlockStaticChildListFromIteration FUNC=imp_WdfFdoUnlockStaticChildListFromIteration
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
d63b80db-0005-3b31-8c66-84ea6a6943da core // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicefdoapi_cpp308 18 "%0end iteration on WDFCHILDLIST" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndIteration FUNC=imp_WdfFdoUnlockStaticChildListFromIteration
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b47969d7-3663-3da0-8393-7448b72e221c core // SRC=Unknown_cxx00 MJ= MN=
#typev tracing_cpp303 11 "%0FxIFR has been started with a size override:  size 0x%10!x! bytes, # Pages %11!d!.  An extended IFR size may not be written to a minidump!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=FxIFRStart FUNC=FxIFRStart
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev tracing_cpp299 10 "%0FxIFR logging started" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=FxIFRStart FUNC=FxIFRStart
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
22854abf-8d2f-30d1-af8c-ad105a78ebfb core // SRC=Unknown_cxx00 MJ= MN=
#typev fxdpc_cpp68 10 "%0Destroy WDFDPC %10!p! destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove.  Possible reference count problem?" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDpc::~FxDpc FUNC=FxDpc::~FxDpc
{
Arg, ItemPtr -- 10
}
#typev fxdpc_cpp202 11 "%0ParentObject %10!p! can not automatically synchronize callbacks with a DPC since it is configured for passive level callback constraints. Set AutomaticSerialization to FALSE. %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDpc::Initialize FUNC=FxDpc::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
d63b80db-0005-3b31-8c66-84ea6a6943da core // SRC=Unknown_cxx00 MJ= MN=
#typev fxchildlist_cpp842 17 "%0Begin iteration on WDFCHILDLIST %10!p!, scan count %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::BeginIteration FUNC=FxChildList::BeginIteration
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxchildlist_cpp566 11 "%0Begin scan on WDFCHILDLIST %10!p!, scan count %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::BeginScan FUNC=FxChildList::BeginScan
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxchildlist_cpp1711 23 "%0clone successful (new entry is %10!p!), marking PDO WDFDEVICE %11!p!, !devobj %12!p! as missing" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::CloneEntryLocked FUNC=FxChildList::CloneEntryLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxchildlist_cpp1684 22 "%0attempting to clone PDO WDFDEVICE %10!p!, !devobj %11!p!, From QDR %12!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::CloneEntryLocked FUNC=FxChildList::CloneEntryLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}
#typev fxchildlist_cpp2355 33 "%0WDFDEVICE %10!p! !devobj %11!p! created, but EvtChildListCreateDevice returned status %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::CreateDevice FUNC=FxChildList::CreateDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlist_cpp2301 32 "%0EvtChildListCreateDevice returned a successful status %10!s! but did not create a device object" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::CreateDevice FUNC=FxChildList::CreateDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlist_cpp854 18 "%0end iteration on WDFCHILDLIST" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndIteration FUNC=FxChildList::EndIteration
{
}
#typev fxchildlist_cpp737 16 "%0marking PDO (entry %10!p!) which needs instantiation as not present" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndScan FUNC=FxChildList::EndScan
{
Arg, ItemPtr -- 10
}
#typev fxchildlist_cpp729 15 "%0marking PDO WDFDEVICE %10!p!, !devobj %11!p! as not present" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndScan FUNC=FxChildList::EndScan
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp670 14 "%0clone of PDO WDFDEVICE %10!p!, !devobj %11!p! dropped because it is missing" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndScan FUNC=FxChildList::EndScan
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp652 13 "%0entry %10!p! modified in last scan, mod state  %11!s!,desc state %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndScan FUNC=FxChildList::EndScan
{
Arg, ItemPtr -- 10
Arg, ItemListLong(ModificationUnspecified=0x0,ModificationInsert,ModificationRemove,ModificationRemoveNotify,ModificationClone,ModificationNeedsPnpRemoval) -- 11
Arg, ItemListLong(DescriptionUnspecified=0x0,DescriptionPresentNeedsInstantiation,DescriptionInstantiatedHasObject,DescriptionReportedMissing,DescriptionNotPresent) -- 12
}
#typev fxchildlist_cpp630 12 "%0End scan on WDFCHILDLIST %10!p!, scan count %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndScan FUNC=FxChildList::EndScan
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxchildlist_cpp892 19 "%0WDFCHILDLIST %10!p! cannot retrieve next device if the list is not locked for iteration, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::GetNextDevice FUNC=FxChildList::GetNextDevice
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxchildlist_cpp3118 51 "%0Removing entry %10!p!, WDFDEVICE %11!p!, PDO %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::NotifyDeviceRemove FUNC=FxChildList::NotifyDeviceRemove
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxchildlist_cpp3070 50 "%0WDFCHILDLIST %10!p!:  removing children" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::NotifyDeviceRemove FUNC=FxChildList::NotifyDeviceRemove
{
Arg, ItemPtr -- 10
}
#typev fxchildlist_cpp2813 49 "%0Freeing prior relations %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
}
#typev fxchildlist_cpp2763 48 "%0PDO WDFDEVICE %10!p! !devobj %11!p! reported as missing to pnp" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp2704 44 "%0WDFCHILDLIST %10!p! prior relations %11!p! contained %12!d! objects" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}
#typev fxchildlist_cpp2665 42 "%0PDO WDFDEVICE %10!p! !devobj %11!p! is a statically enumerated PDO therefore can not be cloned and is being marked missing because of failure to allocate device relations. It will be surprise removed by pnp manager. Bus driver may continue to function normally but will lose this child PDO" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp2652 41 "%0PDO WDFDEVICE %10!p! !devobj %11!p! being cloned because of the failure to allocate device relations" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp2641 40 "%0PDO WDFDEVICE %10!p! !devobj %11!p! being marked as missing because of failure to allocate device relations and an already existing relations %12!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxchildlist_cpp2686 43 "%0PDO WDFDEVICE %10!p! !devobj %11!p! reported as missing to pnp (by using existing relations)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp2597 39 "%0WDFCHILDLIST %10!p! retried %11!d! times to report relations, but failed each time" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxchildlist_cpp2590 38 "%0WDFCHILDLIST %10!p! could not allocate relations required for reporting children as missing after max retries" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
}
#typev fxchildlist_cpp2572 37 "%0Could not allocate relations for %10!d! devices" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemLong -- 10
}
#typev fxchildlist_cpp2534 35 "%0PDO WDFDEVICE %10!p! !devobj %11!p! reported as missing to pnp" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp2739 46 "%0PDO created successfully, WDFDEVICE %10!p! !devobj %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp2733 45 "%0Creating PDO device object from reported device" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
}
#typev fxchildlist_cpp2473 34 "%0PDO WDFDEVICE %10!p! !devobj %11!p! in a not present state, need to report as missing" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp2748 47 "%0Reporting PDO WDFDEVICE %10!p! !devobj %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp2545 36 "%0Nothing to report on WDFCHILDLIST %10!p!, returning early" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations FUNC=FxChildList::ProcessBusRelations
{
Arg, ItemPtr -- 10
}
#typev fxchildlist_cpp1858 28 "%0entry %10!p! never reported to pnp, mark for deletion" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked FUNC=FxChildList::ProcessModificationsLocked
{
Arg, ItemPtr -- 10
}
#typev fxchildlist_cpp1891 30 "%0marking entry %10!p! as needing instantiation" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked FUNC=FxChildList::ProcessModificationsLocked
{
Arg, ItemPtr -- 10
}
#typev fxchildlist_cpp1768 24 "%0Not processing modifications on WDFCHILDLIST %10!p! (list state %11!d!, scan count %12!d!)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked FUNC=FxChildList::ProcessModificationsLocked
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxchildlist_cpp1867 29 "%0committing PDO WDFDEVICE %10!p!, !devobj %11!p! as not present" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked FUNC=FxChildList::ProcessModificationsLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp1841 27 "%0processing remove on entry %10!p!, description state is %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked FUNC=FxChildList::ProcessModificationsLocked
{
Arg, ItemPtr -- 10
Arg, ItemListLong(DescriptionUnspecified=0x0,DescriptionPresentNeedsInstantiation,DescriptionInstantiatedHasObject,DescriptionReportedMissing,DescriptionNotPresent) -- 11
}
#typev fxchildlist_cpp1827 26 "%0entry %10!p!, mod state is %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked FUNC=FxChildList::ProcessModificationsLocked
{
Arg, ItemPtr -- 10
Arg, ItemListLong(ModificationUnspecified=0x0,ModificationInsert,ModificationRemove,ModificationRemoveNotify,ModificationClone,ModificationNeedsPnpRemoval) -- 11
}
#typev fxchildlist_cpp1929 31 "%0end processing modifications on WDFCHILDLIST %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked FUNC=FxChildList::ProcessModificationsLocked
{
Arg, ItemPtr -- 10
}
#typev fxchildlist_cpp1775 25 "%0Begin processing modifications on WDFCHILDLIST %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked FUNC=FxChildList::ProcessModificationsLocked
{
Arg, ItemPtr -- 10
}
#typev fxchildlist_cpp1369 20 "%0Inserting clone modification for PDO WDFDEVICE %10!p!, !devobj %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ReenumerateEntryLocked FUNC=FxChildList::ReenumerateEntryLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxchildlist_cpp1388 21 "%0Requested reenumeration for PDO WDFDEVICE %10!p!, !devobj %11!p! no possible (pending mod %12!d!, currently present %13!d!)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ReenumerateEntryLocked FUNC=FxChildList::ReenumerateEntryLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}
#typev fxchildlist_cpp3240 57 "%0Config->AddressDescriptionSize %10!d! too large, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ComputeTotalDescriptionSize FUNC=FxChildList::_ComputeTotalDescriptionSize
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxchildlist_cpp3229 56 "%0Config->IdentificationDescriptionSize %10!d! too large%11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ComputeTotalDescriptionSize FUNC=FxChildList::_ComputeTotalDescriptionSize
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxchildlist_cpp3252 58 "%0Could not add ID description size to block size, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ComputeTotalDescriptionSize FUNC=FxChildList::_ComputeTotalDescriptionSize
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlist_cpp3263 59 "%0Could not add address description size to block size, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ComputeTotalDescriptionSize FUNC=FxChildList::_ComputeTotalDescriptionSize
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlist_cpp388 10 "%0No memory for WDFCHILDLIST handle, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_CreateAndInit FUNC=FxChildList::_CreateAndInit
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlist_cpp3188 55 "%0Config->EvtChildListCreateDevice, NULL is not allowed, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ValidateConfig FUNC=FxChildList::_ValidateConfig
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlist_cpp3181 54 "%0Config->IdentificationDescriptionSize must be non zero, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ValidateConfig FUNC=FxChildList::_ValidateConfig
{
Arg, ItemNTSTATUS -- 10
}
#typev fxchildlist_cpp3174 53 "%0Config->Size incorrect, expected %10!d!, got %11!d!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ValidateConfig FUNC=FxChildList::_ValidateConfig
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxchildlist_cpp3167 52 "%0Invalid Config, NULL is not allowed, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ValidateConfig FUNC=FxChildList::_ValidateConfig
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
7711d6fb-4fe1-31a7-7f22-fbe47bb83558 core // SRC=Unknown_cxx00 MJ= MN=
#typev tracingifrreplay_cpp233 13 "%0FxIFR failed to copy IFR log with %10!s! for driver %11!s!" //   GLOBALS=FxGlobalsForTracing LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIFRCAPTURE FUNC=FxIFRCreateSnapshot FUNC=FxIFRCreateSnapshot
{
Arg, ItemNTSTATUS -- 10
Arg, ItemString -- 11
}
#typev tracingifrreplay_cpp168 11 "%0Hint: Service name must be provided, NOT image name." //   GLOBALS=FxGlobalsForTracing LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIFRCAPTURE FUNC=FxIFRCreateSnapshot FUNC=FxIFRCreateSnapshot
{
}
#typev tracingifrreplay_cpp166 10 "%0Unable to replay IFR. Service %10!s! was not found loaded." //   GLOBALS=FxGlobalsForTracing LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIFRCAPTURE FUNC=FxIFRCreateSnapshot FUNC=FxIFRCreateSnapshot
{
Arg, ItemString -- 10
}
#typev tracingifrreplay_cpp175 12 "%0Unable to replay. IFR log unavailable for driver %10!s!." //   GLOBALS=FxGlobalsForTracing LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIFRCAPTURE FUNC=FxIFRCreateSnapshot FUNC=FxIFRCreateSnapshot
{
Arg, ItemString -- 10
}
#typev tracingifrreplay_cpp650 18 "%0IFR Replay complete with status %10!s!" //   GLOBALS=pFxGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIFRCAPTURE FUNC=FxIFRReplay FUNC=FxIFRReplay
{
Arg, ItemNTSTATUS -- 10
}
#typev tracingifrreplay_cpp635 17 "%0-----> Replaying IFR for %10!s! complete" //   GLOBALS=pFxGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIFRCAPTURE FUNC=FxIFRReplay FUNC=FxIFRReplay
{
Arg, ItemString -- 10
}
#typev tracingifrreplay_cpp631 16 "%0-----> Replaying IFR for %10!s! failed %11!s!" //   GLOBALS=pFxGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIFRCAPTURE FUNC=FxIFRReplay FUNC=FxIFRReplay
{
Arg, ItemString -- 10
Arg, ItemNTSTATUS -- 11
}
#typev tracingifrreplay_cpp625 15 "%0-----> Replaying IFR for driver service %10!s!" //   GLOBALS=pFxGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIFRCAPTURE FUNC=FxIFRReplay FUNC=FxIFRReplay
{
Arg, ItemString -- 10
}
#typev tracingifrreplay_cpp567 14 "%0No IFRs to replay. IFR is disabled globally" //   GLOBALS=pFxGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIFRCAPTURE FUNC=FxIFRReplay FUNC=FxIFRReplay
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0c7f9312-ccee-39e0-989b-1b9c09859579 wmi // SRC=Unknown_cxx00 MJ= MN=
#typev fxwmiapi_cpp190 14 "%0WMI Guid already registered by framework" //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWmiInstanceCreate FUNC=imp_WdfWmiInstanceCreate
{
}
#typev fxwmiapi_cpp146 13 "%0InstanceConfig %10!p! Provider %11!p! and ProviderConfig %12!p! are both not NULL, only one can be, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWmiInstanceCreate FUNC=imp_WdfWmiInstanceCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxwmiapi_cpp135 12 "%0InstanceConfig %10!p! Provider and ProviderConfig are both NULL, only one can be, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWmiInstanceCreate FUNC=imp_WdfWmiInstanceCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxwmiapi_cpp124 11 "%0Expected InstanceConfig Size %10!d!, got %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWmiInstanceCreate FUNC=imp_WdfWmiInstanceCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxwmiapi_cpp80 10 "%0WMI Guid already registered by framework" //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWmiProviderCreate FUNC=imp_WdfWmiProviderCreate
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2e15e356-e2f6-35b2-4f32-f29e73d8d649 wmi // SRC=Unknown_cxx00 MJ= MN=
#typev fxwmiprovider_cpp364 18 "%0WDFWMIINSTANCE %10!p! cannot be added to tracing WDFWMIPROVIDER %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiProvider::AddInstance FUNC=FxWmiProvider::AddInstance
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxwmiprovider_cpp276 16 "%0WDFWMIINSTANCE %10!p! already added, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiProvider::AddInstanceLocked FUNC=FxWmiProvider::AddInstanceLocked
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxwmiprovider_cpp317 17 "%0WMI is being cleanedup, WDFWMIINSTANCE %10!p! add failing, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=FxWmiProvider::AddInstanceLocked FUNC=FxWmiProvider::AddInstanceLocked
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxwmiprovider_cpp172 13 "%0EvtWmiProviderFunctionControl can only be set if Flags 0x%10!x! has WdfWmiProviderTracing (%11!d!) or WdfWmiProviderExpensive (%12!d!) bit values set, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create FUNC=FxWmiProvider::_Create
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxwmiprovider_cpp137 11 "%0Invalid flag(s) set, Flags 0x%10!x!, valid mask 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create FUNC=FxWmiProvider::_Create
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxwmiprovider_cpp126 10 "%0WmiProviderConfig Size 0x%10!x!, expected size 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create FUNC=FxWmiProvider::_Create
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxwmiprovider_cpp190 14 "%0WmiProvider Guid filed is all zeros, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create FUNC=FxWmiProvider::_Create
{
Arg, ItemNTSTATUS -- 10
}
#typev fxwmiprovider_cpp149 12 "%0WdfWmiProviderTracing must be the only flag set, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create FUNC=FxWmiProvider::_Create
{
Arg, ItemNTSTATUS -- 10
}
#typev fxwmiprovider_cpp206 15 "%0Could not allocate memory for a WDFWMIPROVIDER, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create FUNC=FxWmiProvider::_Create
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
d05f947e-0110-3d72-ac3a-a526ed9f8a39 wmi // SRC=Unknown_cxx00 MJ= MN=
#typev fxwmiinstance_cpp119 10 "%0WDFWMIINSTANCE %10!p! insufficient resources to fire event,%11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstance::FireEvent FUNC=FxWmiInstance::FireEvent
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxwmiinstance_cpp431 20 "%0WDFWMIINSTANCE %10!p! was queried with buffer size %11!d!,  but returned %12!d! bytes and %13!s!, should return !NT_SUCCESS in this case" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiInstanceExternal::QueryInstance FUNC=FxWmiInstanceExternal::QueryInstance
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxwmiinstance_cpp383 18 "%0WDFWMIINSTANCE %10!p! query instance using context for query, query buffer length %11!d!, context length %12!d!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::QueryInstance FUNC=FxWmiInstanceExternal::QueryInstance
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxwmiinstance_cpp459 22 "%0This is a break in the contract.  Minimum instance size should only be used for fixed sized instances" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiInstanceExternal::QueryInstance FUNC=FxWmiInstanceExternal::QueryInstance
{
}
#typev fxwmiinstance_cpp453 21 "%0WDFWMIINSTANCE %10!p! returned %11!s!, but it specified a minimum instance size %12!d! in its WDFWMIPROVIDER %13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiInstanceExternal::QueryInstance FUNC=FxWmiInstanceExternal::QueryInstance
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
}
#typev fxwmiinstance_cpp471 23 "%0WDFWMIINSTANCE %10!p! was queried with no query callback and supports execute method (%11!p!), zero bytes returned" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiInstanceExternal::QueryInstance FUNC=FxWmiInstanceExternal::QueryInstance
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxwmiinstance_cpp415 19 "%0WDFWMIINSTANCE %10!p! was queried and returned %11!s!, which is not an allowed return value" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiInstanceExternal::QueryInstance FUNC=FxWmiInstanceExternal::QueryInstance
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxwmiinstance_cpp215 12 "%0UseContextForQuery set, i.e. a read only instance, but EvtWmiInstanceSetInstance %10!p! or EvtWmiInstanceSetItem %11!p! is set, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create FUNC=FxWmiInstanceExternal::_Create
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxwmiinstance_cpp233 13 "%0UseContextForQuery set, but InstanceAttributes %10!p! is null or there is no associated type, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create FUNC=FxWmiInstanceExternal::_Create
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxwmiinstance_cpp281 16 "%0context size %10!I64d! is less then the WDFWMIPROVIDER %11!p! min size of %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create FUNC=FxWmiInstanceExternal::_Create
{
Arg, ItemLongLong -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxwmiinstance_cpp249 14 "%0Overlfow adding contextSize %10!I64d! with size override %11!I64d!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create FUNC=FxWmiInstanceExternal::_Create
{
Arg, ItemLongLong -- 10
Arg, ItemLongLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxwmiinstance_cpp267 15 "%0context size %10!I64d! can be %11!d! large, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create FUNC=FxWmiInstanceExternal::_Create
{
Arg, ItemLongLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxwmiinstance_cpp185 11 "%0WDFWMIPROVIDER %10!p! is event only and UseContextForQuery (%11!d!) is TRUE, or a callback (query instance %12!p!, set instance %13!p!, set item %14!p!, executue method %15!p!) is not NULL, %16!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create FUNC=FxWmiInstanceExternal::_Create
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
Arg, ItemPtr -- 15
Arg, ItemNTSTATUS -- 16
}
#typev fxwmiinstance_cpp298 17 "%0could not allocate memory for WDFWMIINSTANCE, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create FUNC=FxWmiInstanceExternal::_Create
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
bc9bae4b-9603-35e1-46c5-2f82117f57b1 wmi // SRC=Unknown_cxx00 MJ= MN=
#typev fxwmiirphandler_cpp473 13 "%0WMI Guid already registered by client driver" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxWmiIrpHandler::AddPowerPolicyProviderAndInstance FUNC=FxWmiIrpHandler::AddPowerPolicyProviderAndInstance
{
}
#typev fxwmiirphandler_cpp1934 24 "%0Converting %10!s! to %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::CompleteWmiRequest FUNC=FxWmiIrpHandler::CompleteWmiRequest
{
Arg, ItemNTSTATUS -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxwmiirphandler_cpp208 11 "%0failure deregistering WMI with OS, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::Deregister FUNC=FxWmiIrpHandler::Deregister
{
Arg, ItemNTSTATUS -- 10
}
#typev fxwmiirphandler_cpp663 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! IRP_MJ_SYSTEM_CONTROL, %12!s! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxWmiIrpHandler::Dispatch FUNC=FxWmiIrpHandler::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_QUERY_ALL_DATA,IRP_MN_QUERY_SINGLE_INSTANCE,IRP_MN_CHANGE_SINGLE_INSTANCE,IRP_MN_CHANGE_SINGLE_ITEM,IRP_MN_ENABLE_EVENTS,IRP_MN_DISABLE_EVENTS,IRP_MN_ENABLE_COLLECTION,IRP_MN_DISABLE_COLLECTION,IRP_MN_REGINFO,IRP_MN_EXECUTE_METHOD,IRP_MN_Reserved_0a,IRP_MN_REGINFO_EX) -- 12
Arg, ItemPtr -- 13
}
#typev fxwmiirphandler_cpp149 10 "%0could not register WMI with OS, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::Register FUNC=FxWmiIrpHandler::Register
{
Arg, ItemNTSTATUS -- 10
}
#typev fxwmiirphandler_cpp379 12 "%0IoWMIRegistrationControl DevObj %10!p!, for UpdateGuids failed, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxWmiIrpHandler::UpdateGuids FUNC=FxWmiIrpHandler::UpdateGuids
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxwmiirphandler_cpp1209 21 "%0WDFWMIPROVIDER %10!p! QueryAllData returning %11!s!, requesting buffer size of 0x%12!x!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData FUNC=FxWmiIrpHandler::_QueryAllData
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
Arg, ItemLong -- 12
}
#typev fxwmiirphandler_cpp1138 19 "%0WDFWMIPROVIDER %10!p!, arithmetic overflow in computing block offset, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData FUNC=FxWmiIrpHandler::_QueryAllData
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxwmiirphandler_cpp901 15 "%0Failing QueryAllData since no instances found for WDFWMIPROVIDER %10!p!, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData FUNC=FxWmiIrpHandler::_QueryAllData
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxwmiirphandler_cpp1081 18 "%0WDFWMIINSTNACE %10!p! queried, returned a buffer size of %11!d!,but it could not be rounded up, %12!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData FUNC=FxWmiIrpHandler::_QueryAllData
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxwmiirphandler_cpp1230 22 "%0WDFWMIPROVIDER %10!p! QueryAllData returning %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData FUNC=FxWmiIrpHandler::_QueryAllData
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxwmiirphandler_cpp1238 23 "%0WDFWMIPROVIDER %10!p! QueryAllData returning %11!s!, buffer used 0x%12!x!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData FUNC=FxWmiIrpHandler::_QueryAllData
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
Arg, ItemLong -- 12
}
#typev fxwmiirphandler_cpp1158 20 "%0WDFWMIPROVIDER %10!p!, arithmetic overflow in computing buffer consumed(%11!d!+%12!d!), %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData FUNC=FxWmiIrpHandler::_QueryAllData
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxwmiirphandler_cpp952 17 "%0Failing QueryAllData since integer overflow occured using provider instance count %10!d! for WDFWMIPROVIDER %11!p!, %12!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData FUNC=FxWmiIrpHandler::_QueryAllData
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxwmiirphandler_cpp910 16 "%0WDFWMIPROVIDER %10!p! QueryAllData, num instances %11!d!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData FUNC=FxWmiIrpHandler::_QueryAllData
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65375249-451f-3e80-d606-65f9fcc0d369 support // SRC=Unknown_cxx00 MJ= MN=
#typev fxqueryinterfaceapi_cpp178 16 "%0WDFDEVICE %10!p!, object creation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface FUNC=imp_WdfDeviceAddQueryInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxqueryinterfaceapi_cpp195 17 "%0WDFDEVICE %10!p!, interface allocation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface FUNC=imp_WdfDeviceAddQueryInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxqueryinterfaceapi_cpp158 15 "%0WDFDEVICE %10!p!, Interface size %11!d! < sizeof(INTERFACE) (%12!d!), %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface FUNC=imp_WdfDeviceAddQueryInterface
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxqueryinterfaceapi_cpp142 14 "%0WDFDEVICE %10!p!, ImportInterface is TRUE and EvtDeviceProcessQueryInterfaceRequest is NULL, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface FUNC=imp_WdfDeviceAddQueryInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxqueryinterfaceapi_cpp124 13 "%0WDFDEVICE %10!p!,  SendQueryToParentStack is FALSE and InterfaceConfig->ImportInterface is FALSE, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface FUNC=imp_WdfDeviceAddQueryInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxqueryinterfaceapi_cpp101 12 "%0SendQueryToParentStack TRUE, but WDFDEVICE %10!p! not a PDO, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface FUNC=imp_WdfDeviceAddQueryInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxqueryinterfaceapi_cpp86 11 "%0WDFDEVICE %10!p!, WDF_QUERY_INTERFACE_CONFIG Size %11!d!, expected %12!d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface FUNC=imp_WdfDeviceAddQueryInterface
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxqueryinterfaceapi_cpp73 10 "%0WDFDEVICE 0x%10!p! is not a PnP device %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface FUNC=imp_WdfDeviceAddQueryInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
30996475-1cfd-3bc3-c14e-b8eb0b9a7879 companionlibrary // SRC=Unknown_cxx00 MJ= MN=
#typev fxcompaniontargetapi_cpp91 11 "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCompanionTargetSendTaskSynchronously FUNC=imp_WdfCompanionTargetSendTaskSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxcompaniontargetapi_cpp109 12 "%0Only WdfMemoryDescriptorTypeBuffer type is supported at this time" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCompanionTargetSendTaskSynchronously FUNC=imp_WdfCompanionTargetSendTaskSynchronously
{
}
#typev fxcompaniontargetapi_cpp83 10 "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCompanionTargetSendTaskSynchronously FUNC=imp_WdfCompanionTargetSendTaskSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
69912f6f-25de-3793-501b-db105aac6431 companionlibrary // SRC=Unknown_cxx00 MJ= MN=
#typev fxcompanionlibrary_cpp583 30 "%0Failed to get companion service name from kmdf service key, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp658 35 "%0Device capability indicates that device is not secure. Secure driver companion won't be loaded." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
}
#typev fxcompanionlibrary_cpp652 34 "%0Failed to query DEVPKEY_Device_Capabilities, expect DEVPROP_TYPE_UINT32, got %10!d!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
Arg, ItemLong -- 10
}
#typev fxcompanionlibrary_cpp646 33 "%0Failed to query DEVPKEY_Device_Capabilities, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp620 32 "%0Failed to get companion service type, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp608 31 "%0Failed to get companion service name from kmdf service key, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp568 29 "%0Failed to allocate memory for CompanionServiceList, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp540 27 "%0Failed to retrieve SoftwareDeviceTag, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp535 26 "%0SoftwareDeviceTag is present for this device" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
}
#typev fxcompanionlibrary_cpp514 25 "%0Error opening %10!s! sub key under WUDF %11!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
Arg, ItemPWString -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxcompanionlibrary_cpp499 24 "%0Unexpected error obtaining service name for companion" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
}
#typev fxcompanionlibrary_cpp485 23 "%0Error opening WUDF sub key %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp557 28 "%0Failed to get size of CompanionServiceList, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp470 22 "%0Error opening device key %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice FUNC=FxCompanionLibrary::IsCompanionRequiredForDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp379 21 "%0Companion loaded successfully, reflector device interface %10!p!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::LoadCompanion FUNC=FxCompanionLibrary::LoadCompanion
{
Arg, ItemPtr -- 10
}
#typev fxcompanionlibrary_cpp372 20 "%0Error loading companion %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::LoadCompanion FUNC=FxCompanionLibrary::LoadCompanion
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp357 19 "%0Error opening companion library interface %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::LoadCompanion FUNC=FxCompanionLibrary::LoadCompanion
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp346 18 "%0Error copying service string for companion %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::LoadCompanion FUNC=FxCompanionLibrary::LoadCompanion
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp337 17 "%0Unable to allocate %10!u! bytes for service name" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::LoadCompanion FUNC=FxCompanionLibrary::LoadCompanion
{
Arg, ItemLong -- 10
}
#typev fxcompanionlibrary_cpp329 16 "%0Size computation for kernel service name failed %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::LoadCompanion FUNC=FxCompanionLibrary::LoadCompanion
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp321 15 "%0Unexpected error obtaining service name for companion" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::LoadCompanion FUNC=FxCompanionLibrary::LoadCompanion
{
}
#typev fxcompanionlibrary_cpp154 13 "%0Error %10!s! sending IOCTL_WUDFRDNONPNP_QUERY_INTERFACE" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::LoadReflectorServiceAndOpenInterfaceLocked FUNC=FxCompanionLibrary::LoadReflectorServiceAndOpenInterfaceLocked
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp139 12 "%0Error %10!s! allocating IRP IOCTL_WUDFRDNONPNP_QUERY_INTERFACE" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::LoadReflectorServiceAndOpenInterfaceLocked FUNC=FxCompanionLibrary::LoadReflectorServiceAndOpenInterfaceLocked
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp113 11 "%0Error opening companion service control device %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::LoadReflectorServiceAndOpenInterfaceLocked FUNC=FxCompanionLibrary::LoadReflectorServiceAndOpenInterfaceLocked
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp97 10 "%0Error loading companion driver service %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::LoadReflectorServiceAndOpenInterfaceLocked FUNC=FxCompanionLibrary::LoadReflectorServiceAndOpenInterfaceLocked
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcompanionlibrary_cpp208 14 "%0Error opening companion library interface %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionLibrary::OpenCompanionLibraryInterface FUNC=FxCompanionLibrary::OpenCompanionLibraryInterface
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b0fa40bd-cd3f-3e7e-df26-6bdd4962f1e6 companionlibrary // SRC=Unknown_cxx00 MJ= MN=
#typev fxcompaniontarget_cpp380 14 "%0WDFCOMPANIONTARGET %10!p!, Waiting on Dispose event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxCompanionTarget::Dispose FUNC=FxCompanionTarget::Dispose
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxcompaniontarget_cpp68 10 "%0Device companion for %10!p! has failed, so device will be marked failed." //   GLOBALS=m_Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionTarget::InvalidateDeviceStateAndReportFailed FUNC=FxCompanionTarget::InvalidateDeviceStateAndReportFailed
{
Arg, ItemPtr -- 10
}
#typev fxcompaniontarget_cpp321 12 "%0QuerySecureDeviceToken is not supported for PDO WDFDEVICE %10!p!." //   GLOBALS=m_Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionTarget::QuerySecureDeviceToken FUNC=FxCompanionTarget::QuerySecureDeviceToken
{
Arg, ItemPtr -- 10
}
#typev fxcompaniontarget_cpp340 13 "%0Failed to retrieve secure device token for WDFDEVICE %10!p!." //   GLOBALS=m_Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionTarget::QuerySecureDeviceToken FUNC=FxCompanionTarget::QuerySecureDeviceToken
{
Arg, ItemPtr -- 10
}
#typev fxcompaniontarget_cpp103 11 "%0Failing task delivery. Sending task after WDFCOMPANIONTARGET 0x%10!p! is disposed." //   GLOBALS=m_Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxCompanionTarget::SendTaskSynchronously FUNC=FxCompanionTarget::SendTaskSynchronously
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ff9ca437-0e90-3a8e-c879-edfcb2241c84 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev verifier_cpp633 13 "%0WDFHANDLE %10!p! failed to add context, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=VfAddContextToHandle FUNC=VfAddContextToHandle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev verifier_cpp614 12 "%0WDFHANDLE %10!p! cannot have contexts added to it, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=VfAddContextToHandle FUNC=VfAddContextToHandle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev verifier_cpp544 11 "%0Attributes %10!p! ContextTypeInfo is NULL, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=VfAllocateContext FUNC=VfAllocateContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev verifier_cpp493 10 "%0Attempting to get context type %10!s! from WDFOBJECT 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=VfWdfObjectGetTypedContext FUNC=VfWdfObjectGetTypedContext
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
3f0c51a2-b235-3966-ec02-fa3084c9ad6e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxValidateFunctions_hpp151 16 "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateUnicodeString FUNC=FxValidateUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev FxValidateFunctions_hpp142 15 "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateUnicodeString FUNC=FxValidateUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev FxValidateFunctions_hpp133 14 "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateUnicodeString FUNC=FxValidateUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev FxValidateFunctions_hpp124 13 "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateUnicodeString FUNC=FxValidateUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
bc3af9fd-7fa7-3707-74e7-983331db4a1e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceinitapi_cpp2626 74 "%0WdfDeviceShutdown Flags 0x%10!x! are invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfControlDeviceInitSetShutdownNotification FUNC=imp_WdfControlDeviceInitSetShutdownNotification
{
Arg, ItemLong -- 10
}
#typev fxdeviceinitapi_cpp2619 73 "%0Not a PWDFDEVICE_INIT for a control device" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfControlDeviceInitSetShutdownNotification FUNC=imp_WdfControlDeviceInitSetShutdownNotification
{
}
#typev fxdeviceinitapi_cpp546 16 "%0Couldn't create Security descriptor STATUS_INSUFFICIENT_RESOURCES" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignSDDLString FUNC=imp_WdfDeviceInitAssignSDDLString
{
}
#typev fxdeviceinitapi_cpp1028 32 "%0Already assigned MinorfunctionsSTATUS_INVALID_DEVICE_REQUEST" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback
{
}
#typev fxdeviceinitapi_cpp1003 30 "%0MajorFunction is invalidSTATUS_INVALID_PARAMETER" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback
{
}
#typev fxdeviceinitapi_cpp1042 33 "%0Couldn't create object MinorFunctionsSTATUS_INSUFFICIENT_RESOURCES" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback
{
}
#typev fxdeviceinitapi_cpp1015 31 "%0Couldn't create object PreprocessInfoSTATUS_INSUFFICIENT_RESOURCES" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback
{
}
#typev fxdeviceinitapi_cpp803 21 "%0Pnp State is invalid %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPnpStateChangeCallback FUNC=imp_WdfDeviceInitRegisterPnpStateChangeCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp803 23 "%0Couldn't create object PnpStateCallbacks %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPnpStateChangeCallback FUNC=imp_WdfDeviceInitRegisterPnpStateChangeCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp803 22 "%0CallbackTypes is invalid %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPnpStateChangeCallback FUNC=imp_WdfDeviceInitRegisterPnpStateChangeCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp963 27 "%0PowerPolicyState State is invalid %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerPolicyStateChangeCallback FUNC=imp_WdfDeviceInitRegisterPowerPolicyStateChangeCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp963 29 "%0Couldn't create object PowerPolicyStateCallbacks %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerPolicyStateChangeCallback FUNC=imp_WdfDeviceInitRegisterPowerPolicyStateChangeCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp963 28 "%0CallbackTypes is invalid %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerPolicyStateChangeCallback FUNC=imp_WdfDeviceInitRegisterPowerPolicyStateChangeCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp883 24 "%0PowerState State is invalid %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerStateChangeCallback FUNC=imp_WdfDeviceInitRegisterPowerStateChangeCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp883 26 "%0Couldn't create object PowerStateCallbacks %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerStateChangeCallback FUNC=imp_WdfDeviceInitRegisterPowerStateChangeCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp883 25 "%0CallbackTypes is invalid %10!s!STATUS_INVALID_PARAMETER" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerStateChangeCallback FUNC=imp_WdfDeviceInitRegisterPowerStateChangeCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp380 13 "%0Out of range FileObjectConfig->FileObjectClass %10!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}
#typev fxdeviceinitapi_cpp431 15 "%0Invalid FileObjectConfig->FileObjectClass %10!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}
#typev fxdeviceinitapi_cpp408 14 "%0FileObjectConfig->FileObjectClass value (%10!d!) has been updated to a UMDF-supported value %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceinitapi_cpp357 12 "%0Invalid FileObjectConfig->AutoForwardCleanupClose value 0x%10!x!, expected WDF_TRI_STATE value" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}
#typev fxdeviceinitapi_cpp325 11 "%0Invalid FileObjectConfig Size %10!d!, expected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceinitapi_cpp100 10 "%0IoTypeConfig size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceInitSetIoTypeEx FUNC=imp_WdfDeviceInitSetIoTypeEx
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceinitapi_cpp626 18 "%0Driver can provide either EvtDeviceUsageNotification or EvtDeviceUsageNotificationEx callback but not both" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetPnpPowerEventCallbacks FUNC=imp_WdfDeviceInitSetPnpPowerEventCallbacks
{
}
#typev fxdeviceinitapi_cpp607 17 "%0PnpPowerEventCallbacks size %10!d! is invalid, exptected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetPnpPowerEventCallbacks FUNC=imp_WdfDeviceInitSetPnpPowerEventCallbacks
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceinitapi_cpp693 20 "%0PowerPolicyEventCallbacks can have either EvtDeviceArmWakeFromSx or EvtDeviceArmWakeFromSxWithReason callback pointer, but not both" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetPowerPolicyEventCallbacks FUNC=imp_WdfDeviceInitSetPowerPolicyEventCallbacks
{
}
#typev fxdeviceinitapi_cpp675 19 "%0PowerPolicyEventCallbacks size %10!d! is invalid, expected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetPowerPolicyEventCallbacks FUNC=imp_WdfDeviceInitSetPowerPolicyEventCallbacks
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceinitapi_cpp1205 37 "%0Out of range WDF_RELEASE_HARDWARE_ORDER_ON_FAILURE %10!d!" //   GLOBALS=DeviceInit->DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetReleaseHardwareOrderOnFailure FUNC=imp_WdfDeviceInitSetReleaseHardwareOrderOnFailure
{
Arg, ItemLong -- 10
}
#typev fxdeviceinitapi_cpp1173 36 "%0WdfDeviceInitSetRemoveLockOptions is not supported on control devices" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRemoveLockOptions FUNC=imp_WdfDeviceInitSetRemoveLockOptions
{
}
#typev fxdeviceinitapi_cpp1159 35 "%0RemoveLockOptions %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRemoveLockOptions FUNC=imp_WdfDeviceInitSetRemoveLockOptions
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxdeviceinitapi_cpp1145 34 "%0RemoveLockOptions %10!p! Size incorrect, expected %11!d!, got %12!d!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRemoveLockOptions FUNC=imp_WdfDeviceInitSetRemoveLockOptions
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxdeviceinitapi_cpp1508 42 "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitAllocAndQueryProperty FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp1867 50 "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitAllocAndQueryPropertyEx FUNC=imp_WdfFdoInitAllocAndQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp1841 49 "%0PropertyData size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfFdoInitAllocAndQueryPropertyEx FUNC=imp_WdfFdoInitAllocAndQueryPropertyEx
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceinitapi_cpp1314 39 "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitOpenRegistryKey FUNC=imp_WdfFdoInitOpenRegistryKey
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp1425 41 "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitQueryProperty FUNC=imp_WdfFdoInitQueryProperty
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp1750 48 "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitQueryPropertyEx FUNC=imp_WdfFdoInitQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp1731 47 "%0PropertyData size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfFdoInitQueryPropertyEx FUNC=imp_WdfFdoInitQueryPropertyEx
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceinitapi_cpp1618 46 "%0Not a PWDFDEVICE_INIT for an FDO" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetDefaultChildListConfig FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
}
#typev fxdeviceinitapi_cpp1572 45 "%0Must set EvtDeviceRemoveAddedResources if EvtDeviceFilterAddResourceRequirements (%10!p!) is set" //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfFdoInitSetEventCallbacks FUNC=imp_WdfFdoInitSetEventCallbacks
{
Arg, ItemPtr -- 10
}
#typev fxdeviceinitapi_cpp1558 44 "%0FdoEventCallbacks size %10!d! is invalid, expected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetEventCallbacks FUNC=imp_WdfFdoInitSetEventCallbacks
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceinitapi_cpp1551 43 "%0Not a PWDFDEVICE_INIT for an FDO" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetEventCallbacks FUNC=imp_WdfFdoInitSetEventCallbacks
{
}
#typev fxdeviceinitapi_cpp1355 40 "%0Not a PWDFDEVICE_INIT for an FDO" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetFilter FUNC=imp_WdfFdoInitSetFilter
{
}
#typev fxdeviceinitapi_cpp1271 38 "%0Not a PWDFDEVICE_INIT for an FDO" //   GLOBALS=DeviceInit->DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitWdmGetPhysicalDevice FUNC=imp_WdfFdoInitWdmGetPhysicalDevice
{
}
#typev fxdeviceinitapi_cpp2210 61 "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddCompatibleID FUNC=imp_WdfPdoInitAddCompatibleID
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2218 62 "%0Couldn't allocate String objectSTATUS_INSUFFICIENT_RESOURCES" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddCompatibleID FUNC=imp_WdfPdoInitAddCompatibleID
{
}
#typev fxdeviceinitapi_cpp2398 68 "%0Couldn't allocate DeviceLocation string, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddDeviceText FUNC=imp_WdfPdoInitAddDeviceText
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2398 67 "%0Couldn't allocate DeviceDescription string, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddDeviceText FUNC=imp_WdfPdoInitAddDeviceText
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2345 65 "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddDeviceText FUNC=imp_WdfPdoInitAddDeviceText
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2355 66 "%0Couldn't allocate DeviceText object, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddDeviceText FUNC=imp_WdfPdoInitAddDeviceText
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2145 59 "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddHardwareID FUNC=imp_WdfPdoInitAddHardwareID
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2154 60 "%0Couldn't allocate String object %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddHardwareID FUNC=imp_WdfPdoInitAddHardwareID
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp1932 52 "%0Couldn't create WDFDEVICE_INIT object" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAllocate FUNC=imp_WdfPdoInitAllocate
{
}
#typev fxdeviceinitapi_cpp1922 51 "%0Parent device is not a FDO (must use WDFCHILDLIST to use a PDO as a parent)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAllocate FUNC=imp_WdfPdoInitAllocate
{
}
#typev fxdeviceinitapi_cpp2505 71 "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAllowForwardingRequestToParent FUNC=imp_WdfPdoInitAllowForwardingRequestToParent
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2287 64 "%0Couldn't allocate ContainerID object, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignContainerID FUNC=imp_WdfPdoInitAssignContainerID
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2274 63 "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignContainerID FUNC=imp_WdfPdoInitAssignContainerID
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2040 56 "%0Couldn't allocate DeviceID object, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignDeviceID FUNC=imp_WdfPdoInitAssignDeviceID
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2028 55 "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignDeviceID FUNC=imp_WdfPdoInitAssignDeviceID
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2098 58 "%0Couldn't allocate InstanceID object, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignInstanceID FUNC=imp_WdfPdoInitAssignInstanceID
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2086 57 "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignInstanceID FUNC=imp_WdfPdoInitAssignInstanceID
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2467 70 "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignRawDevice FUNC=imp_WdfPdoInitAssignRawDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2539 72 "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitRemovePowerDependencyOnParent FUNC=imp_WdfPdoInitRemovePowerDependencyOnParent
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinitapi_cpp2428 69 "%0Not a PWDFDEVICE_INIT for a PDO" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitSetDefaultLocale FUNC=imp_WdfPdoInitSetDefaultLocale
{
}
#typev fxdeviceinitapi_cpp1982 54 "%0DispatchTable size %10!d! is invalid, expected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitSetEventCallbacks FUNC=imp_WdfPdoInitSetEventCallbacks
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceinitapi_cpp1974 53 "%0Not a PWDFDEVICE_INIT for a PDO" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitSetEventCallbacks FUNC=imp_WdfPdoInitSetEventCallbacks
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1415 15 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! The device is being power-dereferenced without a matching power-reference. This could occur if driver incorrectly calls WdfDeviceResumeIdle without a matching call to WdfDeviceStopIdle." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::IoDecrement FUNC=ResumeIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
44222e63-eb82-3038-ff04-ae87051d36a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1408 39 "%0WdfDeviceResumeIdle does nothing if you are not the power policy owner for the stack" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=ResumeIdleWorker FUNC=ResumeIdleWorker
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1401 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=ResumeIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1415 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=ResumeIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}
#typev fxdeviceapi_cpp1362 14 "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of invalid state , %12!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker FUNC=StopIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp1362 13 "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of power failure, %12!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker FUNC=StopIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1336 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=StopIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
44222e63-eb82-3038-ff04-ae87051d36a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1353 37 "%0WDFDEVICE %10!p! WdfDeviceStopIdle does nothing if you are not the power policy owner for the stack, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=StopIdleWorker FUNC=StopIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1343 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=StopIdleWorker
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1362 12 "%0WDFDEVICE %10!p! in thread %11!p! waiting synchronously for Dx to D0 transition" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker FUNC=StopIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxdeviceapi_cpp1362 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=StopIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
44222e63-eb82-3038-ff04-ae87051d36a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1364 38 "%0WDFDEVICE %10!p! WdfDeviceStopIdle, WaitForD0 %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=StopIdleWorker FUNC=StopIdleWorker
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp2799 69 "%0Cannot forward a request to a different Device 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp2810 67 "%0No parent device for Device 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp2810 68 "%0WdfPdoInitSetForwardRequestToParent not called on Device 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp2810 65 "%0Only Read/Write/Control/Internal-Control IRPs can be forwarded to I/O Queue 0x%10!p!, Irp 0x%11!p!, %12!s!, IRP_MN %13!x!, Device 0x%14!p!, %15!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
Arg, ItemNTSTATUS -- 15
}
#typev fxdeviceapi_cpp2810 66 "%0I/O Queue 0x%10!p! cannot handle Irp 0x%11!p!, %12!s!, IRP_MN %13!x!, Device 0x%14!p!, %15!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
Arg, ItemNTSTATUS -- 15
}
#typev fxdeviceapi_cpp2716 64 "%0Flags 0x%10!x! are invalid, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp2701 63 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! %12!s!, IRP_MN %13!x!, IRP 0x%14!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue FUNC=Vf_VerifyWdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
}
#typev fxdeviceapi_cpp1214 33 "%0WDFDEVICE %10!p! is not a PnP device, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAllocAndQueryProperty FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp1230 34 "%0exit WDFDEVICE %10!p!, Property %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAllocAndQueryProperty FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp2376 57 "%0PropertyData size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceAllocAndQueryPropertyEx FUNC=imp_WdfDeviceAllocAndQueryPropertyEx
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp2503 59 "%0Property buffer size is zero, while the buffer is non-NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignProperty FUNC=imp_WdfDeviceAssignProperty
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapi_cpp2488 58 "%0PropertyData size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceAssignProperty FUNC=imp_WdfDeviceAssignProperty
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp424 12 "%0Expected Settings Size %10!d!, got %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp481 16 "%0WDFDEVICE %10!p!, value of field IdleTimeoutType is out of range, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp490 15 "%0value of field PowerUpIdleDeviceOnSystemWake should be set only when IdleCaps is IdleCannotWakeFromS0, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapi_cpp490 14 "%0value of field PowerUpIdleDeviceOnSystemWake is out of range, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapi_cpp490 13 "%0a field (DxState, IdleCaps, Enabled, or UserControlOfIdleSettings) is out range, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapi_cpp409 11 "%0Device 0x%10!p! is not the power policy owner, caller cannot set S0 idle settings %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceAssignS0IdleSettings FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp552 19 "%0a field (DxState, Enabled, or UserControlOfIdleSettings) is out range, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignSxWakeSettings FUNC=imp_WdfDeviceAssignSxWakeSettings
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapi_cpp537 18 "%0Expected Settings Size %10!x!, got %11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignSxWakeSettings FUNC=imp_WdfDeviceAssignSxWakeSettings
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp523 17 "%0Device 0x%10!p! is not the power policy owner, caller cannot set Sx wake settings %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceAssignSxWakeSettings FUNC=imp_WdfDeviceAssignSxWakeSettings
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp1908 49 "%0Invalid RequestType %10!s!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfDeviceConfigureRequestDispatching FUNC=imp_WdfDeviceConfigureRequestDispatching
{
Arg, ItemEnum(_WDF_REQUEST_TYPE) -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp1975 51 "%0Queue cannot be configured for automatic dispatching after WdfControlDeviceFinishInitializingis called on the WDFDEVICE %10!p! is called %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureRequestDispatching FUNC=imp_WdfDeviceConfigureRequestDispatching
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp1975 52 "%0Queue cannot be configured for automatic dispatchingafter the WDFDEVICE %10!p! is started, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureRequestDispatching FUNC=imp_WdfDeviceConfigureRequestDispatching
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp1925 50 "%0Input WDFQUEUE 0x%10!p! doesn't belong to the WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfDeviceConfigureRequestDispatching FUNC=imp_WdfDeviceConfigureRequestDispatching
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp2662 62 "%0Driver cannot set IRP dispatch callback after the WDFDEVICE %10!p! is started, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureWdmIrpDispatchCallback FUNC=imp_WdfDeviceConfigureWdmIrpDispatchCallback
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp2648 61 "%0Driver cannot set IRP dispatch callback after WdfControlDeviceFinishInitializing is called on the WDFDEVICE %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureWdmIrpDispatchCallback FUNC=imp_WdfDeviceConfigureWdmIrpDispatchCallback
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp2598 60 "%0Invalid MajorFunction provided %10!s!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureWdmIrpDispatchCallback FUNC=imp_WdfDeviceConfigureWdmIrpDispatchCallback
{
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp990 27 "%0Client called WdfDeviceInitAllowSelfTarget. Self IO Targets are supported only for FDOs, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreate FUNC=imp_WdfDeviceCreate
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapi_cpp990 28 "%0Illegal to specify EvtDeviceEnableWakeAtBus/EvtDeviceDisableWakeAtBus for PDOs that don't have a power dependency on the parent, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreate FUNC=imp_WdfDeviceCreate
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapi_cpp925 25 "%0WDFDEVICE 0x%10!p!   already createdSTATUS_INVALID_DEVICE_STATE" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreate FUNC=imp_WdfDeviceCreate
{
Arg, ItemPtr -- 10
}
#typev fxdeviceapi_cpp947 26 "%0Device init: has device class or SDDL set, but does not have a name, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreate FUNC=imp_WdfDeviceCreate
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapi_cpp1028 30 "%0WDFDEVICE %10!p! already has a symbolic link associated with it, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink FUNC=imp_WdfDeviceCreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp1028 29 "%0WDFDEVICE %10!p!, SymbolicLinkName has no length, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink FUNC=imp_WdfDeviceCreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp2103 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceEnqueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxdeviceapi_cpp2095 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceEnqueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxdeviceapi_cpp2087 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceEnqueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
44222e63-eb82-3038-ff04-ae87051d36a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp2029 53 "%0No default Queue configured for Device 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=imp_WdfDeviceGetDefaultQueue FUNC=imp_WdfDeviceGetDefaultQueue
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp2016 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceGetDefaultQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
44222e63-eb82-3038-ff04-ae87051d36a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp763 22 "%0WDFDEVICE 0x%10!p! DeviceState Size %11!d!, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceGetDeviceState FUNC=imp_WdfDeviceGetDeviceState
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp98 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceGetIoTarget
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
44222e63-eb82-3038-ff04-ae87051d36a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp708 21 "%0Unable to allocate memory for WDFKEY object, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceOpenDevicemapKey FUNC=imp_WdfDeviceOpenDevicemapKey
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapi_cpp686 20 "%0The subkey cannot be of length zero, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceOpenDevicemapKey FUNC=imp_WdfDeviceOpenDevicemapKey
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
1d93f5dc-3a9e-3580-6467-9ce0358dac1f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1128 26 "%0WDFDEVICE %10!p! is not yet known to PnP manager, cannot query device properties in this state, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_QueryProperty FUNC=imp_WdfDeviceQueryProperty
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
44222e63-eb82-3038-ff04-ae87051d36a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1121 31 "%0WDFDEVICE 0x%10!p! is not a PnP device %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryProperty FUNC=imp_WdfDeviceQueryProperty
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp1137 32 "%0exit WDFDEVICE %10!p!, Property %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryProperty FUNC=imp_WdfDeviceQueryProperty
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp2294 55 "%0Property buffer size is non-zero, while the buffer is NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryPropertyEx FUNC=imp_WdfDeviceQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapi_cpp2294 56 "%0Property buffer size is zero, while the buffer is non-NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryPropertyEx FUNC=imp_WdfDeviceQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapi_cpp2252 54 "%0PropertyData size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceQueryPropertyEx FUNC=imp_WdfDeviceQueryPropertyEx
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1415 15 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! The device is being power-dereferenced without a matching power-reference. This could occur if driver incorrectly calls WdfDeviceResumeIdle without a matching call to WdfDeviceStopIdle." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::IoDecrement FUNC=imp_WdfDeviceResumeIdleActual
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
44222e63-eb82-3038-ff04-ae87051d36a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1408 39 "%0WdfDeviceResumeIdle does nothing if you are not the power policy owner for the stack" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=ResumeIdleWorker FUNC=imp_WdfDeviceResumeIdleActual
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1401 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceResumeIdleActual
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1415 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=imp_WdfDeviceResumeIdleActual
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
44222e63-eb82-3038-ff04-ae87051d36a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp200 10 "%0Device name for WDFDEVICE 0x%10!p! is NULL. Possibly incorrect device handle was passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceRetrieveDeviceName FUNC=imp_WdfDeviceRetrieveDeviceName
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp851 24 "%0WDFDEVICE 0x%10!p! DeviceState WDF_TRI_STATE %11!s! value out of range, value is %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetDeviceState FUNC=imp_WdfDeviceSetDeviceState
{
Arg, ItemPtr -- 10
Arg, ItemString -- 11
Arg, ItemLong -- 12
}
#typev fxdeviceapi_cpp814 23 "%0WDFDEVICE 0x%10!p!, DeviceState Size %11!d!, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetDeviceState FUNC=imp_WdfDeviceSetDeviceState
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxdeviceapi_cpp1300 35 "%0Invalid FailedAction %10!d!" //   GLOBALS=pObjectFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetFailed FUNC=imp_WdfDeviceSetFailed
{
Arg, ItemLong -- 10
}
#typev fxdeviceapi_cpp1307 36 "%0WDFDEVICE %10!p!, !devobj %11!p! SetFailed %12!s!" //   GLOBALS=pObjectFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetFailed FUNC=imp_WdfDeviceSetFailed
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_FAILED_ACTION) -- 12
}
#typev fxdeviceapi_cpp1663 41 "%0WDFDEVICE 0x%10!p! PnpCapabilities WDF_TRI_STATE %11!s! value out of range, value is %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPnpCapabilities FUNC=imp_WdfDeviceSetPnpCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemString -- 11
Arg, ItemLong -- 12
}
#typev fxdeviceapi_cpp1634 40 "%0WDFDEVICE 0x%10!p! PnpCapabilities Size %11!d!, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPnpCapabilities FUNC=imp_WdfDeviceSetPnpCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxdeviceapi_cpp1788 45 "%0WDFDEVICE 0x%10!p! PowerCapabilities DeviceWake %11!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceapi_cpp1801 46 "%0WDFDEVICE 0x%10!p! PowerCapabilities SystemWake %11!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceapi_cpp1830 48 "%0WDFDEVICE 0x%10!p! PowerCapabilities IdealDxStateForSx %11!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceapi_cpp1813 47 "%0WDFDEVICE 0x%10!p! PowerCapabilities IdealDxStateForSx %11!d! can only be set by the power policy owner" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceapi_cpp1775 44 "%0WDFDEVICE 0x%10!p! PowerCapabilities DeviceState is invalid" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
}
#typev fxdeviceapi_cpp1760 43 "%0WDFDEVICE 0x%10!p! PowerCapabilities WDF_TRI_STATE %11!s! value out of range, value is %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemString -- 11
Arg, ItemLong -- 12
}
#typev fxdeviceapi_cpp1729 42 "%0WDFDEVICE 0x%10!p! PowerCapabilities Size %11!d!, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities FUNC=imp_WdfDeviceSetPowerCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1501 14 "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of invalid state , %12!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker FUNC=imp_WdfDeviceStopIdleActual
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp1501 13 "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of power failure, %12!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker FUNC=imp_WdfDeviceStopIdleActual
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp1501 12 "%0WDFDEVICE %10!p! in thread %11!p! waiting synchronously for Dx to D0 transition" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker FUNC=imp_WdfDeviceStopIdleActual
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1501 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceStopIdleActual
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
44222e63-eb82-3038-ff04-ae87051d36a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1501 37 "%0WDFDEVICE %10!p! WdfDeviceStopIdle does nothing if you are not the power policy owner for the stack, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=StopIdleWorker FUNC=imp_WdfDeviceStopIdleActual
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1501 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=imp_WdfDeviceStopIdleActual
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1501 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=imp_WdfDeviceStopIdleActual
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
44222e63-eb82-3038-ff04-ae87051d36a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapi_cpp1501 38 "%0WDFDEVICE %10!p! WdfDeviceStopIdle, WaitForD0 %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=StopIdleWorker FUNC=imp_WdfDeviceStopIdleActual
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdeviceapi_cpp2893 74 "%0WDFDEVICE 0x%10!p! Component settings are specified but IdleStates is NULL. %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceWdmAssignPowerFrameworkSettings FUNC=imp_WdfDeviceWdmAssignPowerFrameworkSettings
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp2893 73 "%0WDFDEVICE 0x%10!p! Component settings are specified but IdleStateCount is 0. %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceWdmAssignPowerFrameworkSettings FUNC=imp_WdfDeviceWdmAssignPowerFrameworkSettings
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapi_cpp2906 71 "%0WDFDEVICE 0x%10!p! Expected PowerFrameworkSettings size %11!d!, actual %12!d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceWdmAssignPowerFrameworkSettings FUNC=imp_WdfDeviceWdmAssignPowerFrameworkSettings
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdeviceapi_cpp2889 70 "%0WDFDEVICE 0x%10!p! is not the power policy owner, so the caller cannot assign power framework settings %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceWdmAssignPowerFrameworkSettings FUNC=imp_WdfDeviceWdmAssignPowerFrameworkSettings
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
47756299-911e-3eba-53d9-e08b7ba190a7 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferapi_cpp359 10 "%0Target WDFMEMORY 0x%10!p! is ReadOnly" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=IFxMemory::CopyFromPtr FUNC=imp_WdfMemoryCopyFromBuffer
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8527f288-c601-3072-c843-903d22807b37 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferapi_cpp346 12 "%0Zero bytes to copy not allowed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCopyFromBuffer FUNC=imp_WdfMemoryCopyFromBuffer
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferapi_cpp335 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfMemoryCopyFromBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8527f288-c601-3072-c843-903d22807b37 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferapi_cpp266 11 "%0Zero bytes to copy not allowed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCopyToBuffer FUNC=imp_WdfMemoryCopyToBuffer
{
Arg, ItemNTSTATUS -- 10
}
#typev fxmemorybufferapi_cpp120 10 "%0BufferSize == 0 not allowed,  %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCreate FUNC=imp_WdfMemoryCreate
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferapi_cpp110 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=imp_WdfMemoryCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8bf21f6b-689f-3874-ab54-d8bed81f5c4b core // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferapi_cpp97 11 "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributesForParentHandle FUNC=imp_WdfMemoryCreate
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferapi_cpp138 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=imp_WdfMemoryCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxmemorybufferapi_cpp101 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfMemoryCreate
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxmemorybufferapi_cpp150 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfMemoryCreate
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxmemorybufferapi_cpp195 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfMemoryGetBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxfileobjectapi_cpp173 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfFileObjectGetDevice
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
6a416fdf-77dc-38b0-432d-e653231f6fef WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxfileobjectapi_cpp203 10 "%0Cannot get initiator process ID from a file object that doesn't have a WDM file object" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxFileObject::GetInitiatorProcessId FUNC=imp_WdfFileObjectGetInitiatorProcessId
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c51407ae-698f-3ad1-8ca0-2b23260d232f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp308 13 "%0DispatchContext 0x%10!p! is invalid, %11!s!" //   GLOBALS=device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrp FUNC=Vf_VerifyWdfDeviceWdmDispatchIrp
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapikm_cpp285 12 "%0This API can only be called by wdf extension driver from its pre-process IRP callback, %10!s!" //   GLOBALS=device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=Vf_VerifyWdfDeviceWdmDispatchIrp FUNC=Vf_VerifyWdfDeviceWdmDispatchIrp
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceapikm_cpp598 15 "%0WDFDEVICE %10!p! couldn't creat duplicate buffer, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignMofResourceName FUNC=imp_WdfDeviceAssignMofResourceName
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapikm_cpp585 14 "%0WDFDEVICE %10!p! MofResourceName already assigned, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignMofResourceName FUNC=imp_WdfDeviceAssignMofResourceName
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cb1067eb-57f6-3268-cdff-dfcad6c03699 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp185 16 "%0Since this is a serial port device, framework is using a workaround to allow this" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=imp_WdfDeviceGetFileObject
{
}
#typev fxdeviceapikm_cpp185 18 "%0Did a different PFILE_OBJECT get passed to the request than was to IRP_MJ_CREATE?" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=imp_WdfDeviceGetFileObject
{
}
#typev fxdeviceapikm_cpp185 17 "%0Could not locate WDFFILEOBJECT for PFILE_OBJECT 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=imp_WdfDeviceGetFileObject
{
Arg, ItemPtr -- 10
}
#typev fxdeviceapikm_cpp185 15 "%0The PFILE_OBJECT 0x%10!p! in this request (cleanup/close) is different from the one specified in create request 0x%11!p!.This is bad!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=imp_WdfDeviceGetFileObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp175 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceGetFileObject
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c51407ae-698f-3ad1-8ca0-2b23260d232f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp193 10 "%0FxFileObject::_GetFileObjectFromWdm returned an error %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceGetFileObject FUNC=imp_WdfDeviceGetFileObject
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cb1067eb-57f6-3268-cdff-dfcad6c03699 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp185 14 "%0NULL passed for PFILE_OBJECT when FileObject support is requested in an I/O request" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=imp_WdfDeviceGetFileObject
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c51407ae-698f-3ad1-8ca0-2b23260d232f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp737 22 "%0WDFDEVICE 0x%10!p!  Not the waitwake owner STATUS_INVALID_DEVICE_STATE" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceIndicateWakeStatus FUNC=imp_WdfDeviceIndicateWakeStatus
{
Arg, ItemPtr -- 10
}
#typev fxdeviceapikm_cpp711 20 "%0NULL WDFDEVICE handle %10!p! or invalid %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceIndicateWakeStatus FUNC=imp_WdfDeviceIndicateWakeStatus
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceapikm_cpp725 21 "%0WDFDEVICE 0x%10!p!  No request to complete STATUS_INVALID_DEVICE_REQUEST" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceIndicateWakeStatus FUNC=imp_WdfDeviceIndicateWakeStatus
{
Arg, ItemPtr -- 10
}
#typev fxdeviceapikm_cpp632 16 "%0WDFDEVICE 0x%10!p! FileType %11!d! specified is not in valid range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetSpecialFileSupport FUNC=imp_WdfDeviceSetSpecialFileSupport
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceapikm_cpp665 19 "%0WDFDEVICE 0x%10!p! FileType %11!d! specified is not supported in this version" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetSpecialFileSupport FUNC=imp_WdfDeviceSetSpecialFileSupport
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceapikm_cpp655 18 "%0WDFDEVICE 0x%10!p! FileType %11!d! specified is not supported in this version" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetSpecialFileSupport FUNC=imp_WdfDeviceSetSpecialFileSupport
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxdeviceapikm_cpp643 17 "%0WDFDEVICE 0x%10!p! FileType %11!d! specified is not supported in this version" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetSpecialFileSupport FUNC=imp_WdfDeviceSetSpecialFileSupport
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp356 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceWdmDispatchIrp
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b13234fa-c74e-3a8b-bfbd-689137af2e1e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 10 "%0EvtIoExamineIrp callback on WDFQUEUE %10!p! returned an invalid action %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetReservedRequest FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2060831f-e143-324a-983e-9a09a7eb65f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 16 "%0Could not create WDFREQUEST, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::DispatchStep2 FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b13234fa-c74e-3a8b-bfbd-689137af2e1e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 11 "%0Forward action on WDFQUEUE %10!p! says that framework should fail the Irp %11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetReservedRequest FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 39 "%0WDFREQUEST 0x%10!p! has already been completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 15 "%0The driver allocated excessive number (%10!u!) of WDF objects. Investigate with !wdfDriverInfo driverName 0x41 or 0x50. To adjust the limit, modify driver reg key under Parameters\Wdf\ObjectLeakDetectionLimit. To disable the check, set it to 0xffffffff." //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::DetectExcessiveAllocation FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 10 "%0Memory allocation failed %10!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 11 "%0Could not commit FxRequest %10!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp429 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxdeviceapikm_cpp421 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a6121e9a-3879-3591-a485-d9b92f3fa173 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 11 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::Complete FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 41 "%0WDFQUEUE 0x%10!p! is not accepting requests, state is %11!s!, %12!s!completing WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 15 "%0The driver allocated excessive number (%10!u!) of WDF objects. Investigate with !wdfDriverInfo driverName 0x41 or 0x50. To adjust the limit, modify driver reg key under Parameters\Wdf\ObjectLeakDetectionLimit. To disable the check, set it to 0xffffffff." //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::DetectExcessiveAllocation FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp494 42 "%0Queuing WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest FUNC=imp_WdfDeviceWdmDispatchIrpToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c51407ae-698f-3ad1-8ca0-2b23260d232f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp243 11 "%0This API can only be called by client driver from its pre-process IRP callback, STATUS_INVALID_DEVICE_REQUEST" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfDeviceWdmDispatchPreprocessedIrp FUNC=imp_WdfDeviceWdmDispatchPreprocessedIrp
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceapikm_cpp221 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceWdmDispatchPreprocessedIrp
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxdeviceapikm_cpp103 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceWdmGetAttachedDevice
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxdeviceapikm_cpp84 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfDeviceWdmGetDeviceObject
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
40e25130-1f88-3f98-6469-9cc7828d9cb5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev verifierapi_cpp75 10 "%0WDF driver (!wdflogdump %10!s!) called WdfVerifierDbgBreakPoint and verifier setting is %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDRIVER FUNC=imp_WdfVerifierDbgBreakPoint FUNC=imp_WdfVerifierDbgBreakPoint
{
Arg, ItemString -- 10
Arg, ItemListLong(false,true) -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0aab4177-8666-325d-8ef3-8c3314bd4910 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferpreallocatedapi_cpp167 11 "%0Zero BufferSize not allowed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryAssignBuffer FUNC=imp_WdfMemoryAssignBuffer
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferpreallocatedapi_cpp157 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfMemoryAssignBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0aab4177-8666-325d-8ef3-8c3314bd4910 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferpreallocatedapi_cpp106 10 "%0Zero BufferSize not allowed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCreatePreallocated FUNC=imp_WdfMemoryCreatePreallocated
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8bf21f6b-689f-3874-ab54-d8bed81f5c4b core // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferpreallocatedapi_cpp88 11 "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributesForParentHandle FUNC=imp_WdfMemoryCreatePreallocated
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemorybufferpreallocatedapi_cpp92 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfMemoryCreatePreallocated
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxmemorybufferpreallocatedapi_cpp116 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=imp_WdfMemoryCreatePreallocated
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a6121e9a-3879-3591-a485-d9b92f3fa173 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxRequest_hpp790 11 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::Complete FUNC=FxRequest::Complete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
#typev FxRequest_hpp818 11 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::Complete FUNC=FxRequest::CompleteWithInformation
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
#typev FxRequest_hpp544 10 "%0WdfRequestGetCompletionParams will not return valid information if the request is not formatted using WdfIoTargetFormatxxx DDIs" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CopyCompletionParams FUNC=FxRequest::CopyCompletionParams
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
490b682a-621a-388b-ee65-ab233ea347ba WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxRequestValidateFunctions_hpp68 10 "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=FxValidateRequestOptions
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev FxRequestValidateFunctions_hpp97 12 "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=FxValidateRequestOptions
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev FxRequestValidateFunctions_hpp80 11 "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=FxValidateRequestOptions
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3038 71 "%0WDFREQUEST %10!p! doesn't belong to any queue, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=Vf_VerifyWdfRequestForwardToIoQueue FUNC=Vf_VerifyWdfRequestForwardToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp3170 72 "%0WDFREQUEST %10!p! doesn't belong to any queue, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=Vf_VerifyWdfRequestForwardToParentDeviceIoQueue FUNC=Vf_VerifyWdfRequestForwardToParentDeviceIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp3194 73 "%0IRP %10!p! of WDFREQUEST %11!p! doesn't enough stack locations, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=Vf_VerifyWdfRequestForwardToParentDeviceIoQueue FUNC=Vf_VerifyWdfRequestForwardToParentDeviceIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2602 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestAllocateTimer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2157 50 "%0Enter: WDFREQUEST %10!p! to be cancelled" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestCancelSentRequest FUNC=imp_WdfRequestCancelSentRequest
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp418 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestComplete
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a6121e9a-3879-3591-a485-d9b92f3fa173 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp436 11 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::Complete FUNC=imp_WdfRequestComplete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp551 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestCompleteWithInformation
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a6121e9a-3879-3591-a485-d9b92f3fa173 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp571 11 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::Complete FUNC=imp_WdfRequestCompleteWithInformation
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp484 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestCompleteWithPriorityBoost
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a6121e9a-3879-3591-a485-d9b92f3fa173 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp504 12 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteWithPriority FUNC=imp_WdfRequestCompleteWithPriorityBoost
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp134 13 "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfRequestCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequestapi_cpp134 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfRequestCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequestapi_cpp134 11 "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfRequestCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp134 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfRequestCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp124 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestCreate
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp134 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestCreate
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp109 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestCreate
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp134 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=imp_WdfRequestCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp134 13 "%0Irp %10!p! Ownership %11!s! FxRequest %12!p!, status %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::_Create FUNC=imp_WdfRequestCreate
{
Arg, ItemPtr -- 10
Arg, ItemEnum(FxRequestIrpOwnership) -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestapi_cpp134 12 "%0Handle create failed %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_Create FUNC=imp_WdfRequestCreate
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2252 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestFormatRequestUsingCurrentType
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3130 39 "%0WDFREQUEST 0x%10!p! has already been completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState FUNC=imp_WdfRequestForwardToIoQueue
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3121 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestForwardToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp3112 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestForwardToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3130 43 "%0WDFQUEUE 0x%10!p! is not accepting requests state is %11!s!, %12!s!WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequestFromForward FUNC=imp_WdfRequestForwardToIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3299 75 "%0ForwardOptions %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!, %13!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRequestForwardToParentDeviceIoQueue FUNC=imp_WdfRequestForwardToParentDeviceIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestapi_cpp3284 74 "%0ForwardOptions %10!p! Size incorrect, expected %11!d!, got %12!d!, %13!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRequestForwardToParentDeviceIoQueue FUNC=imp_WdfRequestForwardToParentDeviceIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3273 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestForwardToParentDeviceIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp3264 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestForwardToParentDeviceIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3332 43 "%0WDFQUEUE 0x%10!p! is not accepting requests state is %11!s!, %12!s!WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequestFromForward FUNC=imp_WdfRequestForwardToParentDeviceIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2490 59 "%0Params Size 0x%10!x!, expected 0x%11!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetCompletionParams FUNC=imp_WdfRequestGetCompletionParams
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cb1067eb-57f6-3268-cdff-dfcad6c03699 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2671 18 "%0Did a different PFILE_OBJECT get passed to the request than was to IRP_MJ_CREATE?" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=imp_WdfRequestGetFileObject
{
}
#typev fxrequestapi_cpp2671 17 "%0Could not locate WDFFILEOBJECT for PFILE_OBJECT 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=imp_WdfRequestGetFileObject
{
Arg, ItemPtr -- 10
}
#typev fxrequestapi_cpp2671 16 "%0Since this is a serial port device, framework is using a workaround to allow this" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=imp_WdfRequestGetFileObject
{
}
#typev fxrequestapi_cpp2671 15 "%0The PFILE_OBJECT 0x%10!p! in this request (cleanup/close) is different from the one specified in create request 0x%11!p!.This is bad!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=imp_WdfRequestGetFileObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2646 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestGetFileObject
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2673 63 "%0GetFileobject failed with %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetFileObject FUNC=imp_WdfRequestGetFileObject
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cb1067eb-57f6-3268-cdff-dfcad6c03699 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2671 14 "%0NULL passed for PFILE_OBJECT when FileObject support is requested in an I/O request" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=imp_WdfRequestGetFileObject
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp664 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestGetInformation
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3009 70 "%0Getting queue handle for Create request is not allowed for WDFREQUEST 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfRequestGetIoQueue FUNC=imp_WdfRequestGetIoQueue
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2965 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestGetIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2992 69 "%0WDFREQUEST %10!p! doesn't belong to any queue" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetIoQueue FUNC=imp_WdfRequestGetIoQueue
{
Arg, ItemPtr -- 10
}
#typev fxrequestapi_cpp2441 57 "%0Params size %10!d! incorrect, expected %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetParameters FUNC=imp_WdfRequestGetParameters
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2427 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestGetParameters
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp2922 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestGetRequestorMode
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp2116 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestGetStatus
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp3654 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestIsCanceled
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3449 79 "%0WDFREQUEST %10!p! doesn't belong to any queue" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestMarkCancelable FUNC=imp_WdfRequestMarkCancelable
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3435 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestMarkCancelable
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3522 81 "%0WDFREQUEST %10!p! doesn't belong to any queue %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestMarkCancelableEx FUNC=imp_WdfRequestMarkCancelableEx
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3508 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestMarkCancelableEx
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2778 65 "%0ProbeAndLockForRead failed with %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestProbeAndLockUserBufferForRead FUNC=imp_WdfRequestProbeAndLockUserBufferForRead
{
Arg, ItemNTSTATUS -- 10
}
#typev fxrequestapi_cpp2877 67 "%0ProbeAndLockForWrite failed with %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestProbeAndLockUserBufferForWrite FUNC=imp_WdfRequestProbeAndLockUserBufferForWrite
{
Arg, ItemNTSTATUS -- 10
}
#typev fxrequestapi_cpp3387 77 "%0WDFREQUEST %10!p! doesn't belong to any queue %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRequeue FUNC=imp_WdfRequestRequeue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp1030 24 "%0WDFREQUEST 0x%10!p! buffer size %11!I64d! is less than RequiredLength %12!I64d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputBuffer FUNC=imp_WdfRequestRetrieveInputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestapi_cpp1015 23 "%0This call is not valid on the read request, you should call WdfRequestRetrieveOutputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputBuffer FUNC=imp_WdfRequestRetrieveInputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp988 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestRetrieveInputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp766 19 "%0This call is not valid on the Read request, you should call WdfRequestRetrieveOutputMemory to get the Memory for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputMemory FUNC=imp_WdfRequestRetrieveInputMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp747 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestRetrieveInputMemory
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp1690 41 "%0This call is not valid on the Read request, you should call WdfRequestRetrieveOutputMdl to get the Mdl for WFDREQUEST 0x%10!p!,  %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputWdmMdl FUNC=imp_WdfRequestRetrieveInputWdmMdl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp1183 27 "%0WDFREQUEST 0x%10!p! buffer size %11!I64d! is less than RequiredLength %12!I64d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputBuffer FUNC=imp_WdfRequestRetrieveOutputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp1132 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestRetrieveOutputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp1161 26 "%0This call is not valid on write request, you should call WdfRequestRetrieveInputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputBuffer FUNC=imp_WdfRequestRetrieveOutputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp860 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestRetrieveOutputMemory
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp881 21 "%0This call is not valid on the Write request, you should call WdfRequestRetrieveInputMemory to get the Memory for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputMemory FUNC=imp_WdfRequestRetrieveOutputMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp1791 43 "%0This call is not valid on the Write request, you should call WdfRequestRetrieveInputMemory to get the Memory for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputWdmMdl FUNC=imp_WdfRequestRetrieveOutputWdmMdl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp1772 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestRetrieveOutputWdmMdl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp1392 33 "%0Error: This call is valid only on method-neither ioctl and write WDFREQUEST %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp1372 32 "%0WDFREQUEST 0x%10!p! buffer size %11!d! is less than RequiredLength %12!I64d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestapi_cpp1348 31 "%0WDFREQUEST %10!p! buffer size %11!d! is less than RequiredLength %12!I64d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestapi_cpp1333 30 "%0This call is not valid on internal-ioctl request, you should call safer WdfRequestRetrieveInputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp1321 29 "%0This call is not valid on read request, you should call WdfRequestRetrieveUnsafeUserOutputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp1593 39 "%0Error: This call is valid only on method-neither ioctl and read WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp1549 37 "%0WDFREQUEST 0x%10!p! buffer size %11!d! is less than RequiredLength %12!I64d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestapi_cpp1534 36 "%0This call is not valid on an internal IOCTL request, you should call safer WdfRequestRetrieveOutputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp1521 35 "%0This call is not valid on Write request, you should call WdfRequestRetrieveUnsafeUserInputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestapi_cpp1573 38 "%0WDFREQUEST 0x%10!p! buffer size %11!d! is less than RequiredLength %12!I64d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestapi_cpp315 13 "%0ReuseParams Flags 0x%10!x!, valid mask 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestReuse FUNC=imp_WdfRequestReuse
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequestapi_cpp300 12 "%0ReuseParams Size %10!d!, expected %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestReuse FUNC=imp_WdfRequestReuse
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp291 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestReuse
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
490b682a-621a-388b-ee65-ab233ea347ba WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp1906 12 "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=imp_WdfRequestSend
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxrequestapi_cpp1906 11 "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=imp_WdfRequestSend
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp1944 44 "%0WDFREQUEST %10!p! must be a WDFQUEUE presented request" //   GLOBALS=WDFREQUEST_FXREQUEST(Request)->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfRequestSend FUNC=imp_WdfRequestSend
{
Arg, ItemPtr -- 10
}
#typev fxrequestapi_cpp1960 45 "%0Cannot send-and-forget WDFREQUEST 0x%10!p! with formatted IO context, %11!s!" //   GLOBALS=WDFREQUEST_FXREQUEST(Request)->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfRequestSend FUNC=imp_WdfRequestSend
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
490b682a-621a-388b-ee65-ab233ea347ba WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp1906 10 "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=imp_WdfRequestSend
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2012 46 "%0WDFREQUEST %10!p! is a WDFQUEUE presented request with no completion routine, %11!s!" //   GLOBALS=WDFREQUEST_FXREQUEST(Request)->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfRequestSend FUNC=imp_WdfRequestSend
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp1916 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestSend
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp1897 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestSend
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp2391 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestSetCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp612 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestSetInformation
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3583 83 "%0WDFREQUEST %10!p! doesn't belong to any queue %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestUnmarkCancelable FUNC=imp_WdfRequestUnmarkCancelable
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3590 41 "%0WDFREQUEST 0x%10!p! not on IrpQueue" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::RemoveFromIrpQueue FUNC=imp_WdfRequestUnmarkCancelable
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp3571 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestUnmarkCancelable
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequestapi_cpp2330 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestWdmFormatUsingStackLocation
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
71b9b6c7-a808-313e-abf2-8f040707827e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2557 61 "%0WDFREQUEST is already completed 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestWdmGetIrp FUNC=imp_WdfRequestWdmGetIrp
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestapi_cpp2543 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRequestWdmGetIrp
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
1af9d57c-fd4d-3bda-e84a-bec4d9272b3f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxcxdeviceinitapi_cpp51 10 "%0This function can only be called by a WDF extension driver, Driver 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValiateCx FUNC=FxValiateCx
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxcxdeviceinitapi_cpp154 14 "%0Couldn't create object MinorFunctions, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitAssignWdmIrpPreprocessCallback FUNC=imp_WdfCxDeviceInitAssignWdmIrpPreprocessCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcxdeviceinitapi_cpp141 13 "%0Already assigned Minorfunctions, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitAssignWdmIrpPreprocessCallback FUNC=imp_WdfCxDeviceInitAssignWdmIrpPreprocessCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcxdeviceinitapi_cpp127 12 "%0Couldn't create object PreprocessInfo, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitAssignWdmIrpPreprocessCallback FUNC=imp_WdfCxDeviceInitAssignWdmIrpPreprocessCallback
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcxdeviceinitapi_cpp112 11 "%0MajorFunction %10!x! is invalid, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitAssignWdmIrpPreprocessCallback FUNC=imp_WdfCxDeviceInitAssignWdmIrpPreprocessCallback
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxcxdeviceinitapi_cpp408 17 "%0Out of range CxFileObjectConfig->FileObjectClass %10!d!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetFileObjectConfig FUNC=imp_WdfCxDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}
#typev fxcxdeviceinitapi_cpp427 18 "%0Invalid CxFileObjectConfig->FileObjectClass %10!d!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetFileObjectConfig FUNC=imp_WdfCxDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}
#typev fxcxdeviceinitapi_cpp385 16 "%0Invalid CxFileObjectConfig->AutoForwardCleanupClose value 0x%10!x!, expected WDF_TRI_STATE value" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetFileObjectConfig FUNC=imp_WdfCxDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
}
#typev fxcxdeviceinitapi_cpp353 15 "%0Invalid CxFileObjectConfig Size %10!d!, expected %11!d!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetFileObjectConfig FUNC=imp_WdfCxDeviceInitSetFileObjectConfig
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxcxdeviceinitapi_cpp587 25 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify both EvtCxDevicePre/PostSelfManagedIoRestart and  EvtCxDevicePre/PostSelfManagedIoRestartEx" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp602 26 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify both EvtCxDevicePre/PostSelfManagedIoSuspend and  EvtCxDevicePre/PostSelfManagedIoSuspendEx" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp614 27 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePreD0EntryPostHardwareEnabledFailedCleanup if EvtCxDevicePreD0EntryPostHardwareEnabled is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp570 24 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePreSelfManagedIoRestartExFailedCleanup if EvtCxDevicePreSelfManagedIoRestartEx is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp556 23 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePreSelfManagedIoRestartFailedCleanup if EvtCxDevicePreSelfManagedIoRestart is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp544 22 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePreSelfManagedIoInitFailedCleanup if EvtCxDevicePreSelfManagedIoInit is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp532 21 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePreD0EntryFailedCleanup if EvtCxDevicePreD0Entry is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp520 20 "%0Invalid WDFCX_PNPPOWER_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePrePrepareHardwareFailedCleanup if EvtCxDevicePrePrepareHardware is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp506 19 "%0Invalid Size in WDFCX_PNPPOWER_EVENT_CALLBACKS: %10!d!, expected v29 size %11!d! or cur ver size %12!d!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks FUNC=imp_WdfCxDeviceInitSetPnpPowerEventCallbacks
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxcxdeviceinitapi_cpp744 32 "%0Invalid WDFCX_POWER_POLICY_EVENT_CALLBACKS configuration. Can not specify both ArmWakeFromSx and ArmWakeFromSxWithReason" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPowerPolicyEventCallbacks FUNC=imp_WdfCxDeviceInitSetPowerPolicyEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp726 31 "%0Invalid WDFCX_POWER_POLICY_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePreArmWakeFromSxWithReasonFailedCleanup if EvtCxDevicePreArmWakeFromSxWithReason is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPowerPolicyEventCallbacks FUNC=imp_WdfCxDeviceInitSetPowerPolicyEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp714 30 "%0Invalid WDFCX_POWER_POLICY_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePreArmWakeFromSxFailedCleanup if EvtCxDevicePreArmWakeFromSx is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPowerPolicyEventCallbacks FUNC=imp_WdfCxDeviceInitSetPowerPolicyEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp702 29 "%0Invalid WDFCX_POWER_POLICY_EVENT_CALLBACKS configuration. Can not specify EvtCxDevicePreArmWakeFromS0FailedCleanup if EvtCxDevicePreArmWakeFromS0 is set to NULL" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPowerPolicyEventCallbacks FUNC=imp_WdfCxDeviceInitSetPowerPolicyEventCallbacks
{
}
#typev fxcxdeviceinitapi_cpp691 28 "%0Invalid Size in WDFCX_POWER_POLICY_EVENT_CALLBACKS: %10!d!, expected %11!d!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCxDeviceInitSetPowerPolicyEventCallbacks FUNC=imp_WdfCxDeviceInitSetPowerPolicyEventCallbacks
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ae2486e-a73a-33cd-1aa3-f0983c38dd1b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdriverapi_cpp187 13 "%0WdfDriverCreate can only be called one time per WDM PDRIVER_OBJECT %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate FUNC=imp_WdfDriverCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdriverapi_cpp242 14 "%0Invalid Driver flags or EvtDriverDeviceAdd callback already addedSTATUS_INVALID_PARAMETER" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate FUNC=imp_WdfDriverCreate
{
}
#typev fxdriverapi_cpp146 11 "%0DriverInitFlags 0x%10!x! invalid, valid flags are 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate FUNC=imp_WdfDriverCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdriverapi_cpp132 10 "%0WDF_DRIVER_CONFIG got Size %10!d!, expected v1.1 size %11!d! or cur ver size %12!d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate FUNC=imp_WdfDriverCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdriverapi_cpp610 17 "%0Driver %10!s! called a %11!s! API with index: %12!u! that is not available in this version of %13!s!. The driver must check for API availability using %14!s!_IS_FUNCITON_AVAILABLE at runtime before calling it." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverErrorReportApiMissing FUNC=imp_WdfDriverErrorReportApiMissing
{
Arg, ItemString -- 10
Arg, ItemWString -- 11
Arg, ItemLong -- 12
Arg, ItemWString -- 13
Arg, ItemString -- 14
}
#typev fxdriverapi_cpp531 16 "%0IsVersionAvailable, current WDF ver major %10!d!, minor %11!d!, caller asking about major %12!d!, minor %13!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverIsVersionAvailable FUNC=imp_WdfDriverIsVersionAvailable
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}
#typev fxdriverapi_cpp516 15 "%0VersionAvailableParams Size 0x%10!x!, expected 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverIsVersionAvailable FUNC=imp_WdfDriverIsVersionAvailable
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9b97061e-9cb8-3099-25c8-4555f34b1e70 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicecontrolapi_cpp58 10 "%0WDFDEVICE %10!p! not a control device" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfControlFinishInitializing FUNC=imp_WdfControlFinishInitializing
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
fe4498e1-f12a-3484-bdd8-36426c90a6b7 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicefdoapi_cpp110 10 "%0WDFDEVICE 0x%10!p! Device is either legacy or is not a Fdo %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoQueryForInterface FUNC=imp_WdfFdoQueryForInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
11620bd4-2059-3ee0-12e7-ea8f561602f9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxworkitemapi_cpp125 11 "%0Supplied EvtWorkItemFunc == NULL, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWorkItemCreate FUNC=imp_WdfWorkItemCreate
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8bf21f6b-689f-3874-ab54-d8bed81f5c4b core // SRC=Unknown_cxx00 MJ= MN=
#typev fxworkitemapi_cpp95 12 "%0ParentObject required in WDF_OBJECT_ATTRIBUTES %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributesForParentHandle FUNC=imp_WdfWorkItemCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxworkitemapi_cpp95 11 "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributesForParentHandle FUNC=imp_WdfWorkItemCreate
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
11620bd4-2059-3ee0-12e7-ea8f561602f9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxworkitemapi_cpp114 10 "%0WDF_WORKITEM_CONFIG Size got %10!d!, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWorkItemCreate FUNC=imp_WdfWorkItemCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxworkitemapi_cpp102 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfWorkItemCreate
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8bf21f6b-689f-3874-ab54-d8bed81f5c4b core // SRC=Unknown_cxx00 MJ= MN=
#typev fxworkitemapi_cpp95 10 "%0WDF_OBJECT_ATTRIBUTES required, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributesForParentHandle FUNC=imp_WdfWorkItemCreate
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxworkitemapi_cpp173 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfWorkItemEnqueue
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxworkitemapi_cpp212 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfWorkItemGetParentObject
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2b2ace67-e0ba-36cb-a8f9-84cfaf0729fb WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxtimerapi_cpp110 10 "%0PWDF_TIMER_CONFIG Size %10!d!, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate FUNC=imp_WdfTimerCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxtimerapi_cpp187 15 "%0Passive level periodic timer is not supported. Use one shot timer and queue the next timer from the callback or use a dedicated thread, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate FUNC=imp_WdfTimerCreate
{
Arg, ItemNTSTATUS -- 10
}
#typev fxtimerapi_cpp121 11 "%0Period value %10!u! for a periodic timer cannot be greater than MAXLONG, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate FUNC=imp_WdfTimerCreate
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxtimerapi_cpp198 12 "%0TolerableDelay value %10!u! cannot be greater than MAXLONG, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate FUNC=imp_WdfTimerCreate
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxtimerapi_cpp198 14 "%0UseHighResolutionTimer option sepcified with non zero tolerable delay %10!u! %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate FUNC=imp_WdfTimerCreate
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c0d88b3d-e9c4-3c22-c54d-292146f17d36 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxtimerapi_cpp242 16 "%0WDFTIMER 0x%10!p! is been stopped by PRKTHREAD 0x%11!p!. Ignoring the request to start timer" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Start FUNC=imp_WdfTimerStart
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxtimerapi_cpp242 15 "%0Calling WdfTimerStart when the timer object %10!p! is running down will lead to a crash" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Start FUNC=imp_WdfTimerStart
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxtimerapi_cpp235 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfTimerStart
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c0d88b3d-e9c4-3c22-c54d-292146f17d36 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxtimerapi_cpp293 19 "%0Detected multiple calls to WdfTimerStop for WDFTIMER 0x%10!p!, stop in progress on PRKTHREAD 0x%11!p!, current PRKTHREAD 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Stop FUNC=imp_WdfTimerStop
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxtimerapi_cpp293 17 "%0Calling WdfTimerStop from within the WDFTIMER %10!p! callback will lead to deadlock, PRKTHREAD %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Stop FUNC=imp_WdfTimerStop
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxtimerapi_cpp293 18 "%0WdfTimerStop(Wait==TRUE) called at IRQL > PASSIVE_LEVEL, current IRQL = 0x%10!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Stop FUNC=imp_WdfTimerStop
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxtimerapi_cpp280 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfTimerStop
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
de7c98f2-e29f-3d48-47c2-83c1347f16d1 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxlookasidelistapi_cpp190 11 "%0Lookaside Attributes ancestor WDFDEVICE %10!p! (from ParentObject %11!p!)  is not the same as Memory Attributes ancestor WDFDEVICE %12!p! (from ParentObject %13!p!), %14!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfLookasideListCreate FUNC=imp_WdfLookasideListCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxlookasidelistapi_cpp129 10 "%0Zero BufferSize not allowed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfLookasideListCreate FUNC=imp_WdfLookasideListCreate
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxlookasidelistapi_cpp291 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfMemoryCreateFromLookaside
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxlookasidelistapi_cpp277 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfMemoryCreateFromLookaside
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxfileobjectapikm_cpp73 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfFileObjectWdmGetFileObject
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e77a2db7-36e7-3f20-8cb4-11aebfe88f04 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdriverapikm_cpp129 11 "%0WdfDriverOpenParametersRegistryKey failed with %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenParametersRegistryKey FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdriverapikm_cpp93 10 "%0WdfDriverOpenParametersRegistryKey should not be used for write. Consider WdfDriverOpenPersistentStateRegistryKey instead." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenParametersRegistryKey FUNC=imp_WdfDriverOpenParametersRegistryKey
{
}
#typev fxdriverapikm_cpp349 12 "%0WdfDriverOpenPersistentStateRegistryKey failed because IoOpenDriverRegistryKey returned  %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenPersistentStateRegistryKey FUNC=imp_WdfDriverOpenPersistentStateRegistryKey
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
79de5905-3eda-3296-1c40-eea53dd6a6f9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestkm_cpp585 26 "%0WDFREQUEST 0x%10!p!, SystemBuffer length is 0, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl FUNC=FxRequest::GetDeviceControlOutputMdl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestkm_cpp585 25 "%0WDFREQUEST 0x%10!p!, SystemBuffer is NULL, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl FUNC=FxRequest::GetDeviceControlOutputMdl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestkm_cpp562 27 "%0WDFREQUEST %10!p! could not allocate MDL for buffer 0x%11!p! Length %12!d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl FUNC=FxRequest::GetDeviceControlOutputMdl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestkm_cpp504 24 "%0Driver must use METHOD_BUFFERED or METHOD_xx_DIRECT I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl FUNC=FxRequest::GetDeviceControlOutputMdl
{
}
#typev fxrequestkm_cpp497 23 "%0Attempt to get UserMode Buffer Pointer for METHOD_NEITHER DeviceControl 0x%10!x!, WDFDEVICE 0x%11!p!, WDFREQUEST 0x%12!p!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl FUNC=FxRequest::GetDeviceControlOutputMdl
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestkm_cpp430 20 "%0WDFREQUEST %10!p! (MajorFunction is 0x%11!x!) this call is only valid for IOCTLs, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl FUNC=FxRequest::GetDeviceControlOutputMdl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequestkm_cpp413 22 "%0WDFREQUEST 0x%10!p!, METHOD_OUT_DIRECT IOCTL, PMDL is NULL, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl FUNC=FxRequest::GetDeviceControlOutputMdl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestkm_cpp413 21 "%0WDFREQUEST 0x%10!p!, METHOD_IN_DIRECT IOCTL, PMDL is NULL, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl FUNC=FxRequest::GetDeviceControlOutputMdl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestkm_cpp298 18 "%0WDFREQUEST 0x%10!p!, SystemBuffer length is 0, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl FUNC=FxRequest::GetMdl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestkm_cpp298 17 "%0WDFREQUEST 0x%10!p!, SystemBuffer is NULL, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl FUNC=FxRequest::GetMdl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestkm_cpp320 19 "%0Could not allocate MDL for buffer 0x%10!p! Length %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl FUNC=FxRequest::GetMdl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequestkm_cpp262 16 "%0Unrecognized I/O Type %10!d! on WDFDEVICE 0x%11!p!, WDFREQUEST 0x%12!p!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl FUNC=FxRequest::GetMdl
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestkm_cpp159 11 "%0Driver must use METHOD_BUFFERED or METHOD_xx_DIRECT I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl FUNC=FxRequest::GetMdl
{
}
#typev fxrequestkm_cpp152 10 "%0Attempt to get UserMode MDL for METHOD_NEITHER DeviceControl 0x%10!x!, WDFDEVICE 0x%11!p!, WDFREQUEST 0x%12!p!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl FUNC=FxRequest::GetMdl
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestkm_cpp247 15 "%0Driver must use buffered or direct I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl FUNC=FxRequest::GetMdl
{
}
#typev fxrequestkm_cpp241 14 "%0Attempt to get UserMode Buffer Pointer for WDFDEVICE 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl FUNC=FxRequest::GetMdl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequestkm_cpp225 13 "%0WDFREQUEST 0x%10!p! for a direct io device, PMDL is NULL, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl FUNC=FxRequest::GetMdl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestkm_cpp199 12 "%0WDFREQUEST %10!p! no Automatic MDL mapping for buffered requestmajor function 0x%11!x! available for WDFDEVICE 0x%12!p!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl FUNC=FxRequest::GetMdl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequestkm_cpp918 36 "%0Unable to obtain requestor ID. WDFREQUEST 0x%10!p! is already completed, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetRequestorProcessId FUNC=FxRequest::GetRequestorProcessId
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestkm_cpp686 31 "%0Exception is raised for Address 0x%10!p!, Length %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForRead FUNC=FxRequest::ProbeAndLockForRead
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequestkm_cpp677 30 "%0Failed to allocate MDL %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForRead FUNC=FxRequest::ProbeAndLockForRead
{
Arg, ItemNTSTATUS -- 10
}
#typev fxrequestkm_cpp654 29 "%0WDFREQUEST %10!p! has already been completed or has no PIRP assignment, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForRead FUNC=FxRequest::ProbeAndLockForRead
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestkm_cpp641 28 "%0Length of zero not allowed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForRead FUNC=FxRequest::ProbeAndLockForRead
{
Arg, ItemNTSTATUS -- 10
}
#typev fxrequestkm_cpp846 35 "%0Exception is raised for Address 0x%10!p!, Length %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForWrite FUNC=FxRequest::ProbeAndLockForWrite
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequestkm_cpp837 34 "%0Failed to allocate MDL %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForWrite FUNC=FxRequest::ProbeAndLockForWrite
{
Arg, ItemNTSTATUS -- 10
}
#typev fxrequestkm_cpp815 33 "%0WDFREQUEST %10!p! has already been completed or has no PIRP assignment, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForWrite FUNC=FxRequest::ProbeAndLockForWrite
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestkm_cpp802 32 "%0Length of zero not allowed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForWrite FUNC=FxRequest::ProbeAndLockForWrite
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequest_cpp794 21 "%0WDFMEMORY 0x%10!p!, buffer %11!p!, PMDL %12!p!, length %13!I64d! bytes" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal FUNC=FxRequest::CompleteInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemLongLong -- 13
}
#typev fxrequest_cpp803 22 "%0IOCTL output WDFMEMORY 0x%10!p!, buffer %11!p!, PMDL %12!p!, length %13!I64d! bytes" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal FUNC=FxRequest::CompleteInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemLongLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ff5ed2ad-90c3-3625-80bc-821a11a612a5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequest_cpp872 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxRequest::CompleteInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequest_cpp660 18 "%0Unknown WDF NTSTATUS 0x%10!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal FUNC=FxRequest::CompleteInternal
{
Arg, ItemLong -- 10
}
#typev fxrequest_cpp667 19 "%0... to %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal FUNC=FxRequest::CompleteInternal
{
Arg, ItemNTSTATUS -- 10
}
#typev fxrequest_cpp633 17 "%0Converting WDF NTSTATUS value 0x%10!x!..." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal FUNC=FxRequest::CompleteInternal
{
Arg, ItemLong -- 10
}
#typev fxrequest_cpp778 20 "%0WDFREQUEST 0x%10!p!, PIRP 0x%11!p!, Major Function 0x%12!x!,  completed with outstanding references on WDFMEMORY 0x%13!p! or 0x%14!p! retrieved from this request" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal FUNC=FxRequest::CompleteInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
}
#typev fxrequest_cpp601 16 "%0Driver that handled WDFREQUEST 0x%10!p! is requesting data to   be written back to the UserBuffer by returing a non zero value  in the Irp 0x%11!p! Information field even though the OutputBufferLength  is zero" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal FUNC=FxRequest::CompleteInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxrequest_cpp1742 38 "%0WDFREQUEST 0x%10!p! could not get a system address for PMDL0x%11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequest_cpp1756 34 "%0WDFREQUEST 0x%10!p! IOCTL output buffer length is zero, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp1756 37 "%0WDFREQUEST 0x%10!p!, METHOD_IN_DIRECT IOCTL PMDL is NULL, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp1691 36 "%0Driver must use METHOD_BUFFERED or METHOD_xx_DIRECT I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
}
#typev fxrequest_cpp1683 35 "%0Attempt to get UserMode Buffer Pointer for METHOD_NEITHER DeviceControl 0x%10!x!, WDFDEVICE 0x%11!p!, WDFREQUEST 0x%12!p!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequest_cpp1494 33 "%0WDFREQUEST 0x%10!p! could not get a system address for PMDL 0x%11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject FUNC=FxRequest::GetMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequest_cpp1466 32 "%0WDFREQUEST 0x%10!p!, direct io device, PMDL is NULL, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject FUNC=FxRequest::GetMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp1446 31 "%0WDFREQUEST 0x%10!p! length is zero, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject FUNC=FxRequest::GetMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp1368 27 "%0WDFREQUEST %10!p! InputBufferLength length is zero, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject FUNC=FxRequest::GetMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp1432 30 "%0Unrecognized Major Function 0x%10!x! on WDFDEVICE 0x%11!p! WDFREQUEST 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject FUNC=FxRequest::GetMemoryObject
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxrequest_cpp1342 26 "%0Driver must use buffered or direct I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject FUNC=FxRequest::GetMemoryObject
{
}
#typev fxrequest_cpp1336 25 "%0Attempt to get UserMode Buffer Pointer for WDFDEVICE 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject FUNC=FxRequest::GetMemoryObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequest_cpp1401 29 "%0Driver must use METHOD_BUFFERED or METHOD_xx_DIRECT I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject FUNC=FxRequest::GetMemoryObject
{
Arg, ItemNTSTATUS -- 10
}
#typev fxrequest_cpp1393 28 "%0Attempt to get UserMode Buffer Pointer for METHOD_NEITHER DeviceControl 0x%10!x!, WDFDEVICE 0x%11!p!, WDFREQUEST 0x%12!p!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject FUNC=FxRequest::GetMemoryObject
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxrequest_cpp2554 48 "%0Attempt to release an IRP reference without adding one first WDFREQUEST 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ReleaseIrpReference FUNC=FxRequest::ReleaseIrpReference
{
Arg, ItemPtr -- 10
}
#typev fxrequest_cpp2366 46 "%0Driver is trying to reuse WDFREQUEST 0x%10!p! with WDF_REQUEST_REUSE_MUST_COMPLETE flag while request is being referenced, reference count:%11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Reuse FUNC=FxRequest::Reuse
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequest_cpp2336 44 "%0Driver is trying to reuse WDFREQUEST 0x%10!p! without specifying an IRP with WDF_REQUEST_REUSE_MUST_COMPLETE flag, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Reuse FUNC=FxRequest::Reuse
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp2170 42 "%0Driver is trying to reuse WDFREQUEST 0x%10!p! while it is still active on WDFIOTARGET 0x%11!p!." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Reuse FUNC=FxRequest::Reuse
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxrequest_cpp2351 45 "%0Driver is trying to reuse WDFREQUEST 0x%10!p! holding aninternal allocated IRP with WDF_REQUEST_REUSE_MUST_COMPLETE flag, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Reuse FUNC=FxRequest::Reuse
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp2323 43 "%0WDFREQUEST %10!p! doesn't belong to any queue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Reuse FUNC=FxRequest::Reuse
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp2381 47 "%0IRP %10!p! of WDFREQUEST %11!p! doesn't have a valid stack location, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Reuse FUNC=FxRequest::Reuse
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequest_cpp1796 39 "%0WDFREQUEST 0x%10!p! has already been completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState FUNC=FxRequest::SetCompletionState
{
Arg, ItemPtr -- 10
}
#typev fxrequest_cpp2772 50 "%0WDFREQUEST %10!p! deferred the dispose operation. Usually this indicates that some child object of the WDFREQUEST requires passive level disposal (e.g. WDFTIMER). This is not supported. Either ensure that the WDFREQUEST always completes at passive level, or do not parent the object to the WDFREQUEST." //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifierBreakpoint_RequestEarlyDisposeDeferred FUNC=FxRequest::Vf_VerifierBreakpoint_RequestEarlyDisposeDeferred
{
Arg, ItemPtr -- 10
}
#typev fxrequest_cpp493 15 "%0WDFREQUEST %10!p!, MJ 0x%11!x!, Information 0x%12!I64x! is greater then buffer length 0x%13!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyCompleteInternal FUNC=FxRequest::Vf_VerifyCompleteInternal
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemLong -- 13
}
#typev fxrequest_cpp408 14 "%0Completing Cancelable WDFREQUEST %10!p!.  This results in a race condition in the device driver that can cause double completions.  Call WdfRequestUnmarkCancelable before WdfRequestComplete.  If WdfRequestUnmarkCancelable returns STATUS_CANCELLED, do not complete the request until the EvtIoCancel handler is called.  The straightforward way to ensure this is to complete a canceled request from the EvIoCancel callback." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyCompleteInternal FUNC=FxRequest::Vf_VerifyCompleteInternal
{
Arg, ItemPtr -- 10
}
#typev fxrequest_cpp1850 40 "%0Already in FxIrpQueue 0x%10!p! WDFREQUEST 0x%11!p! %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyInsertIrpQueue FUNC=FxRequest::Vf_VerifyInsertIrpQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequest_cpp1105 24 "%0WDFREQUEST %10!p! cannot send and forget a create request which has a WDFFILEOBJECT created for it, it must have a completion routine and be post processsed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyPreProcessSendAndForget FUNC=FxRequest::Vf_VerifyPreProcessSendAndForget
{
Arg, ItemPtr -- 10
}
#typev fxrequest_cpp1078 23 "%0WDFREQUEST %10!p! cannot send and forget will not execute completion routine %11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyPreProcessSendAndForget FUNC=FxRequest::Vf_VerifyPreProcessSendAndForget
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxrequest_cpp2588 49 "%0Attempt to access user mode memory from the wrong process Irp->Tail.Overlay.Thread 0x%10!p!, PsGetCurrentThread 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyProbeAndLock FUNC=FxRequest::Vf_VerifyProbeAndLock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequest_cpp3094 62 "%0IRP %10!p! of WDFREQUEST %11!p! cannot be completed, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestCanBeCompleted FUNC=FxRequest::Vf_VerifyRequestCanBeCompleted
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequest_cpp3006 59 "%0Request 0x%10!p! was not allocated for an incoming IRP, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::Vf_VerifyRequestIsAllocatedFromIo FUNC=FxRequest::Vf_VerifyRequestIsAllocatedFromIo
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp2837 53 "%0WDFREQUEST 0x%10!p! is not cancelable, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsCancelable FUNC=FxRequest::Vf_VerifyRequestIsCancelable
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp3047 61 "%0IRP %10!p! of WDFREQUEST %11!p! doesn't have a valid stack location, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsCurrentStackValid FUNC=FxRequest::Vf_VerifyRequestIsCurrentStackValid
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequest_cpp3035 60 "%0WDFREQUEST %10!p! doesn't have an IRP, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsCurrentStackValid FUNC=FxRequest::Vf_VerifyRequestIsCurrentStackValid
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp2806 52 "%0WDFREQUEST 0x%10!p! has been used as a TagRequest in WdfIoQueueFindRequest. A TagRequest cannot be used until it is retrieved by WdfIoQueueRetrieveFoundRequest" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsDriverOwned FUNC=FxRequest::Vf_VerifyRequestIsDriverOwned
{
Arg, ItemPtr -- 10
}
#typev fxrequest_cpp2797 51 "%0WDFREQUEST 0x%10!p! is not owned by the driver, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsDriverOwned FUNC=FxRequest::Vf_VerifyRequestIsDriverOwned
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp2892 55 "%0This call is valid only in EvtIoInCallerContext callback, WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsInCallerContext FUNC=FxRequest::Vf_VerifyRequestIsInCallerContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp2919 56 "%0This call is valid only in EvtIoStop callback, WDFREQUEST 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::Vf_VerifyRequestIsInEvtIoStopContext FUNC=FxRequest::Vf_VerifyRequestIsInEvtIoStopContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp2864 54 "%0WDFREQUEST 0x%10!p! should be unmarked cancelable by calling WdfRequestUnmarkCancelable, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsNotCancelable FUNC=FxRequest::Vf_VerifyRequestIsNotCancelable
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp2946 57 "%0WDFREQUEST 0x%10!p! is already completed, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::Vf_VerifyRequestIsNotCompleted FUNC=FxRequest::Vf_VerifyRequestIsNotCompleted
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp2982 58 "%0Request 0x%10!p! is not returned by WdfIoQueueFindRequest, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::Vf_VerifyRequestIsTagRequest FUNC=FxRequest::Vf_VerifyRequestIsTagRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp209 12 "%0Handle create failed %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_Create FUNC=FxRequest::_Create
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequest_cpp198 13 "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxRequest::_Create
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequest_cpp198 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxRequest::_Create
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequest_cpp198 11 "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxRequest::_Create
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequest_cpp198 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget FUNC=FxRequest::_Create
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequest_cpp202 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxRequest::_Create
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxrequest_cpp189 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=FxRequest::_Create
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequest_cpp228 13 "%0Irp %10!p! Ownership %11!s! FxRequest %12!p!, status %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::_Create FUNC=FxRequest::_Create
{
Arg, ItemPtr -- 10
Arg, ItemEnum(FxRequestIrpOwnership) -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequest_cpp147 15 "%0The driver allocated excessive number (%10!u!) of WDF objects. Investigate with !wdfDriverInfo driverName 0x41 or 0x50. To adjust the limit, modify driver reg key under Parameters\Wdf\ObjectLeakDetectionLimit. To disable the check, set it to 0xffffffff." //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::DetectExcessiveAllocation FUNC=FxRequest::_CreateForPackage
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequest_cpp157 11 "%0Could not commit FxRequest %10!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage FUNC=FxRequest::_CreateForPackage
{
Arg, ItemNTSTATUS -- 10
}
#typev fxrequest_cpp121 10 "%0Memory allocation failed %10!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage FUNC=FxRequest::_CreateForPackage
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequest_cpp141 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxRequest::_CreateForPackage
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequest_cpp141 15 "%0The driver allocated excessive number (%10!u!) of WDF objects. Investigate with !wdfDriverInfo driverName 0x41 or 0x50. To adjust the limit, modify driver reg key under Parameters\Wdf\ObjectLeakDetectionLimit. To disable the check, set it to 0xffffffff." //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::DetectExcessiveAllocation FUNC=FxRequest::_CreateForPackage
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8cdf3492-ce98-3b09-79e6-1e14b6d7ed6b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicebase_cpp411 16 "%0WDFDEVICE %10!p! failed to initialize (commit) a WDFIOTARGET, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDeviceBase::AllocateTarget FUNC=FxDeviceBase::AllocateTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicebase_cpp411 14 "%0WDFDEVICE %10!p! failed to initialize (add) a WDFIOTARGET, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDeviceBase::AllocateTarget FUNC=FxDeviceBase::AllocateTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicebase_cpp411 15 "%0WDFDEVICE %10!p! failed to initialize a WDFIOTARGET, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDeviceBase::AllocateTarget FUNC=FxDeviceBase::AllocateTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicebase_cpp368 13 "%0WDFDEVICE %10!p! could not allocate a WDFIOTARGET, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDeviceBase::AllocateTarget FUNC=FxDeviceBase::AllocateTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e401b43a-d4dd-34e8-5fe2-834b5a92ce96 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxCallbackLock_hpp125 10 "%0Callback: Driver released the callback lock 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxCallbackLock::CheckOwnership FUNC=FxCallbackLock::CheckOwnership
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8cdf3492-ce98-3b09-79e6-1e14b6d7ed6b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicebase_cpp157 10 "%0WDFDEVICE %10!p!, could not allocate callback lock, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxDeviceBase::ConfigureConstraints FUNC=FxDeviceBase::ConfigureConstraints
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b74f66c8-b4a2-344e-3d46-f66ae6ef7756 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxVerifierLock_hpp427 11 "%0Failed to allocate verifier lock, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::CreateAndInitialize FUNC=FxVerifierLock::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e734846a-2df5-32a3-03a8-520a0ca3ee90 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxCallbackMutexLock_hpp114 10 "%0Recursive acquire of callback lock 0x%10!p!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxCallbackMutexLock::Lock FUNC=FxCallbackMutexLock::Lock
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
3df57b28-e3d7-367d-e777-3179c1805dd1 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxCallbackSpinLock_hpp109 10 "%0Recursive acquire of callback lock! 0x%10!p!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxCallbackSpinLock::Lock FUNC=FxCallbackSpinLock::Lock
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8cdf3492-ce98-3b09-79e6-1e14b6d7ed6b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicebase_cpp233 11 "%0WDFHANDLE %10!p! does not have a WDFDEVICE as an ancestor" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxDeviceBase::_SearchForDevice FUNC=FxDeviceBase::_SearchForDevice
{
Arg, ItemPtr -- 10
}
#typev fxdevicebase_cpp297 12 "%0WDFHANDLE %10!p! does not have a callbacks interface in its object tree(WDFDEVICE %11!p!)" //   GLOBALS=pOrigParent->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxDeviceBase::_SearchForDevice FUNC=FxDeviceBase::_SearchForDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
1c332a82-27a4-38a8-5b5a-6e9d2e217e34 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceinit_cpp167 10 "%0DeviceName is NULL, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFDEVICE_INIT::AssignName FUNC=WDFDEVICE_INIT::AssignName
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdeviceinit_cpp270 13 "%0WDFDRIVER 0x%10!p! asked for a named device object, but the PDO will be created without a name because an SDDL string has not been specified for the PDO." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=WDFDEVICE_INIT::ShouldCreateSecure FUNC=WDFDEVICE_INIT::ShouldCreateSecure
{
Arg, ItemPtr -- 10
}
#typev fxdeviceinit_cpp198 11 "%0WDFDRIVER 0x%10!p!  couldn't allocate WDFDEVICE_INIT" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFDEVICE_INIT::_AllocateControlDeviceInit FUNC=WDFDEVICE_INIT::_AllocateControlDeviceInit
{
Arg, ItemPtr -- 10
}
#typev fxdeviceinit_cpp221 12 "%0WDFDRIVER 0x%10!p! couldn't create Security String object %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFDEVICE_INIT::_AllocateControlDeviceInit FUNC=WDFDEVICE_INIT::_AllocateControlDeviceInit
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c5a345e2-c414-3b09-10f5-af0f0e1496e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceinitkm_cpp73 10 "%0Out of range Read/Write IoType %10!d!, %11!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFDEVICE_INIT::AssignIoType FUNC=WDFDEVICE_INIT::AssignIoType
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a4235d2c-9e7d-39cd-b3e8-3d81d4cf826d WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicekm_cpp474 12 "%0Adding DmaEnabler %10!p!, WDFDMAENABLER %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::AddDmaEnabler FUNC=FxDevice::AddDmaEnabler
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
1d93f5dc-3a9e-3580-6467-9ce0358dac1f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicekm_cpp1055 29 "%0WDFDEVICE %10!p! could not allocate a device companion target, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::AllocateCompanionTarget FUNC=FxDevice::AllocateCompanionTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp1086 31 "%0WDFDEVICE %10!p! failed to initialize (commit) a WDFIOTARGET, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::AllocateCompanionTarget FUNC=FxDevice::AllocateCompanionTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp1086 30 "%0WDFDEVICE %10!p! failed to initialize device companion, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::AllocateCompanionTarget FUNC=FxDevice::AllocateCompanionTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp730 22 "%0WDFDEVICE %10!p! failed to assign device property, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::AssignProperty FUNC=FxDevice::AssignProperty
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp730 21 "%0WDFDEVICE %10!p! is not yet known to PnP manager, cannot call WdfDeviceAssignPropertyEx in this state, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::AssignProperty FUNC=FxDevice::AssignProperty
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp668 20 "%0WDFDEVICE %10!p!  create sybolic link failed, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::CreateSymbolicLink FUNC=FxDevice::CreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp668 16 "%0WDFDEVICE %10!p! PDO name length is zero, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::CreateSymbolicLink FUNC=FxDevice::CreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp668 17 "%0WDFDEVICE %10!p! could not allocate buffer for PDO name, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::CreateSymbolicLink FUNC=FxDevice::CreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp668 19 "%0WDFDEVICE %10!p! allocate buffer for symbolic name failed, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::CreateSymbolicLink FUNC=FxDevice::CreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp625 18 "%0WDFDEVICE %10!p! IoGetDeviceProperty failed second time, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::CreateSymbolicLink FUNC=FxDevice::CreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp580 15 "%0WDFDEVICE %10!p! PDO name too long (%11!d!, max is %12!d!), %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::CreateSymbolicLink FUNC=FxDevice::CreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdevicekm_cpp571 14 "%0WDFDEVICE %10!p! IoGetDeviceProperty failed %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::CreateSymbolicLink FUNC=FxDevice::CreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp554 13 "%0WDFDEVICE %10!p! has not yet been reported to pnp, cannot call IoGetDeviceProperty in this state, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::CreateSymbolicLink FUNC=FxDevice::CreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp539 12 "%0WDFDEVICE %10!p! has no device name (use WdfDeviceInitAssignName), %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::CreateSymbolicLink FUNC=FxDevice::CreateSymbolicLink
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp355 11 "%0Deleting !devobj %10!p!, WDFDEVICE %11!p!, attached to !devobj %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=FxDevice::Destroy FUNC=FxDevice::Destroy
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxdevicekm_cpp48 10 "%0Must set EvtDeviceRemoveAddedResources if EvtDeviceFilterAddResourceRequirements (%10!p!) is set" //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::FdoInitialize FUNC=FxDevice::FdoInitialize
{
Arg, ItemPtr -- 10
}
#typev fxdevicekm_cpp1033 28 "%0WDFKEY open failed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxDevice::OpenDevicemapKeyWorker FUNC=FxDevice::OpenDevicemapKeyWorker
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdevicekm_cpp1021 27 "%0Unable to create a DEVICEMAP registry path for subkey %10!s!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::OpenDevicemapKeyWorker FUNC=FxDevice::OpenDevicemapKeyWorker
{
Arg, ItemWString -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a4235d2c-9e7d-39cd-b3e8-3d81d4cf826d WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicekm_cpp484 13 "%0Removing DmaEnabler %10!p!, WDFDMAENABLER %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::RemoveDmaEnabler FUNC=FxDevice::RemoveDmaEnabler
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
1d93f5dc-3a9e-3580-6467-9ce0358dac1f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevicekm_cpp777 23 "%0WDFDEVICE %10!p! is not yet known to PnP manager, cannot open PNP registry keys in this state, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_OpenKey FUNC=FxDevice::_OpenKey
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp979 26 "%0WDFDEVICE %10!p! is not yet known to PnP manager, cannot query device properties in this state, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_QueryProperty FUNC=FxDevice::_QueryProperty
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevicekm_cpp932 25 "%0Query for property buffer failed, %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::_QueryPropertyEx FUNC=FxDevice::_QueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdevicekm_cpp907 24 "%0WDFDEVICE %10!p! is not yet known to PnP manager, cannot query device properties in this state, %11!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_QueryPropertyEx FUNC=FxDevice::_QueryPropertyEx
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9bca9a8c-2937-3f0a-ac83-281ecaa6d247 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevice_cpp245 10 "%0FxDevice 0x%10!p! not disposed: this maybe a driver reference count problem with WDFDEVICE %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxDevice::~FxDevice FUNC=FxDevice::~FxDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxdevice_cpp601 12 "%0WDFDEVICE %10!p!, !devobj %11!p! is a filter, converting %12!s! to STATUS_SUCCESS" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevice::DeleteDeviceFromFailedCreateNoDelete FUNC=FxDevice::DeleteDeviceFromFailedCreateNoDelete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdevice_cpp579 11 "%0WDFDEVICE %10!p! !devobj %11!p! created, but EvtDriverDeviceAdd returned status %12!s! or failure in creation" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::DeleteDeviceFromFailedCreateNoDelete FUNC=FxDevice::DeleteDeviceFromFailedCreateNoDelete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0dacf7e3-ec70-33b5-192e-49f4d8831e0f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxPoolInlines_hpp66 11 "%0Size overflow, could not add pool tracker, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolAddHeaderSize FUNC=FxPoolAddHeaderSize
{
Arg, ItemNTSTATUS -- 10
}
#typev FxPoolInlines_hpp55 10 "%0Size overflow, could not add pool header, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolAddHeaderSize FUNC=FxPoolAddHeaderSize
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2060831f-e143-324a-983e-9a09a7eb65f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevice_cpp1903 29 "%0I/O Package already has a default queue. SetFilter must be called before creating a default queue %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::SetFilter FUNC=FxDevice::SetFilter
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9bca9a8c-2937-3f0a-ac83-281ecaa6d247 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdevice_cpp2096 18 "%0Could not commit memory object, %10!s!" //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty FUNC=FxDevice::_AllocAndQueryProperty
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdevice_cpp2084 17 "%0Could not query for full buffer, size %10!d!, for property %11!d!, %12!s!" //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty FUNC=FxDevice::_AllocAndQueryProperty
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdevice_cpp2070 16 "%0Could not allocate WDFMEMORY, %10!s!" //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty FUNC=FxDevice::_AllocAndQueryProperty
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdevice_cpp2056 15 "%0Could not retrieve property %10!d! length, %11!s!" //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty FUNC=FxDevice::_AllocAndQueryProperty
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevice_cpp2180 22 "%0Could not commit memory object, %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::_AllocAndQueryPropertyEx FUNC=FxDevice::_AllocAndQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdevice_cpp2153 20 "%0Could not allocate WDFMEMORY, %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::_AllocAndQueryPropertyEx FUNC=FxDevice::_AllocAndQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdevice_cpp2135 19 "%0Could not retrieve property, %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::_AllocAndQueryPropertyEx FUNC=FxDevice::_AllocAndQueryPropertyEx
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdevice_cpp2168 21 "%0Could not query for full buffer, size %10!d!, for property, %11!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::_AllocAndQueryPropertyEx FUNC=FxDevice::_AllocAndQueryPropertyEx
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdevice_cpp2211 23 "%0Device OpenKey/QueryProperty was called with invalid DeviceInit and Device parameters, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_ValidateOpenKeyParams FUNC=FxDevice::_ValidateOpenKeyParams
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxmemoryobject_cpp106 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=FxMemoryObject::_Create
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cb1067eb-57f6-3268-cdff-dfcad6c03699 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxfileobject_cpp212 11 "%0PFILE_OBJECT in close IRP is NULL, *Possible Leak of FxFileObject*" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxFileObject::_DestroyFileObject FUNC=FxFileObject::_DestroyFileObject
{
}
#typev fxfileobject_cpp250 13 "%0Did a different PFILE_OBJECT get passed to IRP_MJ_CLOSE than did to IRP_MJ_CREATE?" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_DestroyFileObject FUNC=FxFileObject::_DestroyFileObject
{
}
#typev fxfileobject_cpp246 12 "%0Could not find WDFFILEOBJECT for PFILE_OBJECT 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_DestroyFileObject FUNC=FxFileObject::_DestroyFileObject
{
Arg, ItemPtr -- 10
}
#typev fxfileobject_cpp324 14 "%0NULL passed for PFILE_OBJECT when FileObject support is requested in an I/O request" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxFileObject::_GetFileObjectFromWdm
{
}
#typev fxfileobject_cpp427 18 "%0Did a different PFILE_OBJECT get passed to the request than was to IRP_MJ_CREATE?" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxFileObject::_GetFileObjectFromWdm
{
}
#typev fxfileobject_cpp423 17 "%0Could not locate WDFFILEOBJECT for PFILE_OBJECT 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxFileObject::_GetFileObjectFromWdm
{
Arg, ItemPtr -- 10
}
#typev fxfileobject_cpp409 16 "%0Since this is a serial port device, framework is using a workaround to allow this" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxFileObject::_GetFileObjectFromWdm
{
}
#typev fxfileobject_cpp404 15 "%0The PFILE_OBJECT 0x%10!p! in this request (cleanup/close) is different from the one specified in create request 0x%11!p!.This is bad!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxFileObject::_GetFileObjectFromWdm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestbase_cpp180 10 "%0Handle %10!s! %11!p! (raw object %12!p!) was freed using WdfObjectDereference(), not WdfObjectDelete()" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGOBJECT FUNC=FxObject::~FxObject FUNC=FxRequestBase::~FxRequestBase
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ff5ed2ad-90c3-3625-80bc-821a11a612a5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestbase_cpp180 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxRequestBase::~FxRequestBase
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestbase_cpp617 18 "%0Could not cancel request %10!p!, already completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel FUNC=FxRequestBase::Cancel
{
Arg, ItemPtr -- 10
}
#typev fxrequestbase_cpp608 17 "%0Request %10!p!, PIRP %11!p!, completed synchronously in cancel call, completing request on target %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel FUNC=FxRequestBase::Cancel
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxrequestbase_cpp590 16 "%0Request %10!p!, PIRP %11!p!, cancel result %12!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel FUNC=FxRequestBase::Cancel
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}
#typev fxrequestbase_cpp552 15 "%0Request %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel FUNC=FxRequestBase::Cancel
{
Arg, ItemPtr -- 10
}
#typev fxrequestbase_cpp795 20 "%0Request %10!p!, did not cancel timer" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::CancelTimer FUNC=FxRequestBase::CancelTimer
{
Arg, ItemPtr -- 10
}
#typev fxrequestbase_cpp805 21 "%0Request %10!p!, canceled timer successfully" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::CancelTimer FUNC=FxRequestBase::CancelTimer
{
Arg, ItemPtr -- 10
}
#typev fxrequestbase_cpp364 13 "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxRequestBase::ValidateTarget
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequestbase_cpp339 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxRequestBase::ValidateTarget
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxrequestbase_cpp324 11 "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxRequestBase::ValidateTarget
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestbase_cpp371 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget FUNC=FxRequestBase::ValidateTarget
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxrequestbase_cpp195 10 "%0Driver is trying to delete WDFREQUEST 0x%10!p! while it is still active on WDFIOTARGET 0x%11!p!." //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequestBase::Vf_VerifyDispose FUNC=FxRequestBase::Vf_VerifyDispose
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
d9902d9f-fdf0-3fe2-a8c7-70f8541a9501 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxcxdeviceinit_cpp69 10 "%0WDFDRIVER 0x%10!p!  couldn't allocate WDFCXDEVICE_INIT" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFCXDEVICE_INIT::_AllocateCxDeviceInit FUNC=WDFCXDEVICE_INIT::_AllocateCxDeviceInit
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
3c02da23-88b9-3b8e-62c6-8434fde0e0a0 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdriver_cpp85 10 "%0FxDriver 0x%10!p! not disposed: this maybe a driver reference count problem with WDFDRIVER 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDRIVER FUNC=FxDriver::~FxDriver FUNC=FxDriver::~FxDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxdriver_cpp566 15 "%0Driver Object %10!p!, reg path %11!s! cannot be unloaded, no DriverUnload routine specified" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=FxDriver::Initialize FUNC=FxDriver::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemPWString -- 11
}
#typev fxdriver_cpp188 14 "%0Driver unload routine Exit WDFDRIVER %10!p!, PDRIVER_OBJECT_UM %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=FxDriver::Unload FUNC=FxDriver::Unload
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxdriver_cpp180 13 "%0Unloading WDFDRIVER %10!p!, PDRIVER_OBJECT_UM %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=FxDriver::Unload FUNC=FxDriver::Unload
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
941f77ae-22d4-3c2d-ab2f-da611e4d6459 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxworkitem_cpp81 10 "%0WDFWORKITEM %10!p! destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove.  Possible reference count problem?" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::~FxWorkItem FUNC=FxWorkItem::~FxWorkItem
{
Arg, ItemPtr -- 10
}
#typev fxworkitem_cpp308 15 "%0WDFWORKITEM 0x%10!p! is already deleted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Enqueue FUNC=FxWorkItem::Enqueue
{
Arg, ItemPtr -- 10
}
#typev fxworkitem_cpp302 14 "%0Previously queued WDFWORKITEM 0x%10!p! is already pending. Ignoring the request to queue again" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Enqueue FUNC=FxWorkItem::Enqueue
{
Arg, ItemPtr -- 10
}
#typev fxworkitem_cpp515 16 "%0Calling WdfWorkItemFlush from within the WDFWORKITEM %10!p! callback will lead to deadlock, PRKTHREAD %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::FlushAndWait FUNC=FxWorkItem::FlushAndWait
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxworkitem_cpp234 13 "%0Could not allocate IoWorkItem, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Initialize FUNC=FxWorkItem::Initialize
{
Arg, ItemNTSTATUS -- 10
}
#typev fxworkitem_cpp210 12 "%0ParentObject %10!p! cannot automatically synchronize callbacks with a WorkItem since it is not configured for passive level callback constraints.  Use a WDFDPC instead or set AutomaticSerialization to FALSE.%11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Initialize FUNC=FxWorkItem::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c0d88b3d-e9c4-3c22-c54d-292146f17d36 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxtimer_cpp74 10 "%0WDFTIMER %10!p! destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove. Possible reference count problem?" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::~FxTimer FUNC=FxTimer::~FxTimer
{
Arg, ItemPtr -- 10
}
#typev fxtimer_cpp520 14 "%0Deleting WDFTIMER %10!p! from with in the callback will lead to deadlock, PRKTHREAD %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::FlushAndRundown FUNC=FxTimer::FlushAndRundown
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxtimer_cpp264 13 "%0Could not allocate workitem: %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Initialize FUNC=FxTimer::Initialize
{
Arg, ItemNTSTATUS -- 10
}
#typev fxtimer_cpp244 12 "%0ParentObject %10!p! cannot automatically synchronize callbacks with a Timer since it is configured for passive level callback constraints. Set AutomaticSerialization to FALSE. %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Initialize FUNC=FxTimer::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxtimer_cpp174 11 "%0Failed to initialize timer %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Initialize FUNC=FxTimer::Initialize
{
Arg, ItemNTSTATUS -- 10
}
#typev fxtimer_cpp709 19 "%0Detected multiple calls to WdfTimerStop for WDFTIMER 0x%10!p!, stop in progress on PRKTHREAD 0x%11!p!, current PRKTHREAD 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Stop FUNC=FxTimer::Stop
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxtimer_cpp679 17 "%0Calling WdfTimerStop from within the WDFTIMER %10!p! callback will lead to deadlock, PRKTHREAD %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Stop FUNC=FxTimer::Stop
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxtimer_cpp690 18 "%0WdfTimerStop(Wait==TRUE) called at IRQL > PASSIVE_LEVEL, current IRQL = 0x%10!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Stop FUNC=FxTimer::Stop
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
f2c76ba2-da03-389e-2339-783f2f8a016c WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdisposelist_cpp103 10 "%0Could not allocate workitem: %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxDisposeList::Initialize FUNC=FxDisposeList::Initialize
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
5f427393-9cc5-3387-c1c1-623b43094801 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdriverkm_cpp90 12 "%0Filter returned %10!s! without creating a WDFDEVICE, converting to STATUS_SUCCESS" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice FUNC=FxDriver::AddDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdriverkm_cpp81 11 "%0Driver did not create a device in EvtDriverAddDevice, status %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice FUNC=FxDriver::AddDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdriverkm_cpp121 13 "%0Exit, status %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice FUNC=FxDriver::AddDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdriverkm_cpp64 10 "%0Enter AddDevice PDO %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice FUNC=FxDriver::AddDevice
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0953a7c5-2366-32d4-5528-6af3b0b41286 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxirpqueue_cpp658 10 "%0Irp 0x%10!p! (Context 0x%11!p!) not on IRP queue 0x%12!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxIrpQueue::Vf_VerifyRemoveIrpFromQueueByContext FUNC=FxIrpQueue::Vf_VerifyRemoveIrpFromQueueByContext
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxirpqueue_cpp921 11 "%0Irp 0x%10!p! on Queue 0x%11!p! Cancelled" //   GLOBALS=p->m_LockObject->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxIrpQueue::_WdmCancelRoutineInternal FUNC=FxIrpQueue::_WdmCancelRoutineInternal
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c36ebe77-d8b5-3309-93aa-53acd9373c0f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxsystemworkitem_cpp83 10 "%0WorkItem destroyed without calling FxSystemWorkItem::Delete, or by Framework processing DeviceRemove. Possible reference count problem?" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::~FxSystemWorkItem FUNC=FxSystemWorkItem::~FxSystemWorkItem
{
}
#typev fxsystemworkitem_cpp211 15 "%0WorkItem 0x%10!p! is already deleted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::EnqueueWorker FUNC=FxSystemWorkItem::EnqueueWorker
{
Arg, ItemPtr -- 10
}
#typev fxsystemworkitem_cpp197 14 "%0WorkItem 0x%10!p! already enqueued IoWorkItem 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::EnqueueWorker FUNC=FxSystemWorkItem::EnqueueWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxsystemworkitem_cpp148 13 "%0Could not allocate IoWorkItem, insufficient resources" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::Initialize FUNC=FxSystemWorkItem::Initialize
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
be47dc0e-55d2-3007-f091-9b87ec94b17c WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxobjectapi_cpp211 10 "%0Invalid to call on WDFOBJECT 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectAcquireLock FUNC=imp_WdfObjectAcquireLock
{
Arg, ItemPtr -- 10
}
#typev fxobjectapi_cpp309 12 "%0Attempt to Delete an Object Which does not allow WdfDeleteObject Handle 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectDelete FUNC=imp_WdfObjectDelete
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxobjectapi_cpp299 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfObjectDelete
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
be47dc0e-55d2-3007-f091-9b87ec94b17c WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxobjectapi_cpp268 11 "%0Invalid to call on WDFOBJECT 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectReleaseLock FUNC=imp_WdfObjectReleaseLock
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev handleapi_cpp135 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=FxCalculateObjectTotalSize2
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
#typev handleapi_cpp155 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=FxCalculateObjectTotalSize
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
#typev handleapi_cpp512 12 "%0Attributes %10!p! ContextTypeInfo is NULL, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=FxObjectAllocateContext FUNC=FxObjectAllocateContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev handleapi_cpp526 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=FxObjectAllocateContext
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
#typev handleapi_cpp601 13 "%0Attempting to get context type %10!s! from FxObject 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=FxObjectGetTypedContext FUNC=FxObjectGetTypedContext
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
}
#typev handleapi_cpp296 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=FxObjectHandleAlloc2
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
#typev handleapi_cpp439 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxObjectHandleGetPtrQI
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev handleapi_cpp675 12 "%0Attributes %10!p! ContextTypeInfo is NULL, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=FxObjectAllocateContext FUNC=imp_WdfObjectAllocateContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev handleapi_cpp665 14 "%0WDFHANDLE %10!p! cannot have contexts added to it, %11!s!" //   GLOBALS=object->GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=imp_WdfObjectAllocateContext FUNC=imp_WdfObjectAllocateContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev handleapi_cpp675 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=imp_WdfObjectAllocateContext
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
#typev handleapi_cpp739 13 "%0Attempting to get context type %10!s! from FxObject 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=FxObjectGetTypedContext FUNC=imp_WdfObjectGetTypedContextWorker
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
3bd46259-1e85-3af0-a455-c2c65aaa39c3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev globals_cpp1029 19 "%0Destroying Pool 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPOOL FUNC=FxPoolDestroy FUNC=FxDestroy
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
5bda22bb-5578-34e7-9542-5da34c1d75ed WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev globals_cpp875 13 "%0Initialize globals for %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=FxInitialize FUNC=FxInitialize
{
Arg, ItemPWString -- 10
}
#typev globals_cpp789 11 "%0Increment Lock counter (%10!d!) for Verifier Paged Memory from  %11!s! from driver globals %12!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=LockVerifierSection FUNC=LockVerifierSection
{
Arg, ItemLong -- 10
Arg, ItemPWString -- 11
Arg, ItemPtr -- 12
}
#typev globals_cpp777 10 "%0First time Locking (%10!d!) in Verifier Paged Memory from  %11!s! from driver globals %12!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=LockVerifierSection FUNC=LockVerifierSection
{
Arg, ItemLong -- 10
Arg, ItemPWString -- 11
Arg, ItemPtr -- 12
}
#typev globals_cpp808 12 "%0Decrement UnLock counter (%10!d!) for Verifier Paged Memory with driver globals %11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=UnlockVerifierSection FUNC=UnlockVerifierSection
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0b8e733f-c51d-3c3c-f36c-ce34ca91469b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxuserobjectapi_cpp136 10 "%0Created UserObject Handle 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGUSEROBJECT FUNC=imp_WdfObjectCreate FUNC=imp_WdfObjectCreate
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
583c7b0b-364c-33d7-41a5-1294b28378e9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxverifierbugcheck_cpp116 10 "%0NULL Required Parameter Passed to a DDI
FxDriverGlobals 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGERROR FUNC=FxVerifierNullBugCheck FUNC=FxVerifierNullBugCheck
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
867b34d2-f3aa-3706-4654-33a8ec52241e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxvalidatefunctions_cpp173 19 "%0Attributes %10!p! synchronization scope set to %11!d!, out of range, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxvalidatefunctions_cpp208 21 "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxvalidatefunctions_cpp190 20 "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxvalidatefunctions_cpp141 16 "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxvalidatefunctions_cpp69 11 "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxvalidatefunctions_cpp99 13 "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxvalidatefunctions_cpp127 15 "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxvalidatefunctions_cpp116 14 "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxvalidatefunctions_cpp163 18 "%0Attributes %10!p! execution level set to %11!d!, out of range, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxvalidatefunctions_cpp83 12 "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!, %14!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxvalidatefunctions_cpp152 17 "%0ParentObject required in WDF_OBJECT_ATTRIBUTES %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxvalidatefunctions_cpp53 10 "%0WDF_OBJECT_ATTRIBUTES required, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxValidateObjectAttributes FUNC=FxValidateObjectAttributes
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxobject_cpp140 10 "%0Handle %10!s! %11!p! (raw object %12!p!) was freed using WdfObjectDereference(), not WdfObjectDelete()" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGOBJECT FUNC=FxObject::~FxObject FUNC=FxObject::~FxObject
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ff5ed2ad-90c3-3625-80bc-821a11a612a5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxobject_cpp155 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::~FxObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxobject_cpp1164 15 "%0The driver allocated excessive number (%10!u!) of WDF objects. Investigate with !wdfDriverInfo driverName 0x41 or 0x50. To adjust the limit, modify driver reg key under Parameters\Wdf\ObjectLeakDetectionLimit. To disable the check, set it to 0xffffffff." //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::DetectExcessiveAllocation FUNC=FxObject::Commit
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxobject_cpp1095 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxObject::Commit
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
6df43913-54b6-3c95-b547-a6ebf20a0f08 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxTagTracker_hpp238 10 "%0Failed to allocate tag tracker, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CreateAndInitialize FUNC=FxTagTracker::CreateAndInitialize
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxobject_cpp1249 15 "%0The driver allocated excessive number (%10!u!) of WDF objects. Investigate with !wdfDriverInfo driverName 0x41 or 0x50. To adjust the limit, modify driver reg key under Parameters\Wdf\ObjectLeakDetectionLimit. To disable the check, set it to 0xffffffff." //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::DetectExcessiveAllocation FUNC=FxObject::DetectExcessiveAllocation
{
Arg, ItemLong -- 10
}
#typev fxobject_cpp756 12 "%0Cannot move contexts to FxObject 0x%10!p! that is not completely created yet, because if the object fails before/during Commit(), the incoming context's cleanup callback will not be called" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGHANDLE FUNC=FxObject::MoveContexts FUNC=FxObject::MoveContexts
{
Arg, ItemPtr -- 10
}
#typev fxobject_cpp806 14 "%0Fail to add context 0x%10!p! to FxObject 0x%11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGHANDLE FUNC=FxObject::MoveContexts FUNC=FxObject::MoveContexts
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxobject_cpp790 13 "%0Duplicated context 0x%10!p! already exists for the target object 0x%11!p!." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGHANDLE FUNC=FxObject::MoveContexts FUNC=FxObject::MoveContexts
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxobject_cpp747 11 "%0Cannot move contexts from FxObject 0x%10!p! as the object was created with a context type using WDF_OBJECT_ATTRIBUTES_INIT_CONTEXT_TYPE" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGHANDLE FUNC=FxObject::MoveContexts FUNC=FxObject::MoveContexts
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ff5ed2ad-90c3-3625-80bc-821a11a612a5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxobject_hpp387 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::SetObjectStateLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobject_hpp948 11 "%0Object %10!p!, WDFOBJECT %11!p!, state %12!s! dropping event %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::TraceDroppedEvent FUNC=FxObject::TraceDroppedEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectDroppedEvent) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
3bd46259-1e85-3af0-a455-c2c65aaa39c3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev wdfpool_cpp240 12 "%0overflow: allocation tracker (%10!d!) + header (%11!d!) + pool request (%12!I64d!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator FUNC=FxPoolAllocator
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLong -- 12
}
#typev wdfpool_cpp183 11 "%0Allocation Fail Count exceeded" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator FUNC=FxPoolAllocator
{
}
#typev wdfpool_cpp164 10 "%0Invalid Allocation Size of 0 requested" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator FUNC=FxPoolAllocator
{
}
#typev wdfpool_cpp332 13 "%0overflow: header + pool request (%10!I64d!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator FUNC=FxPoolAllocator
{
Arg, ItemLongLong -- 10
}
#typev wdfpool_cpp577 16 "%0FX_POOL 0x%10!p! leaked non-paged memory alloc 0x%11!p! (tracking block %12!p!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump FUNC=FxPoolDump
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev wdfpool_cpp555 15 "%0FX_POOL 0x%10!p! leaked paged memory alloc 0x%11!p! (tracking block %12!p!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump FUNC=FxPoolDump
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev wdfpool_cpp529 14 "%0FxPoolDump: NonPagedBytes %10!I64d!, PagedBytes %11!I64d!, NonPagedAllocations %12!d!, PagedAllocations %13!d!,PeakNonPagedBytes %14!I64d!, PeakPagedBytes %15!I64d!,FxPoolDump: PeakNonPagedAllocations %16!d!, PeakPagedAllocations %17!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump FUNC=FxPoolDump
{
Arg, ItemLongLong -- 10
Arg, ItemLongLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLongLong -- 14
Arg, ItemLongLong -- 15
Arg, ItemLong -- 16
Arg, ItemLong -- 17
}
#typev wdfpool_cpp615 17 "%0Initializing Pool 0x%10!p!, Tracking %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPOOL FUNC=FxPoolInitialize FUNC=FxPoolInitialize
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ff5ed2ad-90c3-3625-80bc-821a11a612a5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxobjectstatemachine_cpp225 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::DeleteEarlyDisposedObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobjectstatemachine_cpp124 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::DeleteObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobjectstatemachine_cpp124 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::DeleteObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobjectstatemachine_cpp1237 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::DeletedAndDisposedWorkerLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobjectstatemachine_cpp1173 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::DisposeChildrenWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobjectstatemachine_cpp494 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::EarlyDispose
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobjectstatemachine_cpp472 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::EarlyDispose
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobjectstatemachine_cpp846 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::PerformDisposingDisposeChildrenLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobjectstatemachine_cpp871 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::PerformDisposingDisposeChildrenLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobjectstatemachine_cpp555 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::PerformEarlyDispose
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobjectstatemachine_cpp920 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::PerformEarlyDisposeWorkerAndUnlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
#typev fxobjectstatemachine_cpp917 10 "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!" //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGOBJECT FUNC=FxObject::SetObjectStateLocked FUNC=FxObject::PerformEarlyDisposeWorkerAndUnlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxObjectState) -- 12
Arg, ItemEnum(FxObjectState) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
f493ac92-4bd8-32d8-3f59-6309d6fad993 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxtagtracker_cpp361 13 "%0Possibly Abandonded ref on object %10!p! tag %11!p! (%12!s! @ %13!d!).  Is benign unless there are other outstanding leaked references." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags FUNC=FxTagTracker::CheckForAbandondedTags
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemString -- 12
Arg, ItemLong -- 13
}
#typev fxtagtracker_cpp341 12 "%0Abandonded ref on object %10!p! tag %11!p! (%12!s! @ %13!d!)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags FUNC=FxTagTracker::CheckForAbandondedTags
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemString -- 12
Arg, ItemLong -- 13
}
#typev fxtagtracker_cpp321 11 "%0Dropped references on a tag tracker, show references with: !wdftagtracker %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags FUNC=FxTagTracker::CheckForAbandondedTags
{
Arg, ItemPtr -- 10
}
#typev fxtagtracker_cpp266 10 "%0releasing %10!s! %11!p! on object %12!p! that was not acquired, !wdftagtracker %13!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::UpdateTagHistory FUNC=FxTagTracker::UpdateTagHistory
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
978b3da3-10fc-3e8a-670e-ab9d890a5e83 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxverifierlock_cpp999 25 "%0No Memory to allocate thread table" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::AllocateThreadTable FUNC=FxVerifierLock::AllocateThreadTable
{
}
#typev fxverifierlock_cpp1072 29 "%0Object 0x%10!p!, ObjectType 0x%11!x!, LockLevel 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails FUNC=FxVerifierLock::DumpDetails
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxverifierlock_cpp1067 28 "%0List of Already Acquired Locks and Objects:" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails FUNC=FxVerifierLock::DumpDetails
{
}
#typev fxverifierlock_cpp1060 27 "%0Highest Lock Currently held is level 0x%10!x! for Object 0x%11!p!, ObjectType 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails FUNC=FxVerifierLock::DumpDetails
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}
#typev fxverifierlock_cpp1051 26 "%0Thread 0x%10!p! Attempted to acquire lock on Object 0x%11!p!, ObjectType 0x%12!x!, at Level 0x%13!x! out of sequence." //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails FUNC=FxVerifierLock::DumpDetails
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}
#typev fxverifierlock_cpp745 20 "%0Thread 0x%10!p! does not have an entry" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::GetThreadTableEntry FUNC=FxVerifierLock::GetThreadTableEntry
{
Arg, ItemPtr -- 10
}
#typev fxverifierlock_cpp671 19 "%0Object Type 0x%10!x! does not have a lock order defined in fx\inc\FxVerifierLock.hpp" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::InitializeLockOrder FUNC=FxVerifierLock::InitializeLockOrder
{
Arg, ItemLong -- 10
}
#typev fxverifierlock_cpp184 10 "%0Thread 0x%10!p! already owns lock 0x%11!p! for object 0x%12!p!, WDFOBJECT 0x%13!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Lock FUNC=FxVerifierLock::Lock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}
#typev fxverifierlock_cpp913 24 "%0OldEntry Thread 0x%10!p! not Current! 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::ReleaseOrReplaceThreadTableEntry FUNC=FxVerifierLock::ReleaseOrReplaceThreadTableEntry
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxverifierlock_cpp596 18 "%0Record entry for VerifierLock 0x%10!p! is missing on list 0x%11!p! for Thread 0x%12!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxverifierlock_cpp415 16 "%0this 0x%10!p!, perThreadList 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxverifierlock_cpp412 15 "%0Thread has entry, but no locks recorded as held for dispatch!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock FUNC=FxVerifierLock::Unlock
{
}
#typev fxverifierlock_cpp518 17 "%0Record entry for VerifierLock 0x%10!p! is missing on list 0x%11!p! for Thread 0x%12!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxverifierlock_cpp389 14 "%0this 0x%10!p!, perThreadList 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxverifierlock_cpp386 13 "%0Thread has entry, but no locks recorded as held for passive!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock FUNC=FxVerifierLock::Unlock
{
}
#typev fxverifierlock_cpp349 12 "%0Unlock:  Can't get per thread entry for thread %10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
}
#typev fxverifierlock_cpp333 11 "%0Thread 0x%10!p! Is Attempting to release a Lock 0x%11!p! for Object 0x%12!p! it does not own!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock FUNC=FxVerifierLock::Unlock
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4b69e0bc-0848-3d90-49a7-0300d6c2026d WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev wdfpoolkm_cpp258 10 "%0PMDL 0x%10!p! leaked, FxObject owner %11!p!, Callers Address %12!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxMdlDump FUNC=FxMdlDump
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
bee6b043-c614-3db6-cb9a-2ca529bf605e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxuserobject_cpp76 11 "%0FxObject::Commit failed %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxUserObject::_Create FUNC=FxUserObject::_Create
{
Arg, ItemNTSTATUS -- 10
}
#typev fxuserobject_cpp68 10 "%0Memory allocation failed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxUserObject::_Create FUNC=FxUserObject::_Create
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
fe2dad3e-60f5-3267-b8aa-9215424cb95f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev globalskm_cpp220 14 "%0Failed to record driver version value, status %10!s!" //   GLOBALS=this LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=_FX_DRIVER_GLOBALS::RegisterClientVersion FUNC=_FX_DRIVER_GLOBALS::RegisterClientVersion
{
Arg, ItemNTSTATUS -- 10
}
#typev globalskm_cpp207 13 "%0Failed to record driver major version value, status %10!s!" //   GLOBALS=this LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=_FX_DRIVER_GLOBALS::RegisterClientVersion FUNC=_FX_DRIVER_GLOBALS::RegisterClientVersion
{
Arg, ItemNTSTATUS -- 10
}
#typev globalskm_cpp189 12 "%0Unable to write Parameters key, status %10!s!" //   GLOBALS=this LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=_FX_DRIVER_GLOBALS::RegisterClientVersion FUNC=_FX_DRIVER_GLOBALS::RegisterClientVersion
{
Arg, ItemNTSTATUS -- 10
}
#typev globalskm_cpp178 11 "%0Unable to write Parameters key, status %10!s!" //   GLOBALS=this LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=_FX_DRIVER_GLOBALS::RegisterClientVersion FUNC=_FX_DRIVER_GLOBALS::RegisterClientVersion
{
Arg, ItemNTSTATUS -- 10
}
#typev globalskm_cpp164 10 "%0Unable to open driver's service key, status %10!s!" //   GLOBALS=this LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=_FX_DRIVER_GLOBALS::RegisterClientVersion FUNC=_FX_DRIVER_GLOBALS::RegisterClientVersion
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
01e4eb24-75f9-3057-8096-b1e0f978e536 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxresourceapi_cpp570 12 "%0Removes not allowed on WDFIORESLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxIoResourceListInsertDescriptor FUNC=FxIoResourceListInsertDescriptor
{
Arg, ItemPtr -- 10
}
#typev fxresourceapi_cpp1219 16 "%0WDFCMRESLIST %10!p!, could not remove list at index %11!d! (not found), list item count is %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfCmResourceListRemove FUNC=imp_WdfCmResourceListRemove
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxresourceapi_cpp1272 17 "%0Removes not allowed on WDFCMRESLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfCmResourceListRemoveByDescriptor FUNC=imp_WdfCmResourceListRemoveByDescriptor
{
Arg, ItemPtr -- 10
}
#typev fxresourceapi_cpp884 14 "%0WDFIORESLIST %10!p!, could not remove item at index %11!d! (not found), list item count is %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoResourceListRemove FUNC=imp_WdfIoResourceListRemove
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxresourceapi_cpp934 15 "%0Removes not allowed on WDFIORESLIST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoResourceListRemoveByDescriptor FUNC=imp_WdfIoResourceListRemoveByDescriptor
{
Arg, ItemPtr -- 10
}
#typev fxresourceapi_cpp738 13 "%0WDFIORESREQLIST %10!p!, cannot update item at index %11!d!, item not found, list item count is %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoResourceListUpdateDescriptor FUNC=imp_WdfIoResourceListUpdateDescriptor
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxresourceapi_cpp368 10 "%0WDFIORESLIST %10!p!, could not remove list at index %11!d! (not found), list item count is %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoResourceRequirementsListRemove FUNC=imp_WdfIoResourceRequirementsListRemove
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxresourceapi_cpp417 11 "%0WDFIORESREQLIST %10!p!: Removes not allowed" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoResourceRequirementsListRemoveByIoResList FUNC=imp_WdfIoResourceRequirementsListRemoveByIoResList
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
496f4226-edc1-3db2-c925-bd7fd2e0d55a WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxdeviceinterfaceapi_cpp213 13 "%0WDFDEVICE %10!p! is not a PNP device, device interfaces not allowed" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=WdfDeviceSetDeviceInterfaceStateWorker FUNC=WdfDeviceSetDeviceInterfaceStateWorker
{
Arg, ItemPtr -- 10
}
#typev fxdeviceinterfaceapi_cpp126 12 "%0WDFDEVICE %10!p!, DeviceInterface object initialization failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceCreateDeviceInterface FUNC=imp_WdfDeviceCreateDeviceInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceinterfaceapi_cpp100 10 "%0WDFDEVICE %10!p! is not a PNP device, device interface creation not allowed %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceCreateDeviceInterface FUNC=imp_WdfDeviceCreateDeviceInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceinterfaceapi_cpp113 11 "%0WDFDEVICE %10!p! DeviceInterface object creation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceCreateDeviceInterface FUNC=imp_WdfDeviceCreateDeviceInterface
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdeviceinterfaceapi_cpp444 14 "%0WDFDEVICE %10!p! is not a PNP device, device interface creation not allowed %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceRetrieveDeviceInterfaceString FUNC=imp_WdfDeviceRetrieveDeviceInterfaceString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
10d374c1-d0a0-3803-a73e-b8bf5299e443 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxregistryapi_cpp1315 35 "%0WDFKEY handle %10!p! SetValue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMemory FUNC=imp_WdfRegistryAssignMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp1295 34 "%0WDFKEY %10!p!, WDFMEMORY %11!p! BufferLength in Offsets truncated, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMemory FUNC=imp_WdfRegistryAssignMemory
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxregistryapi_cpp1283 33 "%0WDFKEY %10!p!, WDFMEMORY %11!p! Offsets overflowed, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMemory FUNC=imp_WdfRegistryAssignMemory
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxregistryapi_cpp1586 40 "%0WDFCOLLECTION %10!p!, collection too large to fit into a ULONG, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString FUNC=imp_WdfRegistryAssignMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp1623 43 "%0WDFKEY %10!p! SetValue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString FUNC=imp_WdfRegistryAssignMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp1606 42 "%0WDFKEY %10!p! allocate for query buffer failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString FUNC=imp_WdfRegistryAssignMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp1594 41 "%0WDFKEY %10!p!,  WDFCOLLECTION %11!p! contains non string objects, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString FUNC=imp_WdfRegistryAssignMultiString
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxregistryapi_cpp1523 39 "%0WDFKEY handle %10!p! SetValue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignString FUNC=imp_WdfRegistryAssignString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp1368 36 "%0WDFKEY %10!p! SetValue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignULong FUNC=imp_WdfRegistryAssignULong
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp1459 38 "%0WDFKEY %10!p! set value failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignUnicodeString FUNC=imp_WdfRegistryAssignUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp1435 37 "%0WDFKEY %10!p! allocate temporary buffer failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignUnicodeString FUNC=imp_WdfRegistryAssignUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp1217 32 "%0WDFKEY %10!p! SetValue, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignValue FUNC=imp_WdfRegistryAssignValue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxregistryapi_cpp312 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfRegistryClose
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
10d374c1-d0a0-3803-a73e-b8bf5299e443 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxregistryapi_cpp283 13 "%0Registry key creation failed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryCreateKey FUNC=imp_WdfRegistryCreateKey
{
Arg, ItemNTSTATUS -- 10
}
#typev fxregistryapi_cpp255 12 "%0Could not allocate memory for WDFKEY, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryCreateKey FUNC=imp_WdfRegistryCreateKey
{
Arg, ItemNTSTATUS -- 10
}
#typev fxregistryapi_cpp132 10 "%0Could not allocate memory for a WDFKEY, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryOpenKey FUNC=imp_WdfRegistryOpenKey
{
Arg, ItemNTSTATUS -- 10
}
#typev fxregistryapi_cpp154 11 "%0new WDFKEY object open failed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryOpenKey FUNC=imp_WdfRegistryOpenKey
{
Arg, ItemNTSTATUS -- 10
}
#typev fxregistryapi_cpp634 18 "%0WDFKEY %10!p! QueryPartial failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMemory FUNC=imp_WdfRegistryQueryMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp627 17 "%0WDFKEY %10!p! WDFMEMORY object create failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMemory FUNC=imp_WdfRegistryQueryMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp595 16 "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMemory FUNC=imp_WdfRegistryQueryMemory
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp583 15 "%0WDFKEY %10!p! value %11!s! has empty data, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMemory FUNC=imp_WdfRegistryQueryMemory
{
Arg, ItemPtr -- 10
Arg, ItemPWString -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxregistryapi_cpp809 23 "%0WDFKEY %10!p!: WDFSTRING creation failed: %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString FUNC=imp_WdfRegistryQueryMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp781 22 "%0WDFKEY %10!p!, WDFCOLLECTION %11!p!, collection add failed %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString FUNC=imp_WdfRegistryQueryMultiString
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxregistryapi_cpp732 21 "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString FUNC=imp_WdfRegistryQueryMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp720 20 "%0WDFKEY %10!p! value %11!s! has empty data, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString FUNC=imp_WdfRegistryQueryMultiString
{
Arg, ItemPtr -- 10
Arg, ItemPWString -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxregistryapi_cpp706 19 "%0WDFKEY %10!p! QueryPartial failed: %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString FUNC=imp_WdfRegistryQueryMultiString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp1098 29 "%0WDFKEY %10!p! QueryPartial failed, Length %11!d! > max %12!d!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString FUNC=imp_WdfRegistryQueryString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxregistryapi_cpp1045 28 "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString FUNC=imp_WdfRegistryQueryString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp1033 27 "%0WDFKEY %10!p! value %11!s! has empty data, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString FUNC=imp_WdfRegistryQueryString
{
Arg, ItemPtr -- 10
Arg, ItemPWString -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxregistryapi_cpp1105 30 "%0WDFKEY %10!p! QueryPartial failed, Length %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString FUNC=imp_WdfRegistryQueryString
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxregistryapi_cpp1024 26 "%0WDFKEY %10!p!, QueryPartial failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString FUNC=imp_WdfRegistryQueryString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp1158 31 "%0WDFKEY %10!p!, QueryULong, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryULong FUNC=imp_WdfRegistryQueryULong
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp899 24 "%0WDFKEY %10!p! invalid UNICODE_STRING MaximumLength 0, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryUnicodeString FUNC=imp_WdfRegistryQueryUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp911 25 "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryUnicodeString FUNC=imp_WdfRegistryQueryUnicodeString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxregistryapi_cpp506 14 "%0WDFKEY %10!p! QueryValue failed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryValue FUNC=imp_WdfRegistryQueryValue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxwaitlockapi_cpp134 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfWaitLockAcquire
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxwaitlockapi_cpp141 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=imp_WdfWaitLockAcquire
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxwaitlockapi_cpp175 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfWaitLockRelease
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxcollectionapi_cpp159 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfCollectionAdd
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxcollectionapi_cpp153 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfCollectionAdd
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
d99bb231-00e7-3696-ec38-da55fe666b54 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxcollectionapi_cpp89 10 "%0Could not create collection object: %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionCreate FUNC=imp_WdfCollectionCreate
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcollectionapi_cpp97 11 "%0Could not create collection object: STATUS_INSUFFICIENT_RESOURCES" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionCreate FUNC=imp_WdfCollectionCreate
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxcollectionapi_cpp121 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfCollectionGetCount
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxcollectionapi_cpp335 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfCollectionGetFirstItem
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxcollectionapi_cpp304 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfCollectionGetItem
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
d99bb231-00e7-3696-ec38-da55fe666b54 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxcollectionapi_cpp277 13 "%0WDFOBJECT %10!p! not in WDFCOLLECTION %11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionRemove FUNC=imp_WdfCollectionRemove
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxcollectionapi_cpp252 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfCollectionRemove
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxcollectionapi_cpp246 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfCollectionRemove
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
d99bb231-00e7-3696-ec38-da55fe666b54 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxcollectionapi_cpp218 12 "%0Index %10!d! is not valid in WDFCOLLECTION %11!p! (count is %12!d!), %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionRemoveItem FUNC=imp_WdfCollectionRemoveItem
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxcollectionapi_cpp191 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfCollectionRemoveItem
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
fc2e981c-7e53-30fb-085f-1ec806219d93 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxspinlockapi_cpp134 10 "%0WDFSPINLOCK %10!p! is associated with an interrupt, cannot be used for normal sync operations" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfSpinLockAcquire FUNC=imp_WdfSpinLockAcquire
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxspinlockapi_cpp127 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfSpinLockAcquire
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a6b72176-f788-39ed-1aed-2d7f28bc220e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxspinlockapi_cpp180 11 "%0WDFSPINLOCK 0x%10!p! not owned by thread 0x%11!p!, owned by thread 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxSpinLock::ReleaseLock FUNC=imp_WdfSpinLockRelease
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxspinlockapi_cpp180 10 "%0WDFSPINLOCK %10!p! being released by thread 0x%11!p!, but was never acquired!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxSpinLock::ReleaseLock FUNC=imp_WdfSpinLockRelease
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
fc2e981c-7e53-30fb-085f-1ec806219d93 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxspinlockapi_cpp172 11 "%0WDFSPINLOCK %10!p! is associated with an interrupt, cannot be used for normal sync operations" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfSpinLockRelease FUNC=imp_WdfSpinLockRelease
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxspinlockapi_cpp165 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfSpinLockRelease
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
45d713b7-6732-38aa-adee-fc84eb2ef425 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxstringapi_cpp109 10 "%0Could not allocate WDFSTRING handle, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfStringCreate FUNC=imp_WdfStringCreate
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
11791eda-a61f-355c-acef-8ca750389e93 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxtelemetrykm_cpp479 19 "%0Could not query for full buffer, size %10!d!, for property %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxGetDevicePropertyString FUNC=FxGetDevicePropertyString
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxtelemetrykm_cpp471 18 "%0Could not allocate memory for property %10!d! length %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxGetDevicePropertyString FUNC=FxGetDevicePropertyString
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxtelemetrykm_cpp462 17 "%0Could not retrieve property %10!d! length %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxGetDevicePropertyString FUNC=FxGetDevicePropertyString
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxtelemetrykm_cpp454 16 "%0Could not get PDO from FDO WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxGetDevicePropertyString FUNC=FxGetDevicePropertyString
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxtelemetrykm_cpp574 23 "%0ERROR: ExAllocatePoolWithTag failed with Status 0x%10!x!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName FUNC=GetImageName
{
Arg, ItemLong -- 10
}
#typev fxtelemetrykm_cpp562 22 "%0ERROR: size computation failed with Status 0x%10!x!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName FUNC=GetImageName
{
Arg, ItemLong -- 10
}
#typev fxtelemetrykm_cpp548 21 "%0ERROR: GetNameFromPath could not find a name, status 0x%10!x!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName FUNC=GetImageName
{
Arg, ItemLong -- 10
}
#typev fxtelemetrykm_cpp533 20 "%0Failed to IoQueryFullDriverPath, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=GetImageName FUNC=GetImageName
{
Arg, ItemNTSTATUS -- 10
}
#typev fxtelemetrykm_cpp157 10 "%0lastlogged %10!I64x!, current %11!I64x!, delta %12!I64x!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=IsLoggingEnabledAndNeeded FUNC=IsLoggingEnabledAndNeeded
{
Arg, ItemLongLongX -- 10
Arg, ItemLongLongX -- 11
Arg, ItemLongLongX -- 12
}
#typev fxtelemetrykm_cpp366 12 "%0Unable to open driver's service parameters key, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=RegistryReadLastLoggedTime FUNC=RegistryReadLastLoggedTime
{
Arg, ItemNTSTATUS -- 10
}
#typev fxtelemetrykm_cpp356 11 "%0Unable to open DriverRegKeyPersistentState, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=RegistryReadLastLoggedTime FUNC=RegistryReadLastLoggedTime
{
Arg, ItemNTSTATUS -- 10
}
#typev fxtelemetrykm_cpp429 15 "%0Failed to record current time for Telemetry log, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=RegistryWriteCurrentTime FUNC=RegistryWriteCurrentTime
{
Arg, ItemNTSTATUS -- 10
}
#typev fxtelemetrykm_cpp414 14 "%0Unable to write Parameters key, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=RegistryWriteCurrentTime FUNC=RegistryWriteCurrentTime
{
Arg, ItemNTSTATUS -- 10
}
#typev fxtelemetrykm_cpp403 13 "%0Unable to open DriverRegKeyPersistentState, status %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=RegistryWriteCurrentTime FUNC=RegistryWriteCurrentTime
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
858cf488-d58e-3dd4-6d49-ca7b937efd17 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxregkey_cpp57 11 "%0Read value name %10!s!, DataLength %11!d!, Data buffer from registry does not have double NULL terminal chars, STATUS_OBJECT_TYPE_MISMATCH" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxRegKey::_VerifyMultiSzString FUNC=FxRegKey::_VerifyMultiSzString
{
Arg, ItemPWString -- 10
Arg, ItemLong -- 11
}
#typev fxregkey_cpp44 10 "%0Reg value name %10!s!, DataLength %11!d!, Data buffer length is invalid, STATUS_OBJECT_TYPE_MISMATCH" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxRegKey::_VerifyMultiSzString FUNC=FxRegKey::_VerifyMultiSzString
{
Arg, ItemPWString -- 10
Arg, ItemLong -- 11
}
#typev fxregkey_cpp356 13 "%0State separation registry policy will force 0x%10!p! to be volatile on applicable Windows editions" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxRegKey::_VerifyStateSeparationRegistryPolicy FUNC=FxRegKey::_VerifyStateSeparationRegistryPolicy
{
Arg, ItemPtr -- 10
}
#typev fxregkey_cpp349 12 "%0State separation registry policy will force key '%10!s!' to be volatile on applicable Windows editions" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxRegKey::_VerifyStateSeparationRegistryPolicy FUNC=FxRegKey::_VerifyStateSeparationRegistryPolicy
{
Arg, ItemPWString -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e59cd32d-caa2-3bca-2cf7-eb483604fec0 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxresourcecollection_cpp129 11 "%0Adds not allowed on handle %10!p!, add at index %11!d!failed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxResourceCollection::AddAt FUNC=FxResourceCollection::AddAt
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxresourcecollection_cpp727 12 "%0Integer overflow occured when computing size of IO_RESOURCE_REQUIREMENTS_LIST" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxIoResReqList::CreateWdmList FUNC=FxIoResReqList::CreateWdmList
{
}
#typev fxresourcecollection_cpp57 10 "%0Removes not allowed on handle %10!p!, remove at index %11!d!failed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxResourceCollection::RemoveAndDelete FUNC=FxResourceCollection::RemoveAndDelete
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
3e9e60a4-90e7-365e-14ff-0a19d3e53d86 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev stringutil_cpp258 11 "%0Failed to allocate memory when duplicating string %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxDuplicateUnicodeString FUNC=FxDuplicateUnicodeString
{
Arg, ItemNTSTATUS -- 10
}
#typev stringutil_cpp228 10 "%0Interger overflow occured when duplicating string %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxDuplicateUnicodeString FUNC=FxDuplicateUnicodeString
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c1f1a749-4cd9-3cc4-d67a-b00779b99280 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxwaitlock_cpp48 10 "%0Memory allocation failed: %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxWaitLock::_Create FUNC=FxWaitLock::_Create
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp898 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxIoTargetFormatIo
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp905 34 "%0invalid memory offsets, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo FUNC=FxIoTargetFormatIo
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp892 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxIoTargetFormatIo
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxiotargetapi_cpp881 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxIoTargetFormatIo
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp936 35 "%0exit WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo FUNC=FxIoTargetFormatIo
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotargetapi_cpp887 33 "%0enter: WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, MJ code 0x%12!x!, WDFMEMORY 0x%13!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo FUNC=FxIoTargetFormatIo
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1322 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxIoTargetFormatIoctl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1329 45 "%0Invalid output memory offsets, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl FUNC=FxIoTargetFormatIoctl
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1301 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxIoTargetFormatIoctl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxiotargetapi_cpp1283 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxIoTargetFormatIoctl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1308 44 "%0Invalid input memory offsets, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl FUNC=FxIoTargetFormatIoctl
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1295 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxIoTargetFormatIoctl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1379 46 "%0Exit WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl FUNC=FxIoTargetFormatIoctl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotargetapi_cpp1289 43 "%0enter: WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, IOCTL 0x%12!x!, internal %13!d!, input WDFMEMORY 0x%14!p!, output WDFMEMORY 0x%15!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl FUNC=FxIoTargetFormatIoctl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
Arg, ItemPtr -- 15
}
#typev fxiotargetapi_cpp818 32 "%0could not format MJ 0x%10!x! request, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo FUNC=FxIoTargetSendIo
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp777 29 "%0invalid options, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo FUNC=FxIoTargetSendIo
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
490b682a-621a-388b-ee65-ab233ea347ba WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp775 12 "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxiotargetapi_cpp775 11 "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxiotargetapi_cpp775 10 "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp770 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=FxIoTargetSendIo
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
02af2262-c88b-399f-02b2-fb7037fd57e7 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp823 11 "%0Request %10!p!, wait on event %11!p! done" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::~FxSyncRequest FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetapi_cpp823 10 "%0Request %10!p!, waiting on event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::~FxSyncRequest FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp753 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxiotargetapi_cpp740 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp789 30 "%0invalid input buffer descriptor 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp806 31 "%0WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p! being submitted" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetapi_cpp763 28 "%0enter:  WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, MJ code 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo FUNC=FxIoTargetSendIo
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}
#typev fxiotargetapi_cpp1209 42 "%0could not format IOCTL 0x%10!x! request, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl FUNC=FxIoTargetSendIoctl
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp1169 39 "%0invalid input buffer descriptor 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp1157 38 "%0invalid options, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl FUNC=FxIoTargetSendIoctl
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
490b682a-621a-388b-ee65-ab233ea347ba WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1155 12 "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxiotargetapi_cpp1155 11 "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxiotargetapi_cpp1155 10 "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1150 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=FxIoTargetSendIoctl
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1133 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxiotargetapi_cpp1120 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1183 40 "%0invalid output buffer descriptor 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp1197 41 "%0WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p! being submitted" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetapi_cpp1143 37 "%0enter:  WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, IOCTL 0x%12!x!, internal %13!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl FUNC=FxIoTargetSendIoctl
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}
#typev fxiotargetapi_cpp323 17 "%0The open type is WdfIoTargetOpenLocalTargetByFile but a state callback (query remove %10!p!, remove canceled %11!p!, remove complete %12!p!) was specified, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxiotargetapi_cpp277 14 "%0OpenParams %10!p! TargetFileObject is NULL but a state callback (query remove %11!p!, remove canceled %12!p!, remove complete %13!p!) was specified, %14!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxiotargetapi_cpp361 12 "%0Expected non NULL TargetDeviceObject in OpenParams, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemNTSTATUS -- 10
}
#typev fxiotargetapi_cpp361 16 "%0The open type WdfIoTargetOpenLocalTargetByFile is not supported in KMDF drivers. It is supported in UMDF drivers only, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemNTSTATUS -- 10
}
#typev fxiotargetapi_cpp361 15 "%0Expected valid OpenParams TargetDeviceName string, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemNTSTATUS -- 10
}
#typev fxiotargetapi_cpp361 13 "%0The open type WdfIoTargetOpenUseExistingDevice is not supported in UMDF drivers. It is supported in KMDF drivers only, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemNTSTATUS -- 10
}
#typev fxiotargetapi_cpp353 18 "%0OpenParams Type (%10!d!) incorrect, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams FUNC=FxIoTargetValidateOpenParams
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp629 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=imp_WdfIoTargetClose
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp620 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoTargetClose
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp626 24 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetClose FUNC=imp_WdfIoTargetClose
{
Arg, ItemPtr -- 10
}
#typev fxiotargetapi_cpp580 23 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetCloseForQueryRemove FUNC=imp_WdfIoTargetCloseForQueryRemove
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp413 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=imp_WdfIoTargetCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp402 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoTargetCreate
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp410 19 "%0WDFDEVICE 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetCreate FUNC=imp_WdfIoTargetCreate
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1783 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoTargetFormatRequestForInternalIoctlOthers
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1820 56 "%0Invalid OtherArg%10!d! memory offsets, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetFormatRequestForInternalIoctlOthers FUNC=imp_WdfIoTargetFormatRequestForInternalIoctlOthers
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1795 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoTargetFormatRequestForInternalIoctlOthers
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1838 57 "%0Exit: WDFIOTARGET %10!p!, WDFREQUEST %11!p!, IOCTL 0x%12!x!, Arg Handles %13!p! %14!p! %15!p!, status %16!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetFormatRequestForInternalIoctlOthers FUNC=imp_WdfIoTargetFormatRequestForInternalIoctlOthers
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
Arg, ItemPtr -- 15
Arg, ItemNTSTATUS -- 16
}
#typev fxiotargetapi_cpp1789 55 "%0Enter: WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, IOCTL 0x%12!x!, WDFMEMORY 1 0x%13!p!, 2 0x%14!p!, 3 0x%15!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetFormatRequestForInternalIoctlOthers FUNC=imp_WdfIoTargetFormatRequestForInternalIoctlOthers
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
Arg, ItemPtr -- 15
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp995 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoTargetFormatRequestForRead
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp995 34 "%0invalid memory offsets, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo FUNC=imp_WdfIoTargetFormatRequestForRead
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp995 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoTargetFormatRequestForRead
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxiotargetapi_cpp995 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoTargetFormatRequestForRead
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp995 35 "%0exit WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo FUNC=imp_WdfIoTargetFormatRequestForRead
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotargetapi_cpp995 33 "%0enter: WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, MJ code 0x%12!x!, WDFMEMORY 0x%13!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo FUNC=imp_WdfIoTargetFormatRequestForRead
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp666 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoTargetGetDevice
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp677 26 "%0exit WDFIOTARGET 0x%10!p!, WDFDEVICE 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetGetDevice FUNC=imp_WdfIoTargetGetDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetapi_cpp672 25 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetGetDevice FUNC=imp_WdfIoTargetGetDevice
{
Arg, ItemPtr -- 10
}
#typev fxiotargetapi_cpp504 21 "%0OpenParams size (%10!d!) incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetOpen FUNC=imp_WdfIoTargetOpen
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp489 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=imp_WdfIoTargetOpen
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp478 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoTargetOpen
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp538 22 "%0exit WDFIOTARGET 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetOpen FUNC=imp_WdfIoTargetOpen
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp484 20 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetOpen FUNC=imp_WdfIoTargetOpen
{
Arg, ItemPtr -- 10
}
#typev fxiotargetapi_cpp171 11 "%0Action %10!d! undefined or out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetPurge FUNC=imp_WdfIoTargetPurge
{
Arg, ItemLong -- 10
}
#typev fxiotargetapi_cpp1963 59 "%0Queue cannot be configured for automatic dispatching after WdfControlDeviceFinishInitializingis called on the WDFDEVICE %10!p! is called %11!s!" //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoTargetSelfAssignDefaultIoQueue FUNC=imp_WdfIoTargetSelfAssignDefaultIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp1963 60 "%0Queue cannot be configured for automatic dispatchingafter the WDFDEVICE %10!p! is started, %11!s!" //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoTargetSelfAssignDefaultIoQueue FUNC=imp_WdfIoTargetSelfAssignDefaultIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp1916 58 "%0Input WDFQUEUE 0x%10!p! belongs to WDFDEVICE 0x%11!p!, but Self Io Target 0x%12!p! corresponds to the WDFDEVICE 0x%13!p!, %14!s!" //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoTargetSelfAssignDefaultIoQueue FUNC=imp_WdfIoTargetSelfAssignDefaultIoQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxiotargetapi_cpp1700 54 "%0Could not format IOCTL 0x%10!x! request, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp1673 52 "%0invalid OtherArg4 buffer descriptor 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp1658 51 "%0invalid OtherArg2 buffer descriptor 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp1643 50 "%0invalid OtherArg1 buffer descriptor 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapi_cpp1628 49 "%0Invalid options, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
490b682a-621a-388b-ee65-ab233ea347ba WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1626 12 "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxiotargetapi_cpp1626 11 "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxiotargetapi_cpp1626 10 "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1621 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1604 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxiotargetapi_cpp1591 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9909f4ce-5a71-3336-9e22-dbf0dff963a9 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapi_cpp1688 53 "%0WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p! being submitted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetapi_cpp1614 48 "%0enter:  WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, IOCTL 0x%12!x!, Args %13!p! %14!p! %15!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
Arg, ItemPtr -- 15
}
#typev fxiotargetapi_cpp112 10 "%0Action %10!d! undefined or out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetStop FUNC=imp_WdfIoTargetStop
{
Arg, ItemLong -- 10
}
#typev fxiotargetapi_cpp2004 62 "%0exit WDFIOTARGET 0x%10!p!, WDM file handle 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetFileHandle FUNC=imp_WdfIoTargetWdmGetTargetFileHandle
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetapi_cpp1993 61 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetFileHandle FUNC=imp_WdfIoTargetWdmGetTargetFileHandle
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
6b45a9d5-ce77-316a-86cd-80e8e6141138 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetapikm_cpp426 19 "%0exit WDFIOTARGET 0x%10!p!, Property %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotargetapikm_cpp406 18 "%0WDFIOTARGET %10!p! has no PDO (not opened yet?), %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapikm_cpp323 17 "%0exit WDFIOTARGET 0x%10!p!, Property %11!d!, %12!s!" //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetQueryTargetProperty FUNC=imp_WdfIoTargetQueryTargetProperty
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotargetapikm_cpp310 16 "%0WDFIOTARGET 0x%10!p! has no PDO (not opened yet?), %11!s!" //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetQueryTargetProperty FUNC=imp_WdfIoTargetQueryTargetProperty
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetapikm_cpp71 11 "%0exit WDFIOTARGET 0x%10!p!, WDM DevObj 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetDeviceObject FUNC=imp_WdfIoTargetWdmGetTargetDeviceObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetapikm_cpp60 10 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetDeviceObject FUNC=imp_WdfIoTargetWdmGetTargetDeviceObject
{
Arg, ItemPtr -- 10
}
#typev fxiotargetapikm_cpp159 15 "%0exit WDFIOTARGET 0x%10!p!, WDM FileObj 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetFileObject FUNC=imp_WdfIoTargetWdmGetTargetFileObject
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetapikm_cpp148 14 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetFileObject FUNC=imp_WdfIoTargetWdmGetTargetFileObject
{
Arg, ItemPtr -- 10
}
#typev fxiotargetapikm_cpp115 13 "%0exit WDFIOTARGET 0x%10!p!, WDM PDO 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetPhysicalDevice FUNC=imp_WdfIoTargetWdmGetTargetPhysicalDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetapikm_cpp104 12 "%0enter WDFIOTARGET 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetPhysicalDevice FUNC=imp_WdfIoTargetWdmGetTargetPhysicalDevice
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
70e2676f-22fc-3dad-9dfb-99056a39aac8 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotarget_cpp2648 56 "%0Cancelling pending I/O on WDFIOTARGET %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::CancelSentIo FUNC=FxIoTarget::CancelSentIo
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp2217 45 "%0WDFIOTARGET %10!p!, setting stop event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::CompleteCanceledRequest FUNC=FxIoTarget::CompleteCanceledRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp2211 44 "%0WDFREQUEST %10!p! completed in from cancel" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::CompleteCanceledRequest FUNC=FxIoTarget::CompleteCanceledRequest
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp483 16 "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p! is being canceled on another thread, allowing other thread to complete request, not resending" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::DrainPendedRequestsLocked FUNC=FxIoTarget::DrainPendedRequestsLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp2515 54 "%0Could not retrieve buffer %10!d!, status %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatInternalIoctlOthersRequest FUNC=FxIoTarget::FormatInternalIoctlOthersRequest
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotarget_cpp2467 13 "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatInternalIoctlOthersRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotarget_cpp2467 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatInternalIoctlOthersRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotarget_cpp2467 11 "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatInternalIoctlOthersRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
70e2676f-22fc-3dad-9dfb-99056a39aac8 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotarget_cpp2479 53 "%0Could not allocate context for request" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatInternalIoctlOthersRequest FUNC=FxIoTarget::FormatInternalIoctlOthersRequest
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotarget_cpp2467 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatInternalIoctlOthersRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
70e2676f-22fc-3dad-9dfb-99056a39aac8 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotarget_cpp873 21 "%0WDFIOTARGET %10!p! is already in the process of being purged or stopped from another thread. Driver must wait for the first WdfIoTargetPurge or WdfIoTargetStop to complete before calling it again." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoPurgeState FUNC=FxIoTarget::GotoPurgeState
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp843 20 "%0WDFIOTARGET %10!p! purged, but it is currently in the %11!s! state, not started, stopped or purged" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoPurgeState FUNC=FxIoTarget::GotoPurgeState
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 11
}
#typev fxiotarget_cpp984 23 "%0WDFIOTARGET %10!p! is being deleted while it is being stopped/purged by another thread. Driver must wait for WdfIoTargetStop or WdfIoTargetPurge to complete before deleting the object." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoRemoveState FUNC=FxIoTarget::GotoRemoveState
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp332 15 "%0WDFIOTARGET %10!p! is being started while it is being stopped or purged by another thread. WdfIoTargetStart and WdfIoTargetStop/WdfIoTargetPurge must be called synchronously. After the driver calls one of these functions, it must not call the other function before the first one returns." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoStartState FUNC=FxIoTarget::GotoStartState
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp694 18 "%0WDFIOTARGET %10!p! is already in the process of being stopped or purged from another thread. Driver must wait for the first WdfIoTargetStop or WdfIoTargetPurge to complete before calling it again." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoStopState FUNC=FxIoTarget::GotoStopState
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp670 17 "%0WDFIOTARGET %10!p! stopped, but it is currently in the %11!s! state, not started or stopped" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoStopState FUNC=FxIoTarget::GotoStopState
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 11
}
#typev fxiotarget_cpp2296 48 "%0WDFIOTARGET %10!p!, setting stop event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::HandleFailedResubmit FUNC=FxIoTarget::HandleFailedResubmit
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp2290 47 "%0WDFREQUEST %10!p! completed in completion routine" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::HandleFailedResubmit FUNC=FxIoTarget::HandleFailedResubmit
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp2249 46 "%0WDFREQUEST %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::HandleFailedResubmit FUNC=FxIoTarget::HandleFailedResubmit
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp1149 24 "%0Init WDFIOTARGET %10!p!, unexpected NULL, m_InStackDevice %11!p!, m_TargetDevice %12!p!, m_TargetPdo %13!p!, m_Driver %14!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Init FUNC=FxIoTarget::Init
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
}
#typev fxiotarget_cpp118 10 "%0WDFIOTARGET %10!p!, setting Dispose event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::PrintDisposeMessage FUNC=FxIoTarget::PrintDisposeMessage
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp960 22 "%0WDFIOTARGET %10!p! purged" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Purge FUNC=FxIoTarget::Purge
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp1949 40 "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RemoveCompletedRequestLocked FUNC=FxIoTarget::RemoveCompletedRequestLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp2394 52 "%0WDFIOTARGET %10!p!, setting stop event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine FUNC=FxIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotarget_cpp2352 21 "%0Request %10!p!, canceled timer successfully" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::CancelTimer FUNC=FxIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
70e2676f-22fc-3dad-9dfb-99056a39aac8 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotarget_cpp2378 50 "%0WDFREQUEST %10!p! deferring completion due to outstanding completion references" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine FUNC=FxIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotarget_cpp2352 20 "%0Request %10!p!, did not cancel timer" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::CancelTimer FUNC=FxIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
70e2676f-22fc-3dad-9dfb-99056a39aac8 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotarget_cpp2387 51 "%0WDFREQUEST %10!p! completed in completion routine" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine FUNC=FxIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp2375 40 "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RemoveCompletedRequestLocked FUNC=FxIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp2328 49 "%0WDFREQUEST %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine FUNC=FxIoTarget::RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp295 14 "%0WDFIOTARGET %10!p! started status %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Start FUNC=FxIoTarget::Start
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotarget_cpp786 19 "%0WDFIOTARGET %10!p! stopped" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Stop FUNC=FxIoTarget::Stop
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp1557 34 "%0Pending WDFREQUEST %10!p!, WDFIOTARGET %11!p! is paused, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotarget_cpp1423 33 "%0failing WDFREQUEST %10!p!, WDFIOTARGET %11!p! not accepting requests, state %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
}
#typev fxiotarget_cpp1349 30 "%0WDFREQUEST %10!p!, could not create timer, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotarget_cpp1307 29 "%0WDFREQUEST %10!p! already sent to a target" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp1376 31 "%0WDFIOTARGET %10!p! state %11!s!, sending WDFREQUEST %12!p! cannot ignore current state, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxiotarget_cpp1388 32 "%0ignoring WDFIOTARGET %10!p! state, sending WDFREQUEST %11!p!, state %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
}
#typev fxiotarget_cpp1601 35 "%0Starting timer on WDFREQUEST %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked FUNC=FxIoTarget::SubmitLocked
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp230 13 "%0Completing Pended WDFREQUEST %10!p!, Irp %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitPendedRequest FUNC=FxIoTarget::SubmitPendedRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotarget_cpp216 12 "%0Sending Pended WDFREQUEST %10!p!, Irp %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitPendedRequest FUNC=FxIoTarget::SubmitPendedRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp1759 39 "%0Sending WDFREQUEST %10!p!, Irp %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSync FUNC=FxIoTarget::SubmitSync
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp1745 38 "%0WDFREQUEST %10!p!, Action 0x%11!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSync FUNC=FxIoTarget::SubmitSync
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxiotarget_cpp1670 36 "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSync FUNC=FxIoTarget::SubmitSync
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp2685 57 "%0Ignoring WDFIOTARGET %10!p! state to send request" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSyncRequestIgnoreTargetState FUNC=FxIoTarget::SubmitSyncRequestIgnoreTargetState
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp2171 43 "%0WDFIOTARGET %10!p!, setting stop event %11!p! in timer callback" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::TimerCallback FUNC=FxIoTarget::TimerCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp2163 42 "%0WDFREQUEST %10!p! completed in timer callback" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::TimerCallback FUNC=FxIoTarget::TimerCallback
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp2088 41 "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::TimerCallback FUNC=FxIoTarget::TimerCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp2710 58 "%0WDFIOTARGET %10!p! has changed IoType with outstanding IO" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::UpdateTargetIoType FUNC=FxIoTarget::UpdateTargetIoType
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp1233 28 "%0WDFREQUEST %10!p!, PIRP %11!p! does not have enough stack locations %12!d! for this WDFIOTARGET %13!p! (requires %14!d! locations),  %15!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Vf_VerifySubmitLocked FUNC=FxIoTarget::Vf_VerifySubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemLong -- 14
Arg, ItemNTSTATUS -- 15
}
#typev fxiotarget_cpp1216 27 "%0WDFREQUEST %10!p! is already pending on a WDFIOTARGET" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Vf_VerifySubmitLocked FUNC=FxIoTarget::Vf_VerifySubmitLocked
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp1206 26 "%0WDFREQUEST %10!p! has not been formatted, cannot send, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Vf_VerifySubmitLocked FUNC=FxIoTarget::Vf_VerifySubmitLocked
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotarget_cpp140 11 "%0WDFIOTARGET %10!p!, Waiting on Dispose event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::WaitForDisposeEvent FUNC=FxIoTarget::WaitForDisposeEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp2555 55 "%0Pended WDFREQUEST %10!p! canceled" //   GLOBALS=pRequest->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::_RequestCancelled FUNC=FxIoTarget::_RequestCancelled
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp2448 52 "%0WDFIOTARGET %10!p!, setting stop event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine FUNC=FxIoTarget::_RequestCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotarget_cpp2448 20 "%0Request %10!p!, did not cancel timer" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::CancelTimer FUNC=FxIoTarget::_RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp2448 21 "%0Request %10!p!, canceled timer successfully" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::CancelTimer FUNC=FxIoTarget::_RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
70e2676f-22fc-3dad-9dfb-99056a39aac8 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotarget_cpp2448 50 "%0WDFREQUEST %10!p! deferring completion due to outstanding completion references" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine FUNC=FxIoTarget::_RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp2448 51 "%0WDFREQUEST %10!p! completed in completion routine" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine FUNC=FxIoTarget::_RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}
#typev fxiotarget_cpp2448 40 "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RemoveCompletedRequestLocked FUNC=FxIoTarget::_RequestCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotarget_cpp2448 49 "%0WDFREQUEST %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine FUNC=FxIoTarget::_RequestCompletionRoutine
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
84d6afbb-c06b-3dd8-256f-22eaff451c2d WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetself_cpp143 11 "%0Only Read/Write/Control/Internal-Control IRPs can be forwarded to Self IO Target 0x%10!p!, %11!s!, IRP_MN %12!x!, Device 0x%13!p!, %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSelf::Send FUNC=FxIoTargetSelf::Send
{
Arg, ItemPtr -- 10
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxiotargetself_cpp129 10 "%0Send WDFIOTARGET %10!p!, No Dispatch Queue Found for Major Function %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSelf::Send FUNC=FxIoTargetSelf::Send
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
97a27462-c3fd-3580-6ec4-ae7bdf916214 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetremote_cpp729 33 "%0WDFIOTARGET %10!p! cleared pointers %11!p! state %12!s!, open state %13!d!, pdo %14!p!, fileobj %15!p!, handle %16!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::ClearTargetPointers FUNC=FxIoTargetRemote::ClearTargetPointers
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
Arg, ItemPtr -- 15
Arg, ItemPtr -- 16
}
#typev fxiotargetremote_cpp655 29 "%0WDFIOTARGET %10!p!, waiting for stop to complete" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremote_cpp611 27 "%0Closing WDFIOTARGET %10!p! which is not open" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremote_cpp560 23 "%0Closing WDFIOTARGET %10!p! which is opening, waiting on event %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetremote_cpp582 25 "%0Closing WDFIOTARGET %10!p!, reason:   query remove" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremote_cpp593 26 "%0Closing WDFIOTARGET %10!p!, reason:   close" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremote_cpp716 32 "%0WDFIOTARGET %10!p! closing handle %11!p! on close" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetremote_cpp700 31 "%0WDFIOTARGET %10!p! derefing FileObj %11!p! on close" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetremote_cpp691 30 "%0WDFIOTARGET %10!p! derefing PDO %11!p! on close" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetremote_cpp621 28 "%0WDFIOTARGET %10!p!:  fileobj %11!p!, devobj %12!p!, handle %13!p!, notify handle %14!I64d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemLongLong -- 14
}
#typev fxiotargetremote_cpp574 24 "%0Closing WDFIOTARGET %10!p!, reason:   delete" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremote_cpp533 22 "%0enter:  WDFIOTARGET %10!p!, reason %11!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close FUNC=FxIoTargetRemote::Close
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
3e9e60a4-90e7-365e-14ff-0a19d3e53d86 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetremote_cpp250 11 "%0Failed to allocate memory when duplicating string %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxDuplicateUnicodeString FUNC=FxIoTargetRemote::Open
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
97a27462-c3fd-3580-6ec4-ae7bdf916214 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetremote_cpp227 14 "%0Reopen only supported if the open type is WdfIoTargetOpenByName WDFIOTARGET %10!p! %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetremote_cpp429 20 "%0WDFIOTARGET %10!p!, could not register pnp notification, %11!s! not treated as an error" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetremote_cpp267 16 "%0Could not allocate memory for target name for WDFIOTARGET %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremote_cpp315 18 "%0Opening an already open WDFIOTARGET %10!p!, open state %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxiotargetremote_cpp315 17 "%0Opening WDFIOTARGET %10!p! which is removed, state %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxiotargetremote_cpp475 21 "%0WDFIOTARGET %10!p! could not transition to started state, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetremote_cpp254 15 "%0Could not allocate memory for target name for WDFIOTARGET %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
3e9e60a4-90e7-365e-14ff-0a19d3e53d86 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetremote_cpp254 10 "%0Interger overflow occured when duplicating string %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxDuplicateUnicodeString FUNC=FxIoTargetRemote::Open
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
97a27462-c3fd-3580-6ec4-ae7bdf916214 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetremote_cpp302 19 "%0Opening WDFIOTARGET %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open FUNC=FxIoTargetRemote::Open
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremote_cpp157 13 "%0Commit failed for target, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_Create FUNC=FxIoTargetRemote::_Create
{
Arg, ItemNTSTATUS -- 10
}
#typev fxiotargetremote_cpp103 10 "%0Attributes->ParentObject 0x%10!p! must have WDFDEVICE as an eventual ancestor, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_Create FUNC=FxIoTargetRemote::_Create
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8cdf3492-ce98-3b09-79e6-1e14b6d7ed6b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetremote_cpp98 11 "%0WDFHANDLE %10!p! does not have a WDFDEVICE as an ancestor" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxDeviceBase::_SearchForDevice FUNC=FxIoTargetRemote::_Create
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
97a27462-c3fd-3580-6ec4-ae7bdf916214 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetremote_cpp114 11 "%0Attributes->ParentObject 0x%10!p! ancestor is WDFDEVICE %11!p!, but not the same WDFDEVICE 0x%12!p! passed to WdfIoTargetCreate, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_Create FUNC=FxIoTargetRemote::_Create
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxiotargetremote_cpp131 12 "%0Could not allocate memory for target, %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_Create FUNC=FxIoTargetRemote::_Create
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetremote_cpp126 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=FxIoTargetRemote::_Create
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
3896347e-4530-35f4-a4e1-704acde3a149 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetkm_cpp233 15 "%0Trying to format closed WDFIOTARGET %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest FUNC=FxIoTarget::FormatIoRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetkm_cpp223 14 "%0Could not retrieve io buffer as a PVOID, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest FUNC=FxIoTarget::FormatIoRequest
{
Arg, ItemNTSTATUS -- 10
}
#typev fxiotargetkm_cpp139 12 "%0Could not retrieve io buffer, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest FUNC=FxIoTarget::FormatIoRequest
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetkm_cpp59 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatIoRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotargetkm_cpp59 13 "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatIoRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotargetkm_cpp57 11 "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatIoRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetkm_cpp57 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatIoRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
3896347e-4530-35f4-a4e1-704acde3a149 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetkm_cpp68 10 "%0could not allocate context for request" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest FUNC=FxIoTarget::FormatIoRequest
{
}
#typev fxiotargetkm_cpp205 13 "%0Could not retrieve io buffer as a PMDL, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest FUNC=FxIoTarget::FormatIoRequest
{
Arg, ItemNTSTATUS -- 10
}
#typev fxiotargetkm_cpp124 11 "%0Could not allocate common buffer" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest FUNC=FxIoTarget::FormatIoRequest
{
}
#typev fxiotargetkm_cpp377 17 "%0Could not allocate common buffer" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest FUNC=FxIoTarget::FormatIoctlRequest
{
}
#typev fxiotargetkm_cpp442 20 "%0Could not retrieve input buffer as a PVOID, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemNTSTATUS -- 10
}
#typev fxiotargetkm_cpp514 19 "%0Could not retrieve output buffer, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemNTSTATUS -- 10
}
#typev fxiotargetkm_cpp514 18 "%0Could not retrieve input buffer, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetkm_cpp304 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotargetkm_cpp304 13 "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotargetkm_cpp302 11 "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetkm_cpp302 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
3896347e-4530-35f4-a4e1-704acde3a149 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetkm_cpp498 23 "%0Could not retrieve input buffer as a PVOID, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemNTSTATUS -- 10
}
#typev fxiotargetkm_cpp486 22 "%0Could not retrieve output buffer as a PVOID, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemNTSTATUS -- 10
}
#typev fxiotargetkm_cpp313 16 "%0Could not allocate context for request" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest FUNC=FxIoTarget::FormatIoctlRequest
{
}
#typev fxiotargetkm_cpp473 21 "%0Could not retrieve output buffer as a PMDL, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest FUNC=FxIoTarget::FormatIoctlRequest
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
73feaefa-c596-3899-7134-c3fd1706add4 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxiotargetremotekm_cpp314 20 "%0Unable to allocate memory for IRP WDFIOTARGET %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::GetTargetDeviceRelations FUNC=FxIoTargetRemote::GetTargetDeviceRelations
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxiotargetremotekm_cpp225 17 "%0WDFIOTARGET %10!p!, could not convert filobj %11!p! to devobj" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::OpenTargetHandle FUNC=FxIoTargetRemote::OpenTargetHandle
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxiotargetremotekm_cpp234 18 "%0WDFIOTARGET %10!p!, could not convert handle %11!p! to fileobject, status %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::OpenTargetHandle FUNC=FxIoTargetRemote::OpenTargetHandle
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxiotargetremotekm_cpp242 19 "%0ZwCreateFile for WDFIOTARGET %10!p! returned status %11!s!, info 0x%12!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::OpenTargetHandle FUNC=FxIoTargetRemote::OpenTargetHandle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
Arg, ItemLong -- 12
}
#typev fxiotargetremotekm_cpp204 16 "%0ZwCreateFile for WDFIOTARGET %10!p! returned status %11!s!, info 0x%12!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::OpenTargetHandle FUNC=FxIoTargetRemote::OpenTargetHandle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
Arg, ItemLong -- 12
}
#typev fxiotargetremotekm_cpp122 15 "%0WDFIOTARGET %10!p!: remove canceled, default action (reopen)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification FUNC=FxIoTargetRemote::_PlugPlayNotification
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremotekm_cpp112 14 "%0WDFIOTARGET %10!p!: remove canceled notification" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification FUNC=FxIoTargetRemote::_PlugPlayNotification
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremotekm_cpp99 13 "%0WDFIOTARGET %10!p!: remove complete, default action (close)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification FUNC=FxIoTargetRemote::_PlugPlayNotification
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremotekm_cpp87 12 "%0WDFIOTARGET %10!p!: remove complete notification" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification FUNC=FxIoTargetRemote::_PlugPlayNotification
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremotekm_cpp74 11 "%0WDFIOTARGET %10!p!: query remove, default action (close for QR)" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification FUNC=FxIoTargetRemote::_PlugPlayNotification
{
Arg, ItemPtr -- 10
}
#typev fxiotargetremotekm_cpp59 10 "%0WDFIOTARGET %10!p!: query remove notification" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification FUNC=FxIoTargetRemote::_PlugPlayNotification
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e53e948c-03e1-37c7-0603-227c120d6c3f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp469 25 "%0Invalid request options" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
}
#typev fxusbpipeapi_cpp484 27 "%0WDFUSBPIPE %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbpipeapi_cpp476 26 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p! being submitted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxusbpipeapi_cpp459 24 "%0Pipe %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Arg, ItemPtr -- 10
}
#typev fxusbpipeapi_cpp347 18 "%0HeaderLength + TransferLength overflow %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbpipeapi_cpp358 19 "%0HeaderLength + TransferLength + TrailerLength overflow %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbpipeapi_cpp405 22 "%0TransferLength %10!I64d! not a valid transer length (not integral of max packet size %11!d!) %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemLongLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbpipeapi_cpp395 21 "%0WDFUSBPIPE %10!p!, wrong direction for continuous reader, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbpipeapi_cpp383 20 "%0WDFUSBPIPE %10!p! type %11!s!, only bulk or interrupt pipes can be configured for continous readers, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_USB_PIPE_TYPE) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbpipeapi_cpp337 17 "%0TransferLength of 0 not allowed %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbpipeapi_cpp329 16 "%0NULL EvtUsbTargetPipeReadComplete not allowed %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbpipeapi_cpp319 15 "%0Config %10!p! incorrect size %11!d!, expected %12!d! %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbpipeapi_cpp526 29 "%0Pipe %10!p!, Request %11!p!, status %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForAbort FUNC=imp_WdfUsbTargetPipeFormatRequestForAbort
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbpipeapi_cpp510 28 "%0Pipe %10!p!, Request %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForAbort FUNC=imp_WdfUsbTargetPipeFormatRequestForAbort
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp278 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetPipeFormatRequestForRead
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxusbpipeapi_cpp278 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetPipeFormatRequestForRead
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxusbpipeapi_cpp278 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetPipeFormatRequestForRead
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
32418b6b-3d5c-3267-21ee-bf9b6a55156d WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp278 29 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::_FormatTransfer FUNC=imp_WdfUsbTargetPipeFormatRequestForRead
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e53e948c-03e1-37c7-0603-227c120d6c3f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp273 14 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!" //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForRead FUNC=imp_WdfUsbTargetPipeFormatRequestForRead
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxusbpipeapi_cpp648 36 "%0Pipe %10!p!, Request %11!p! = 0x%12!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForReset FUNC=imp_WdfUsbTargetPipeFormatRequestForReset
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}
#typev fxusbpipeapi_cpp632 35 "%0Pipe %10!p!, Request %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForReset FUNC=imp_WdfUsbTargetPipeFormatRequestForReset
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxusbpipeapi_cpp797 42 "%0UrbMemory %10!p! buffer size, %11!I64d!, smaller then _URB_HEADER, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp806 13 "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbpipeapi_cpp806 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
06757e07-5ef7-3397-a0d2-4872904c2474 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp806 10 "%0FormatUrbRequest:  Target %10!p!, Request %11!p!, setting target failed, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxFormatUrbRequest FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp806 11 "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbpipeapi_cpp806 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp780 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxusbpipeapi_cpp775 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxusbpipeapi_cpp765 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e53e948c-03e1-37c7-0603-227c120d6c3f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp821 43 "%0Pipe %10!p!, Request %11!p!, Memory %12!p!, status %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbpipeapi_cpp771 41 "%0Pipe %10!p!, Request %11!p!, Memory %12!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxusbpipeapi_cpp207 12 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!" //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForWrite FUNC=imp_WdfUsbTargetPipeFormatRequestForWrite
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp119 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetPipeGetType
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e53e948c-03e1-37c7-0603-227c120d6c3f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp240 13 "%0WDFUSBPIPE %10!p!" //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeReadSynchronously FUNC=imp_WdfUsbTargetPipeReadSynchronously
{
Arg, ItemPtr -- 10
}
#typev fxusbpipeapi_cpp584 32 "%0Invalid request options" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
}
#typev fxusbpipeapi_cpp606 34 "%0WDFUSBPIPE %10!p! reset, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbpipeapi_cpp592 33 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p! being submitted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxusbpipeapi_cpp574 31 "%0WDFUSBPIPE %10!p! reset" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Arg, ItemPtr -- 10
}
#typev fxusbpipeapi_cpp731 40 "%0WDFUSBPIPE %10!p!, Urb %11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbpipeapi_cpp723 39 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p! being submitted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxusbpipeapi_cpp698 38 "%0WDFUSBPIPE %10!p!, Urb %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxusbpipeapi_cpp142 10 "%0WDFUSBPIPE %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeSetNoMaximumPacketSizeCheck FUNC=imp_WdfUsbTargetPipeSetNoMaximumPacketSizeCheck
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp854 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetPipeWdmGetPipeHandle
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e53e948c-03e1-37c7-0603-227c120d6c3f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipeapi_cpp175 11 "%0WDFUSBPIPE %10!p!" //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeWriteSynchronously FUNC=imp_WdfUsbTargetPipeWriteSynchronously
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
16913ee4-c5dd-36e7-01fe-392544200e86 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapikm_cpp432 17 "%0USBDEVICE Must have been created with Client Contract Verion Info, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceCreateUrb FUNC=imp_WdfUsbTargetDeviceCreateUrb
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapikm_cpp418 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetDeviceCreateUrb
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
16913ee4-c5dd-36e7-01fe-392544200e86 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapikm_cpp204 15 "%0UrbMemory %10!p! buffer size, %11!I64d!, smaller then_URB_HEADER, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForUrb FUNC=imp_WdfUsbTargetDeviceFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdeviceapikm_cpp228 16 "%0WDFUSBDEVICE %10!p!, Request %11!p!, Memory %12!p!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForUrb FUNC=imp_WdfUsbTargetDeviceFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbdeviceapikm_cpp170 14 "%0WDFUSBDEVICE %10!p!, Request %11!p!, Memory %12!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForUrb FUNC=imp_WdfUsbTargetDeviceFormatRequestForUrb
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapikm_cpp252 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetDeviceIsConnectedSynchronous
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
16913ee4-c5dd-36e7-01fe-392544200e86 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapikm_cpp136 13 "%0Device %10!p!, Urb %11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdeviceapikm_cpp128 12 "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p! being submitted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxusbdeviceapikm_cpp103 11 "%0WDFUSBDEVICE %10!p!, Urb %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b02a0a0f-b53f-3966-3325-263f2b1f46f6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbinterfaceapi_cpp484 14 "%0PipeInfo Size %10!d! incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceGetConfiguredPipe FUNC=imp_WdfUsbInterfaceGetConfiguredPipe
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbinterfaceapi_cpp396 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbInterfaceGetConfiguredSettingIndex
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b02a0a0f-b53f-3966-3325-263f2b1f46f6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbinterfaceapi_cpp280 13 "%0EndpointInfo Size %10!d! incorrect, expected %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceGetEndpointInformation FUNC=imp_WdfUsbInterfaceGetEndpointInformation
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbinterfaceapi_cpp184 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbInterfaceGetInterfaceNumber
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b02a0a0f-b53f-3966-3325-263f2b1f46f6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbinterfaceapi_cpp109 11 "%0InterfaceDescriptor passed in is NULL %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceSelectSetting FUNC=imp_WdfUsbInterfaceSelectSetting
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbinterfaceapi_cpp135 12 "%0URB or URB fields passed in are invalid Urb 0x%10!p!  %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceSelectSetting FUNC=imp_WdfUsbInterfaceSelectSetting
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbinterfaceapi_cpp84 10 "%0Params size %10!d!, expected %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceSelectSetting FUNC=imp_WdfUsbInterfaceSelectSetting
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0968cc89-c7a7-39bd-3b43-e0f36f3bc7bf WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp1289 31 "%0USBDEVICE Must have been created with Client Contract Verion Info, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceCreateIsochUrb FUNC=imp_WdfUsbTargetDeviceCreateIsochUrb
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdeviceapi_cpp235 10 "%0WDF_USB_DEVICE_CREATE_CONFIG Size 0x%10!x!, expected 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceCreateWithParameters FUNC=imp_WdfUsbTargetDeviceCreateWithParameters
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdeviceapi_cpp1181 30 "%0format control request WDFUSBDEVICE %10!p!, WDFREQWUEST %11!p!, WDFMEMORY %12!p!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForControlTransfer FUNC=imp_WdfUsbTargetDeviceFormatRequestForControlTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbdeviceapi_cpp1128 29 "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForControlTransfer FUNC=imp_WdfUsbTargetDeviceFormatRequestForControlTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxusbdeviceapi_cpp634 14 "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForString FUNC=imp_WdfUsbTargetDeviceFormatRequestForString
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbdeviceapi_cpp604 13 "%0WDFMEMORY %10!p! length must be even number of WCHARs, but is %11!I64d! in length, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForString FUNC=imp_WdfUsbTargetDeviceFormatRequestForString
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdeviceapi_cpp567 12 "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!, StringIndex %13!d!, LandID 0x%14!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForString FUNC=imp_WdfUsbTargetDeviceFormatRequestForString
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
}
#typev fxusbdeviceapi_cpp1348 32 "%0WDFUSBDEVICE %10!p! has %11!d! interfaces, index %12!d! requested, returning NULL handle" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceGetInterface FUNC=imp_WdfUsbTargetDeviceGetInterface
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp1336 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetDeviceGetInterface
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxusbdeviceapi_cpp921 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetDeviceGetNumInterfaces
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0968cc89-c7a7-39bd-3b43-e0f36f3bc7bf WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp279 11 "%0Information size %10!d!, expected %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceRetrieveInformation FUNC=imp_WdfUsbTargetDeviceRetrieveInformation
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdeviceapi_cpp693 16 "%0Params Type %10!d! not a valid value, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdeviceapi_cpp873 24 "%0WDFUSBDEVICE %10!p! SettingPairs contains invalid SettingIndex for WDFUSBINTERFACE %11!p!. Setting index passed in: %12!d!, max index: %13!d!, returning %14!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxusbdeviceapi_cpp835 23 "%0WDFUSBDEVICE %10!p! MultiInterface.NumberInterfaces %11!d! != %12!d! (reported num interfaces), %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbdeviceapi_cpp824 22 "%0WDFUSBDEVICE %10!p! SettingPairs Array passed is NULL, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdeviceapi_cpp765 20 "%0Either  InterfaceDescriptor is NULL or  NumInterfaceDescriptors is zero WDFUSBDEVICE %10!p! InterfaceDescriptor %11!p! NumInterfaceDescriptors 0x%12!x!%13!s! %14!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemEnum(_WdfUsbTargetDeviceSelectConfigType) -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxusbdeviceapi_cpp794 21 "%0Either URB passed in was NULL or the URB Function or Length was invalid  WDFUSBDEVICE %10!p! Urb 0x%11!p! %12!s! %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WdfUsbTargetDeviceSelectConfigType) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbdeviceapi_cpp744 19 "%0WDFUSBDEVICE %10!p! succeeding config operation %11!s! on zero interfaces immediately, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WdfUsbTargetDeviceSelectConfigType) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdeviceapi_cpp729 18 "%0WDFUSBDEVICE %10!p! number of interfaces found in the config descriptor does not match bNumInterfaces in config descriptor, failing config operation %11!s!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WdfUsbTargetDeviceSelectConfigType) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdeviceapi_cpp677 15 "%0Params size %10!d!, expected %11!d! %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e4265065-4bed-3c4f-67c4-52b6266ddd6e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp1047 24 "%0FxUsbDeviceControlContext::AllocateUrb Failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatControlRequest FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdeviceapi_cpp1047 22 "%0Control transfer buffer is limited to 0xFFFF bytes in size, %10!I64d! requested" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatControlRequest FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemLongLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
490b682a-621a-388b-ee65-ab233ea347ba WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp1032 12 "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxusbdeviceapi_cpp1032 11 "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxusbdeviceapi_cpp1032 10 "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateRequestOptions FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a614457f-6b9d-3e66-8eec-8792cb9e85d4 base // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp1027 10 "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierCheckIrqlLevel FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp1047 13 "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e4265065-4bed-3c4f-67c4-52b6266ddd6e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp1047 23 "%0WDFUSBDEVICE %10!p!, Request %11!p!, setting target failed, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatControlRequest FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp1047 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdeviceapi_cpp1047 11 "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdeviceapi_cpp1047 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
02af2262-c88b-399f-02b2-fb7037fd57e7 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp1076 11 "%0Request %10!p!, wait on event %11!p! done" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::~FxSyncRequest FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxusbdeviceapi_cpp1076 10 "%0Request %10!p!, waiting on event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::~FxSyncRequest FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp1010 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxusbdeviceapi_cpp1002 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0968cc89-c7a7-39bd-3b43-e0f36f3bc7bf WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdeviceapi_cpp1073 28 "%0WDFUSBDEVICE %10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdeviceapi_cpp1052 27 "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p! being submitted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxusbdeviceapi_cpp1022 26 "%0WDFUSBDEVICE %10!p! control transfer sync" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
32418b6b-3d5c-3267-21ee-bf9b6a55156d WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipe_cpp1729 33 "%0Pipe %10!p!, Request %11!p!, setting target failed, status %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatAbortRequest FUNC=FxUsbPipe::FormatAbortRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbpipe_cpp1802 34 "%0Pipe %10!p!, Request %11!p!, setting target failed, status %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatResetRequest FUNC=FxUsbPipe::FormatResetRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbpipe_cpp1349 23 "%0WDFUSBPIPE %10!p! is purged from EvtUsbTargetPipeReadersFailed callback" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::GotoPurgeState FUNC=FxUsbPipe::GotoPurgeState
{
Arg, ItemPtr -- 10
}
#typev fxusbpipe_cpp1322 22 "%0WDFUSBPIPE %10!p! converting purge action %11!s! to %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::GotoPurgeState FUNC=FxUsbPipe::GotoPurgeState
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_TARGET_PURGE_IO_ACTION) -- 11
Arg, ItemEnum(_WDF_IO_TARGET_PURGE_IO_ACTION) -- 12
}
#typev fxusbpipe_cpp1394 24 "%0WDFUSBPIPE %10!p! was not stopped %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::GotoRemoveState FUNC=FxUsbPipe::GotoRemoveState
{
Arg, ItemPtr -- 10
Arg, ItemString -- 11
}
#typev fxusbpipe_cpp1267 21 "%0WDFUSBPIPE %10!p! is stopped from EvtUsbTargetPipeReadersFailed callback" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::GotoStopState FUNC=FxUsbPipe::GotoStopState
{
Arg, ItemPtr -- 10
}
#typev fxusbpipe_cpp1244 20 "%0WDFUSBPIPE %10!p! converting stop action %11!s! to %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::GotoStopState FUNC=FxUsbPipe::GotoStopState
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_TARGET_SENT_IO_ACTION) -- 11
Arg, ItemEnum(_WDF_IO_TARGET_SENT_IO_ACTION) -- 12
}
#typev fxusbpipe_cpp1486 28 "%0Continuous reader already initialized on WDFUSBPIPE %10!p! %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::InitContinuousReader FUNC=FxUsbPipe::InitContinuousReader
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbpipe_cpp124 12 "%0WDFUSBPIPE %10!p! continuous reader not queueing work item,WorkItemQueued = %11!d!, target state %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::QueueWorkItemLocked FUNC=FxUsbPipeContinuousReader::QueueWorkItemLocked
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
}
#typev fxusbpipe_cpp113 11 "%0Could not Queue workitem" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxUsbPipeContinuousReader::QueueWorkItemLocked FUNC=FxUsbPipeContinuousReader::QueueWorkItemLocked
{
}
#typev fxusbpipe_cpp103 10 "%0WDFUSBPIPE %10!p! continuous reader queueing work item to recover from failed allocation" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::QueueWorkItemLocked FUNC=FxUsbPipeContinuousReader::QueueWorkItemLocked
{
Arg, ItemPtr -- 10
}
#typev fxusbpipe_cpp247 16 "%0WDFUSBPIPE %10!p! continuous reader, buffer alloc failed, but not in started state" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
}
#typev fxusbpipe_cpp232 15 "%0WDFUSBPIPE %10!p! continuous reader, buffer alloc failed, but there are %11!d! readers left out of a max of %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxusbpipe_cpp216 14 "%0WDFUSBPIPE %10!p! continuous reader, format failed, %11!s!, repeater %12!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
Arg, ItemPtr -- 12
}
#typev fxusbpipe_cpp170 13 "%0WDFUSBPIPE %10!p! is being reset, continuous reader %11!p! FxRequest %12!p! PIRP %13!p! is deferred for later." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}
#typev fxusbpipe_cpp1446 26 "%0WDFUSBPIPE %10!p!, cancelling for continuous reader (max of %11!d!)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::WaitForSentIoToComplete FUNC=FxUsbPipe::WaitForSentIoToComplete
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxusbpipe_cpp1433 25 "%0WDFUSBPIPE %10!p!, waiting for continuous reader work item to complete" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::WaitForSentIoToComplete FUNC=FxUsbPipe::WaitForSentIoToComplete
{
Arg, ItemPtr -- 10
}
#typev fxusbpipe_cpp1460 27 "%0WDFUSBPIPE %10!p!, waiting for all i/o to complete" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::WaitForSentIoToComplete FUNC=FxUsbPipe::WaitForSentIoToComplete
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipe_cpp1575 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxUsbPipe::_FormatTransfer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxusbpipe_cpp1560 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxUsbPipe::_FormatTransfer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxusbpipe_cpp1566 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxUsbPipe::_FormatTransfer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
32418b6b-3d5c-3267-21ee-bf9b6a55156d WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipe_cpp1625 29 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::_FormatTransfer FUNC=FxUsbPipe::_FormatTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbpipe_cpp375 19 "%0WDFUSBPIPE %10!p! continuous reader %11!p! FxRequest %12!p! PIRP %13!p! got asynchronously canceled" //   GLOBALS=pPipe->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}
#typev fxusbpipe_cpp307 17 "%0WDFUSBPIPE %10!p! continuous reader FxRequest %11!p! PIRP %12!p! returned with %13!s!" //   GLOBALS=pPipe->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbpipe_cpp333 18 "%0WDFUSBPIPE %10!p! continuous reader %11!p! FxRequest %12!p! PIRP %13!p! canceled" //   GLOBALS=pPipe->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipe_cpp1648 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxUsbPipe::_SendTransfer
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
32418b6b-3d5c-3267-21ee-bf9b6a55156d WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipe_cpp1711 32 "%0WDFUSBPIPE %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::_SendTransfer FUNC=FxUsbPipe::_SendTransfer
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbpipe_cpp1695 31 "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p! being submitted" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::_SendTransfer FUNC=FxUsbPipe::_SendTransfer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
06757e07-5ef7-3397-a0d2-4872904c2474 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev usbutil_cpp413 16 "%0InterfaceList %10!p!, NumEndPoints 0x%11!x!, Integer overflow while calculating interface size, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateConfigRequest FUNC=FxUsbDevice::CreateConfigRequest
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev usbutil_cpp78 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxFormatUrbRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev usbutil_cpp78 13 "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxFormatUrbRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
06757e07-5ef7-3397-a0d2-4872904c2474 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev usbutil_cpp78 10 "%0FormatUrbRequest:  Target %10!p!, Request %11!p!, setting target failed, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxFormatUrbRequest FUNC=FxFormatUrbRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev usbutil_cpp76 11 "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxFormatUrbRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev usbutil_cpp76 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget FUNC=FxFormatUrbRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
06757e07-5ef7-3397-a0d2-4872904c2474 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev usbutil_cpp129 11 "%0USB Configuration packet contains bad data, expected at least %10!d! remaining bytes in config descriptor at offset %11!I64d!, total size is %12!I64d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbValidateConfigDescriptorHeaders FUNC=FxUsbValidateConfigDescriptorHeaders
{
Arg, ItemLong -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
}
#typev usbutil_cpp144 12 "%0USB Configuration packet contains bad data, descriptor at offset %10!I64d! specified bLength %11!d!, only %12!I64d! bytes remaining in config descriptor, total size is %13!I64d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbValidateConfigDescriptorHeaders FUNC=FxUsbValidateConfigDescriptorHeaders
{
Arg, ItemLongLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemLongLong -- 13
}
#typev usbutil_cpp156 13 "%0USB Configuration packet contains bad data, descriptor at offset %10!I64d! contains bLength == 0, this is due to a broken device or driver" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbValidateConfigDescriptorHeaders FUNC=FxUsbValidateConfigDescriptorHeaders
{
Arg, ItemLongLong -- 10
}
#typev usbutil_cpp267 15 "%0USB Configuration packet contains bad data, found descriptor #%10!d! of type %11!d! at offset %12!I64d!, expected minimum bLength of %13!I64d!, found %14!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbValidateDescriptorType FUNC=FxUsbValidateDescriptorType
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLong -- 12
Arg, ItemLongLong -- 13
Arg, ItemLong -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8072e1b4-c655-394b-72cb-ae1979cd3cf0 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdevice_cpp1108 16 "%0Config descriptor indicated there were %10!d! interfaces, only found %11!d! interfaces" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
#typev fxusbdevice_cpp1100 15 "%0Config descriptor indicated there were 0 interfaces, but an interface descriptor was found" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces FUNC=FxUsbDevice::CreateInterfaces
{
}
#typev fxusbdevice_cpp1093 14 "%0Config descriptor indicated there were %10!d! interfaces, but did not find any interface descriptors in config descriptor %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdevice_cpp1022 13 "%0Could not allocate memory for interface object #%10!d!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdevice_cpp981 12 "%0Could not allocate memory for %10!d! interfaces, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdevice_cpp954 11 "%0Validation of interface descriptors in config descriptor failed, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevice_cpp926 10 "%0Validation of the config descriptor failed due to a bad common descriptor header, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces FUNC=FxUsbDevice::CreateInterfaces
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevice_cpp2290 36 "%0USBDEVICE Must have been created with Client Contract Version Info, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateIsochUrb FUNC=FxUsbDevice::CreateIsochUrb
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevice_cpp2256 35 "%0Urb must be parented to FxDevice or IoAllocated Request" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateIsochUrb FUNC=FxUsbDevice::CreateIsochUrb
{
}
#typev fxusbdevice_cpp2172 34 "%0USBDEVICE Must have been created with Client Contract Version Info, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateUrb FUNC=FxUsbDevice::CreateUrb
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8bf21f6b-689f-3874-ab54-d8bed81f5c4b core // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdevice_cpp2127 11 "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxValidateObjectAttributesForParentHandle FUNC=FxUsbDevice::CreateUrb
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8072e1b4-c655-394b-72cb-ae1979cd3cf0 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdevice_cpp2138 33 "%0Urb must be parented to FxDevice or an IoAllocated Request" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateUrb FUNC=FxUsbDevice::CreateUrb
{
}
#typev fxusbdevice_cpp1818 30 "%0USB core failed Select Configuration, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfig FUNC=FxUsbDevice::SelectConfig
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevice_cpp1775 29 "%0USB core failed Select Interface URB, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfig FUNC=FxUsbDevice::SelectConfig
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevice_cpp1672 28 "%0Could not allocate a select interface URB, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfig FUNC=FxUsbDevice::SelectConfig
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevice_cpp1543 22 "%0WDFUSBDEVICE supports a maximum of %10!d! pipes per interface, USBD_INTERFACE_INFORMATION %11!p! specified %12!d!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfig FUNC=FxUsbDevice::SelectConfig
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbdevice_cpp1554 23 "%0Could not find an instance of an interface descriptor with InterfaceNumber %10!d!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfig FUNC=FxUsbDevice::SelectConfig
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdevice_cpp1592 24 "%0Could not allocate memory for Pipes InterfaceNumber %10!d!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfig FUNC=FxUsbDevice::SelectConfig
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdevice_cpp1614 25 "%0Could not allocate a pipe object, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfig FUNC=FxUsbDevice::SelectConfig
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevice_cpp1623 26 "%0Could not Init the pipe object, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfig FUNC=FxUsbDevice::SelectConfig
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevice_cpp1631 27 "%0Could not commit the pipe object, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfig FUNC=FxUsbDevice::SelectConfig
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevice_cpp1515 21 "%0Could not internal allocate tracking info for selecting a config on WDFUSBDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfig FUNC=FxUsbDevice::SelectConfig
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdevice_cpp1360 19 "%0Could not allocate array of USBD_INTERFACE_LIST_ENTRY, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigDescriptor FUNC=FxUsbDevice::SelectConfigDescriptor
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9f245ae4-771d-3749-b5a1-45210dcd639b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbinterface_cpp297 12 "%0Interface Number %10!d! does not have contiguous alternate settings,expected consecutive %11!d! settings, but alt setting %12!d! missing %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::CreateSettings FUNC=FxUsbInterface::CreateSettings
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbinterface_cpp355 13 "%0Interface Number %10!d! does not have a valid endpoint descriptor,%11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::CreateSettings FUNC=FxUsbInterface::CreateSettings
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbinterface_cpp275 11 "%0Interface Number %10!d! does not have contiguous alternate settings,expected %11!d! settings, found alt setting %12!d!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::CreateSettings FUNC=FxUsbInterface::CreateSettings
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbinterface_cpp249 10 "%0Could not allocate memory for %10!d! settings for bInterfaceNumber %11!d! (Protocol %12!d!, Class %13!d!, SubClass %14!d!), %15!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::CreateSettings FUNC=FxUsbInterface::CreateSettings
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
Arg, ItemNTSTATUS -- 15
}
#typev fxusbinterface_cpp1105 21 "%0WDFUSBINTERFACE %10!p! not configured, cannot retrieve configured setting index" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::GetConfiguredSettingIndex FUNC=FxUsbInterface::GetConfiguredSettingIndex
{
Arg, ItemPtr -- 10
}
#typev fxusbinterface_cpp708 18 "%0Unable to allocate memory for the pipes %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSetting FUNC=FxUsbInterface::SelectSetting
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbinterface_cpp718 19 "%0Init pipe failed  %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSetting FUNC=FxUsbInterface::SelectSetting
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbinterface_cpp727 20 "%0Commit pipe failed  %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSetting FUNC=FxUsbInterface::SelectSetting
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbinterface_cpp695 17 "%0Unable to allocate memory %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSetting FUNC=FxUsbInterface::SelectSetting
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbinterface_cpp650 16 "%0Urb header length 0x%10!x! is less than expected 0x%11!x!%12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSetting FUNC=FxUsbInterface::SelectSetting
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbinterface_cpp518 14 "%0WDFUSBINTERFACE %10!p! has interface num %11!d!, select setting by descriptor specified interface num %12!d!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::SelectSettingByDescriptor FUNC=FxUsbInterface::SelectSettingByDescriptor
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e4265065-4bed-3c4f-67c4-52b6266ddd6e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdevicekm_cpp635 24 "%0FxUsbDeviceControlContext::AllocateUrb Failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatControlRequest FUNC=FxUsbDevice::FormatControlRequest
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevicekm_cpp614 23 "%0WDFUSBDEVICE %10!p!, Request %11!p!, setting target failed, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatControlRequest FUNC=FxUsbDevice::FormatControlRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdevicekm_cpp614 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxUsbDevice::FormatControlRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdevicekm_cpp614 13 "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxUsbDevice::FormatControlRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdevicekm_cpp612 11 "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxUsbDevice::FormatControlRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdevicekm_cpp612 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget FUNC=FxUsbDevice::FormatControlRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e4265065-4bed-3c4f-67c4-52b6266ddd6e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbdevicekm_cpp604 22 "%0Control transfer buffer is limited to 0xFFFF bytes in size, %10!I64d! requested" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatControlRequest FUNC=FxUsbDevice::FormatControlRequest
{
Arg, ItemLongLong -- 10
}
#typev fxusbdevicekm_cpp546 21 "%0FxUsbDeviceStringContext::AllocateUrb failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatStringRequest FUNC=FxUsbDevice::FormatStringRequest
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevicekm_cpp525 20 "%0WDFUSBDEVICE %10!p!, Request %11!p!, setting target failed, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatStringRequest FUNC=FxUsbDevice::FormatStringRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdevicekm_cpp352 18 "%0Query Interface for bus returned error, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice FUNC=FxUsbDevice::InitDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevicekm_cpp226 17 "%0Defective USB device reported two different config descriptor wTotalLength values: %10!d! and %11!d!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice FUNC=FxUsbDevice::InitDevice
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdevicekm_cpp217 16 "%0Could not retrieve config descriptor, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice FUNC=FxUsbDevice::InitDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevicekm_cpp193 15 "%0Could not allocate %10!d! bytes for config descriptor, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice FUNC=FxUsbDevice::InitDevice
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdevicekm_cpp163 14 "%0Could not retrieve config descriptor size, config.wTotalLength %10!d! < sizeof(config descriptor) (%11!d!), %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice FUNC=FxUsbDevice::InitDevice
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbdevicekm_cpp150 13 "%0Could not retrieve config descriptor size, zero bytes transferred,  %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice FUNC=FxUsbDevice::InitDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevicekm_cpp139 12 "%0Could not retrieve config descriptor size, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice FUNC=FxUsbDevice::InitDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevicekm_cpp99 11 "%0Could not retrieve device descriptor, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice FUNC=FxUsbDevice::InitDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevicekm_cpp58 10 "%0USBD_CreateHandle failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice FUNC=FxUsbDevice::InitDevice
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevicekm_cpp791 26 "%0Could not retrieve capability %10!s!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::QueryUsbCapability FUNC=FxUsbDevice::QueryUsbCapability
{
Arg, ItemGuid -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbdevicekm_cpp776 25 "%0WDFUSBDEVICE must have been created using WdfUsbTargetDeviceCreateWithParameters, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::QueryUsbCapability FUNC=FxUsbDevice::QueryUsbCapability
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbdevicekm_cpp1029 31 "%0WDFUSBDEVICE %10!p! interface pairs set (%11!d!) is not equal to actual # of interfaces (%12!d!) reported by the device, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigMulti FUNC=FxUsbDevice::SelectConfigMulti
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbdevicekm_cpp1004 30 "%0WDFUSBDEVICE %10!p! could not retrieve AlternateSetting %11!d! for bInterfaceNumber %12!d!, returning %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigMulti FUNC=FxUsbDevice::SelectConfigMulti
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxusbdevicekm_cpp945 29 "%0WDFUSBDEVICE %10!p! could not retrieve AlternateSetting 0 for bInterfaceNumber %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigMulti FUNC=FxUsbDevice::SelectConfigMulti
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxusbdevicekm_cpp859 28 "%0WDFUSBDEVICE %10!p! could not retrieve AlternateSetting 0 for bInterfaceNumber %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigSingle FUNC=FxUsbDevice::SelectConfigSingle
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev fxusbdevicekm_cpp842 27 "%0WDFUSBDEVICE %10!p! cannot be auto configured for a single interface since there are %11!d! interfaces on the device, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigSingle FUNC=FxUsbDevice::SelectConfigSingle
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0fcb61a6-1e6c-32fa-930b-bb2f8b53ddf3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipekm_cpp141 10 "%0Could not allocate workitem: %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxUsbPipeContinuousReader::Config FUNC=FxUsbPipeContinuousReader::Config
{
Arg, ItemNTSTATUS -- 10
}
#typev fxusbpipekm_cpp245 14 "%0Pipe %10!p!, sending __in transaction on a __out endpoint" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
}
#typev fxusbpipekm_cpp269 16 "%0Pipe %10!p!, Request %11!p!, setting target failed, status %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
65f27875-bfe5-34da-d968-5dba15f2faa3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipekm_cpp269 12 "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbpipekm_cpp269 13 "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxusbpipekm_cpp267 11 "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbpipekm_cpp267 14 "%0Freeing irp %10!p! from WDFREQUEST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0fcb61a6-1e6c-32fa-930b-bb2f8b53ddf3 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxusbpipekm_cpp259 15 "%0Pipe %10!p!, sending __out transaction on an __in endpoint" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
}
#typev fxusbpipekm_cpp233 13 "%0WDFUSBPIPE %10!p!, buffer size truncated, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxusbpipekm_cpp222 12 "%0WDFUSBPIPE %10!p! not the right type, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest FUNC=FxUsbPipe::FormatTransferRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e29ab216-81a6-3ebb-c2b1-b12ef7a7a83b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueueapi_cpp1416 20 "%0Examine callback can't be null for WdfIoForwardProgressReservedPolicyUseExamine  %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueAssignForwardProgressPolicy FUNC=imp_WdfIoQueueAssignForwardProgressPolicy
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueueapi_cpp1416 21 "%0Need to have more than  0 reserved Requests %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueAssignForwardProgressPolicy FUNC=imp_WdfIoQueueAssignForwardProgressPolicy
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueueapi_cpp1371 19 "%0WDF_IO_QUEUE_FORWARD_PROGRESS_POLICY Size 0x%10!x!, expected 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueAssignForwardProgressPolicy FUNC=imp_WdfIoQueueAssignForwardProgressPolicy
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxioqueueapi_cpp1359 18 "%0Queue is already configured for forward progress %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueAssignForwardProgressPolicy FUNC=imp_WdfIoQueueAssignForwardProgressPolicy
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueueapi_cpp133 10 "%0WDF_IO_QUEUE_CONFIG Size 0x%10!x!, expected for v1.7 size 0x%11!x! or v1.9 size 0x%12!x! or current version size 0x%13!x!, %14!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate FUNC=imp_WdfIoQueueCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxioqueueapi_cpp175 12 "%0Default queue can only be created before WdfControlDeviceFinishInitializingon the WDFDEVICE %10!p! is called %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoQueueCreate FUNC=imp_WdfIoQueueCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueueapi_cpp149 11 "%0Parameter to receive WDFQUEUE handle is not optional for non default queue %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate FUNC=imp_WdfIoQueueCreate
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueueapi_cpp247 13 "%0Default queue can only be created before the WDFDEVICE 0x%10!p! is started, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoQueueCreate FUNC=imp_WdfIoQueueCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueueapi_cpp227 15 "%0Create failed for FxPkgIo 0x%10!p!, WDFDEVICE 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate FUNC=imp_WdfIoQueueCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueueapi_cpp207 14 "%0Queue Creation failed for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate FUNC=imp_WdfIoQueueCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueueapi_cpp239 16 "%0Created WDFQUEUE 0x%10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate FUNC=imp_WdfIoQueueCreate
{
Arg, ItemPtr -- 10
}
#typev fxioqueueapi_cpp1041 17 "%0Invalid WDF_REQUEST_PARAMETERS size %10!d! %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueFindRequest FUNC=imp_WdfIoQueueFindRequest
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueueapi_cpp325 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoQueueGetDevice
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxioqueueapi_cpp290 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoQueueGetState
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxioqueueapi_cpp654 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoQueueRetrieveNextRequest
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxioqueueapi_cpp370 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoQueueStart
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
#typev fxioqueueapi_cpp422 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfIoQueueStop
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2060831f-e143-324a-983e-9a09a7eb65f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp76 10 "%0Constructed FxPkgIo 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::FxPkgIo FUNC=FxPkgIo::FxPkgIo
{
Arg, ItemPtr -- 10
}
#typev fxpkgio_cpp98 11 "%0Destroyed FxPkgIo 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::~FxPkgIo FUNC=FxPkgIo::~FxPkgIo
{
Arg, ItemPtr -- 10
}
#typev fxpkgio_cpp886 23 "%0Couldn't create object DynamicDispatchInfo, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgIo::ConfigureDynamicDispatching FUNC=FxPkgIo::ConfigureDynamicDispatching
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgio_cpp848 22 "%0Driver %10!p! has already set a dispatch callback for %11!s!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgIo::ConfigureDynamicDispatching FUNC=FxPkgIo::ConfigureDynamicDispatching
{
Arg, ItemPtr -- 10
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgio_cpp813 21 "%0Invalid MajorFunction %10!s!, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::ConfigureDynamicDispatching FUNC=FxPkgIo::ConfigureDynamicDispatching
{
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgio_cpp956 26 "%0%10!s! is already configured forWDFQUEUE 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::ConfigureForwarding FUNC=FxPkgIo::ConfigureForwarding
{
Arg, ItemEnum(_WDF_REQUEST_TYPE) -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgio_cpp942 25 "%0Default WDFQUEUE 0x%10!p! cannot be configured to dispatch specific type of request, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::ConfigureForwarding FUNC=FxPkgIo::ConfigureForwarding
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgio_cpp926 24 "%0Must have EvtIoDefault or %10!s! specific dispatch event registered for WDFQUEUE 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::ConfigureForwarding FUNC=FxPkgIo::ConfigureForwarding
{
Arg, ItemEnum(_WDF_REQUEST_TYPE) -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgio_cpp1015 27 "%0QueueAttributes->ParentObject 0x%10!p! must have WDFDEVICE as an eventual ancestor, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::CreateQueue FUNC=FxPkgIo::CreateQueue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
8cdf3492-ce98-3b09-79e6-1e14b6d7ed6b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp1010 11 "%0WDFHANDLE %10!p! does not have a WDFDEVICE as an ancestor" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxDeviceBase::_SearchForDevice FUNC=FxPkgIo::CreateQueue
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2060831f-e143-324a-983e-9a09a7eb65f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp1026 28 "%0Attributes->ParentObject 0x%10!p! ancestor is WDFDEVICE %11!p!, but not the same WDFDEVICE 0x%12!p! passed to WdfIoQueueCreate, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::CreateQueue FUNC=FxPkgIo::CreateQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxpkgio_cpp111 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! %12!s!, IRP_MN %13!x!, IRP 0x%14!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::Dispatch FUNC=FxPkgIo::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b13234fa-c74e-3a8b-bfbd-689137af2e1e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 10 "%0EvtIoExamineIrp callback on WDFQUEUE %10!p! returned an invalid action %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetReservedRequest FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2060831f-e143-324a-983e-9a09a7eb65f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 16 "%0Could not create WDFREQUEST, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::DispatchStep2 FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgio_cpp210 14 "%0Driver cannot change the IRP type in its dispatch callback Irp 0x%10!p!, %11!s!, IRP_MN %12!x!, Device 0x%13!p!, %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::DispatchStep1 FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemPtr -- 10
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b13234fa-c74e-3a8b-bfbd-689137af2e1e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 11 "%0Forward action on WDFQUEUE %10!p! says that framework should fail the Irp %11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetReservedRequest FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 39 "%0WDFREQUEST 0x%10!p! has already been completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 15 "%0The driver allocated excessive number (%10!u!) of WDF objects. Investigate with !wdfDriverInfo driverName 0x41 or 0x50. To adjust the limit, modify driver reg key under Parameters\Wdf\ObjectLeakDetectionLimit. To disable the check, set it to 0xffffffff." //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::DetectExcessiveAllocation FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 11 "%0Could not commit FxRequest %10!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2060831f-e143-324a-983e-9a09a7eb65f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp288 15 "%0No queue configured for WDFDEVICE 0x%10!p!, failing IRP 0x%11!p!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::DispatchStep1 FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 10 "%0Memory allocation failed %10!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a6121e9a-3879-3591-a485-d9b92f3fa173 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 11 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::Complete FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 41 "%0WDFQUEUE 0x%10!p! is not accepting requests, state is %11!s!, %12!s!completing WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 15 "%0The driver allocated excessive number (%10!u!) of WDF objects. Investigate with !wdfDriverInfo driverName 0x41 or 0x50. To adjust the limit, modify driver reg key under Parameters\Wdf\ObjectLeakDetectionLimit. To disable the check, set it to 0xffffffff." //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::DetectExcessiveAllocation FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp324 42 "%0Queuing WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest FUNC=FxPkgIo::DispatchStep1
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b13234fa-c74e-3a8b-bfbd-689137af2e1e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp438 10 "%0EvtIoExamineIrp callback on WDFQUEUE %10!p! returned an invalid action %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetReservedRequest FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2060831f-e143-324a-983e-9a09a7eb65f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp419 16 "%0Could not create WDFREQUEST, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::DispatchStep2 FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b13234fa-c74e-3a8b-bfbd-689137af2e1e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp438 11 "%0Forward action on WDFQUEUE %10!p! says that framework should fail the Irp %11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetReservedRequest FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp459 39 "%0WDFREQUEST 0x%10!p! has already been completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp385 15 "%0The driver allocated excessive number (%10!u!) of WDF objects. Investigate with !wdfDriverInfo driverName 0x41 or 0x50. To adjust the limit, modify driver reg key under Parameters\Wdf\ObjectLeakDetectionLimit. To disable the check, set it to 0xffffffff." //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::DetectExcessiveAllocation FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp385 11 "%0Could not commit FxRequest %10!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgio_cpp385 10 "%0Memory allocation failed %10!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp385 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a6121e9a-3879-3591-a485-d9b92f3fa173 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp469 11 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::Complete FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp469 41 "%0WDFQUEUE 0x%10!p! is not accepting requests, state is %11!s!, %12!s!completing WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
dd629c10-11e9-381c-af67-ea792fc9f189 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp385 15 "%0The driver allocated excessive number (%10!u!) of WDF objects. Investigate with !wdfDriverInfo driverName 0x41 or 0x50. To adjust the limit, modify driver reg key under Parameters\Wdf\ObjectLeakDetectionLimit. To disable the check, set it to 0xffffffff." //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxObject::DetectExcessiveAllocation FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp469 42 "%0Queuing WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest FUNC=FxPkgIo::DispatchStep2
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp693 39 "%0WDFREQUEST 0x%10!p! has already been completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState FUNC=FxPkgIo::EnqueueRequest
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2060831f-e143-324a-983e-9a09a7eb65f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp742 20 "%0Cannot send-and-forget WDFREQUEST 0x%10!p! with formatted IO context for filter WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::EnqueueRequest FUNC=FxPkgIo::EnqueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgio_cpp656 19 "%0No queue configured for WDFDEVICE 0x%10!p!, failing WDFREQUEST 0x%11!p! %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::EnqueueRequest FUNC=FxPkgIo::EnqueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp697 43 "%0WDFQUEUE 0x%10!p! is not accepting requests state is %11!s!, %12!s!WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequestFromForward FUNC=FxPkgIo::EnqueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2060831f-e143-324a-983e-9a09a7eb65f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgio_cpp630 18 "%0WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::EnqueueRequest FUNC=FxPkgIo::EnqueueRequest
{
Arg, ItemPtr -- 10
}
#typev fxpkgio_cpp1423 33 "%0Currently framework allow flushing of queues by fileobject on cleanup only at PASSIVE_LEVEL" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::FlushAllQueuesByFileObject FUNC=FxPkgIo::FlushAllQueuesByFileObject
{
}
#typev fxpkgio_cpp520 17 "%0Default Queue Already Configured for FxPkgIo 0x%10!p!, WDFDEVICE 0x%11!p! %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::InitializeDefaultQueue FUNC=FxPkgIo::InitializeDefaultQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgio_cpp1357 32 "%0Restart queues from purged state for WDFDEVICE 0x%10!p! due to device restart" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxPkgIo::ResetStateForRestart FUNC=FxPkgIo::ResetStateForRestart
{
Arg, ItemPtr -- 10
}
#typev fxpkgio_cpp1281 31 "%0Power resume all queues of WDFDEVICE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxPkgIo::ResumeProcessingForPower FUNC=FxPkgIo::ResumeProcessingForPower
{
Arg, ItemPtr -- 10
}
#typev fxpkgio_cpp1189 30 "%0Perform %10!s! for all queues of WDFDEVICE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxPkgIo::StopProcessingForPower FUNC=FxPkgIo::StopProcessingForPower
{
Arg, ItemEnum(FxIoStopProcessingForPowerAction) -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgio_cpp152 13 "%0DispatchContext 0x%10!p! is invalid, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::Vf_VerifyDispatchContext FUNC=FxPkgIo::Vf_VerifyDispatchContext
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp6444 107 "%0Failure from m_IoReservedResourcesAllocate callback %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::AllocateReservedRequest FUNC=FxIoQueue::AllocateReservedRequest
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueue_cpp6421 106 "%0Failure to allocate request %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::AllocateReservedRequest FUNC=FxIoQueue::AllocateReservedRequest
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueue_cpp4379 77 "%0WDFREQUEST 0x%10!p! was cancelled while on WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::CancelForQueue FUNC=FxIoQueue::CancelForQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp715 21 "%0WDFQUEUE 0x%10!p! Synchronization scope is set to device but the Device ExecutionLevel: 0x%11!x! doesn't match Queue ExecutionLevel: 0x%12!x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ConfigureConstraints FUNC=FxIoQueue::ConfigureConstraints
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxioqueue_cpp698 20 "%0WDFQUEUE 0x%10!p! Synchronization scope is set to device; WDF extension drivers are not allowed to use this type of synchronization, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ConfigureConstraints FUNC=FxIoQueue::ConfigureConstraints
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp3055 83 "%0ReadyNotify notify method is NULL on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessReadyNotify FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp2948 15 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! The device is being power-dereferenced without a matching power-reference. This could occur if driver incorrectly calls WdfDeviceResumeIdle without a matching call to WdfDeviceStopIdle." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::IoDecrement FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c36ebe77-d8b5-3309-93aa-53acd9373c0f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp2825 15 "%0WorkItem 0x%10!p! is already deleted" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::EnqueueWorker FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp2825 46 "%0Presentation lock for WDFQUEUE 0x%10!p! is already held, deferring to dpc or workitem" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::CanThreadDispatchEventsLocked FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
c36ebe77-d8b5-3309-93aa-53acd9373c0f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp2825 14 "%0WorkItem 0x%10!p! already enqueued IoWorkItem 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::EnqueueWorker FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp2959 48 "%0WDFQUEUE 0x%10!p! Power Transition State %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemListLong(FxIoQueuePowerInvalid=0x0,FxIoQueuePowerOn,FxIoQueuePowerOff,FxIoQueuePowerStartingTransition,FxIoQueuePowerStopping,FxIoQueuePowerStoppingNotifyingDriver,FxIoQueuePowerStoppingDriverNotified,FxIoQueuePowerPurge,FxIoQueuePowerPurgeNotifyingDriver,FxIoQueuePowerPurgeDriverNotified,FxIoQueuePowerRestarting,FxIoQueuePowerRestartingNotifyingDriver,FxIoQueuePowerRestartingDriverNotified,FxIoQueuePowerLast) -- 11
}
#typev fxioqueue_cpp2920 81 "%0WDFQUEUE 0x%10!p! is idle, calling driver callback" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessIdleComplete FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp3108 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}
#typev fxioqueue_cpp2948 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp2825 45 "%0Current thread 0x%10!p! is not at the passive-level %11!s!, posting to worker thread for WDFQUEUE 0x%12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::CanThreadDispatchEventsLocked FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemListByte(Low,APC,DPC) -- 11
Arg, ItemPtr -- 12
}
#typev fxioqueue_cpp3029 49 "%0WDFQUEUE 0x%10!p! not in dispatching state, current state is %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
}
#typev fxioqueue_cpp2851 47 "%0Thread %10!p! is processing WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents FUNC=FxIoQueue::DispatchEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp3288 52 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp3188 39 "%0WDFREQUEST 0x%10!p! has already been completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp3395 58 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp3307 53 "%0Calling driver EvtIoWrite for WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp3268 51 "%0Calling driver EvtIoRead for WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp3373 57 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a6121e9a-3879-3591-a485-d9b92f3fa173 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp3427 11 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::Complete FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp3419 59 "%0Driver has no event callback for %10!s!, completing WDFREQUEST 0x%11!p! with %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemEnum(_WDF_REQUEST_TYPE) -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a6121e9a-3879-3591-a485-d9b92f3fa173 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp3255 11 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::Complete FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp3250 50 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp3321 54 "%0Calling driver EvtIoDeviceControl for WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp3358 56 "%0Calling driver EvtIoDefault for WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp3338 55 "%0Calling driver EvtIoInternalDeviceControl for WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver FUNC=FxIoQueue::DispatchRequestToDriver
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp1781 39 "%0WDFREQUEST 0x%10!p! has already been completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState FUNC=FxIoQueue::ForwardRequest
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp1781 43 "%0WDFQUEUE 0x%10!p! is not accepting requests state is %11!s!, %12!s!WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequestFromForward FUNC=FxIoQueue::ForwardRequest
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp1404 39 "%0WDFREQUEST 0x%10!p! has already been completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState FUNC=FxIoQueue::ForwardRequestWorker
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp1444 43 "%0WDFQUEUE 0x%10!p! is not accepting requests state is %11!s!, %12!s!WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequestFromForward FUNC=FxIoQueue::ForwardRequestWorker
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxioqueue_cpp1134 30 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest FUNC=FxIoQueue::GetRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp1171 39 "%0WDFREQUEST 0x%10!p! has already been completed" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState FUNC=FxIoQueue::GetRequest
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp1043 27 "%0WDFQUEUE 0x%10!p! is powered off, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest FUNC=FxIoQueue::GetRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp1119 29 "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest FUNC=FxIoQueue::GetRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp1029 26 "%0Cannot be called on a parallel WDFQUEUE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest FUNC=FxIoQueue::GetRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp1055 28 "%0WDFQUEUE 0x%10!p! is stopped, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest FUNC=FxIoQueue::GetRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp277 12 "%0Invalid dispatch type specified %10!d!, Queue 0x%11!p! %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize FUNC=FxIoQueue::Initialize
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxioqueue_cpp321 15 "%0At least one of EvtIoDefault|EvtIoRead|EvtIoWrite|EvtIoDeviceControl|EvtIoInternalDeviceControl must be set %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize FUNC=FxIoQueue::Initialize
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueue_cpp389 18 "%0Could not allocate workitem: %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize FUNC=FxIoQueue::Initialize
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueue_cpp341 16 "%0Cannot set io callback events on a manual WDFQUEUE 0x%10!p! %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize FUNC=FxIoQueue::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp467 17 "%0Cannot have  NumberOfPresentedRequests other than 0 on a Sequential or manual WDFQUEUE 0x%10!p!.Make Sure you set NumberOfPresentedRequests to 0, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize FUNC=FxIoQueue::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp443 19 "%0EvtIoDefault 0x%10!p!, EvtIoRead 0x%11!p!, EvtIoWrite 0x%12!p!, EvtIoDeviceControl 0x%13!p! for WDFQUEUE 0x%14!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize FUNC=FxIoQueue::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
}
#typev fxioqueue_cpp1269 31 "%0FindRequest is allowed only on a manaul queue 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::PeekRequest FUNC=FxIoQueue::PeekRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp5676 101 "%0Acknowledging WDFREQUEST %10!p! on WDFQUEUE %11!p! %12!s! requeue option" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessAcknowledgedRequests FUNC=FxIoQueue::ProcessAcknowledgedRequests
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemString -- 12
}
#typev fxioqueue_cpp4902 84 "%0Calling CancelRoutine routine for WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessCancelledRequests FUNC=FxIoQueue::ProcessCancelledRequests
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp4986 85 "%0Calling CanceledOnQueue routine for WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessCancelledRequestsOnQueue FUNC=FxIoQueue::ProcessCancelledRequestsOnQueue
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp5449 92 "%0Power Stop: Waiting for Driver to complete or acknowledge in-flight requests on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp5504 95 "%0Power Stop: Driver has acknowledged all in-flight requests, but WDFQUEUE 0x%10!p! has outstanding callbacks" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp5463 93 "%0Power Stop: Waiting for Driver to complete or acknowledge in-flight requests on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp5526 96 "%0Power Resume: Driver has power paused requests on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp5613 99 "%0Power Resume: Driver has no callback for EvtIoResume registered on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp5595 98 "%0Power Resume, Notifying Driver, WDFQUEUE 0x%10!p!, WDFREQUEST 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp5355 91 "%0Power Purge Notifying Driver WDFQUEUE 0x%10!p!, WDFREQUEST 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp5196 88 "%0Power Stop: WDFQUEUE 0x%10!p! is purging with in-flight requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp5152 86 "%0Power Stop: WDFQUEUE 0x%10!p! is powering off with in-flight requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp5216 89 "%0Power purge: WDFQUEUE 0x%10!p! is purging without in-flight requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp5174 87 "%0Power Stop: WDFQUEUE 0x%10!p! is powering off without in-flight requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp5485 94 "%0Power Stop: WDFQUEUE 0x%10!p! is now powered off with no in-flight requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp5273 90 "%0Power Stop Notifying Driver, WDFQUEUE 0x%10!p!, WDFREQUEST 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp5546 97 "%0Power Resume: Driver has no power paused requests on WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp5624 100 "%0Power Resume: WDFQUEUE 0x%10!p! is now powered on and I/O has resumed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents FUNC=FxIoQueue::ProcessPowerEvents
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp4781 82 "%0WDFQUEUE 0x%10!p! is purged, calling driver callback" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPurgeComplete FUNC=FxIoQueue::ProcessPurgeComplete
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp4229 76 "%0Waiting for %10!d! requests to complete on WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueDrainSynchronously FUNC=FxIoQueue::QueueDrainSynchronously
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp1895 43 "%0WDFQUEUE 0x%10!p! is not accepting requests state is %11!s!, %12!s!WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequestFromForward FUNC=FxIoQueue::QueueDriverCreatedRequest
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxioqueue_cpp3683 23 "%0WDFQUEUE 0x%10!p! is shut down, preventing queue from accepting requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::SetState FUNC=FxIoQueue::QueueIdle
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp3773 67 "%0Cancelling WDFREQUEST 0x%10!p!, WDFQUEUE 0x%11!p!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdle FUNC=FxIoQueue::QueueIdle
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp3667 65 "%0WDFQUEUE 0x%10!p! already has a IdleComplete callback registered 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdle FUNC=FxIoQueue::QueueIdle
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxioqueue_cpp3647 64 "%0WDFQUEUE 0x%10!p! is already deleted, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdle FUNC=FxIoQueue::QueueIdle
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp3803 68 "%0All driver cancellable requests cancelled  in WDFQUEUE 0x%10!p!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdle FUNC=FxIoQueue::QueueIdle
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp3749 66 "%0All WDFQUEUE 0x%10!p! requests cancelled" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdle FUNC=FxIoQueue::QueueIdle
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp3895 69 "%0Waiting for %10!d! requests to complete on WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdleSynchronously FUNC=FxIoQueue::QueueIdleSynchronously
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp3966 70 "%0WDFQUEUE 0x%10!p! is already deleted %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge FUNC=FxIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp4041 73 "%0Cancelling WDFREQUEST 0x%10!p!, WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge FUNC=FxIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp3986 71 "%0WDFQUEUE 0x%10!p! already has a PurgeComplete callback registered 0x%11!p! %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge FUNC=FxIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxioqueue_cpp4074 74 "%0All driver cancellable requests cancelled  in WDFQUEUE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge FUNC=FxIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp4032 72 "%0All WDFQUEUE 0x%10!p! requests cancelled" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge FUNC=FxIoQueue::QueuePurge
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp4160 75 "%0Waiting for %10!d! requests to complete on WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurgeSynchronously FUNC=FxIoQueue::QueuePurgeSynchronously
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a6121e9a-3879-3591-a485-d9b92f3fa173 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp2335 11 "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::Complete FUNC=FxIoQueue::QueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp2319 41 "%0WDFQUEUE 0x%10!p! is not accepting requests, state is %11!s!, %12!s!completing WDFREQUEST 0x%13!p! %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest FUNC=FxIoQueue::QueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
Arg, ItemString -- 12
Arg, ItemPtr -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxioqueue_cpp2343 42 "%0Queuing WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest FUNC=FxIoQueue::QueueRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp3584 23 "%0WDFQUEUE 0x%10!p! is shut down, preventing queue from accepting requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::SetState FUNC=FxIoQueue::QueueStart
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp3505 63 "%0WDFQUEUE 0x%10!p! should be stopped before clearing ReadyNotify callback 0x%11!p! registered, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify FUNC=FxIoQueue::ReadyNotify
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxioqueue_cpp3505 61 "%0WDFQUEUE 0x%10!p! already has a ReadyNotify callback 0x%11!p!registered, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify FUNC=FxIoQueue::ReadyNotify
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxioqueue_cpp3538 62 "%0WDFQUEUE 0x%10!p! does not have a ReadyNotify to cancel, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify FUNC=FxIoQueue::ReadyNotify
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp3492 60 "%0WDFQUEUE 0x%10!p! is not a Manual queue, ReadyNotify is only valid on a manual Queue, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify FUNC=FxIoQueue::ReadyNotify
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp2242 41 "%0WDFREQUEST 0x%10!p! not on IrpQueue" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::RemoveFromIrpQueue FUNC=FxIoQueue::RequestCancelable
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp1977 39 "%0Requeue is allowed only for a manual queue, WDFREQUEST 0x%10!p! %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Requeue FUNC=FxIoQueue::Requeue
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp2009 40 "%0WDFREQUEST 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::Requeue FUNC=FxIoQueue::Requeue
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp876 23 "%0WDFQUEUE 0x%10!p! is shut down, preventing queue from accepting requests" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::SetState FUNC=FxIoQueue::SetState
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp850 22 "%0Invalid WDFQUEUE 0x%10!p! state" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::SetState FUNC=FxIoQueue::SetState
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev FxIoQueue_hpp1572 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=FxIoQueue::SetTransitionFromEmpty
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0a20494f-b9d5-3e29-f2e4-028226f4575b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueue_cpp5849 102 "%0Waiting for all threads to stop dispatching requests so that WDFQUEUE 0x%10!p! can be powered off" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::StartPowerTransitionOff FUNC=FxIoQueue::StartPowerTransitionOff
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp6008 103 "%0Waiting for all inflight requests to be acknowledged  on WDFQUEUE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::StopProcessingForPower FUNC=FxIoQueue::StopProcessingForPower
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp4549 80 "%0WDFREQUEST 0x%10!p! is already on list, FxRequest::m_ListEntry is busy!, WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyCancelForDriver FUNC=FxIoQueue::Vf_VerifyCancelForDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp4541 79 "%0WDFREQUEST 0x%10!p! was cancelled in driver for WDFQUEUE 0x%11!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyCancelForDriver FUNC=FxIoQueue::Vf_VerifyCancelForDriver
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp1725 38 "%0Cannot forward a request to a different WDFDEVICE 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyForwardRequest FUNC=FxIoQueue::Vf_VerifyForwardRequest
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp1715 37 "%0Cannot forward a request to the same WDFQUEUE 0x%10!p! %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyForwardRequest FUNC=FxIoQueue::Vf_VerifyForwardRequest
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp1589 36 "%0WdfPdoInitSetForwardRequestToParent not called on WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyForwardRequestToParent FUNC=FxIoQueue::Vf_VerifyForwardRequestToParent
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp1556 35 "%0Cannot forward reserved WDFREQUEST 0x%10!p! to a parent WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyForwardRequestToParent FUNC=FxIoQueue::Vf_VerifyForwardRequestToParent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxioqueue_cpp1544 34 "%0Cannot forward a request to a different WDFDEVICE 0x%10!p! which is not the parent, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyForwardRequestToParent FUNC=FxIoQueue::Vf_VerifyForwardRequestToParent
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp1535 33 "%0Cannot forward a request to the same WDFQUEUE 0x%10!p! %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyForwardRequestToParent FUNC=FxIoQueue::Vf_VerifyForwardRequestToParent
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp1512 32 "%0No parent device for WDFQUEUE 0x%10!p! Device, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyForwardRequestToParent FUNC=FxIoQueue::Vf_VerifyForwardRequestToParent
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp952 25 "%0Driver called WdfIoQueueRetrieveNextRequest on a sequential WDFQUEUE 0x%10!p! with no outstanding requests. This can cause a race with automatically dispatched requests. Call WdfIoQueueRetrieveNextRequest before completing the current request(s)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyGetRequestUpdateFlags FUNC=FxIoQueue::Vf_VerifyGetRequestUpdateFlags
{
Arg, ItemPtr -- 10
}
#typev fxioqueue_cpp927 24 "%0WdfIoQueueRetrieveFoundRequest is allowed only on a manual queue 0x%10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyGetRequestUpdateFlags FUNC=FxIoQueue::Vf_VerifyGetRequestUpdateFlags
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxioqueue_cpp4523 78 "%0WDFREQUEST 0x%10!p! is on a cancellation list for WDFQUEUE 0x%11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Vf_VerifyValidateCompletedRequest FUNC=FxIoQueue::Vf_VerifyValidateCompletedRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxioqueue_cpp197 11 "%0Could not configure queue: %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::_Create FUNC=FxIoQueue::_Create
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueue_cpp183 10 "%0Memory allocation failed: %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::_Create FUNC=FxIoQueue::_Create
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueue_cpp6311 105 "%0Dispatching requests from DPC" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::_DeferredDispatchDpcThunk FUNC=FxIoQueue::_DeferredDispatchDpcThunk
{
}
#typev fxioqueue_cpp6280 104 "%0Dispatching requests from worker thread" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::_DeferredDispatchThreadThunk FUNC=FxIoQueue::_DeferredDispatchThreadThunk
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b13234fa-c74e-3a8b-bfbd-689137af2e1e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxioqueuekm_cpp506 13 "%0Could not allocate memory for forward progress context %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::AssignForwardProgressPolicy FUNC=FxIoQueue::AssignForwardProgressPolicy
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueuekm_cpp490 12 "%0Setting Forward progress policy on non-top level queue %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::AssignForwardProgressPolicy FUNC=FxIoQueue::AssignForwardProgressPolicy
{
Arg, ItemNTSTATUS -- 10
}
#typev fxioqueuekm_cpp387 10 "%0EvtIoExamineIrp callback on WDFQUEUE %10!p! returned an invalid action %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetReservedRequest FUNC=FxIoQueue::GetReservedRequest
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxioqueuekm_cpp408 11 "%0Forward action on WDFQUEUE %10!p! says that framework should fail the Irp %11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetReservedRequest FUNC=FxIoQueue::GetReservedRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
128d91ba-0687-3f86-4881-82106050b60c km // SRC=Unknown_cxx00 MJ= MN=
#typev fxdmaenablerapi_cpp595 27 "%0ConfigDirection 0x%10!x! is an invalid value, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerConfigureSystemProfile FUNC=imp_WdfDmaEnablerConfigureSystemProfile
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmaenablerapi_cpp583 26 "%0ProfileConfig (%10!p!) may not have NULL DmaDescriptor, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerConfigureSystemProfile FUNC=imp_WdfDmaEnablerConfigureSystemProfile
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmaenablerapi_cpp570 25 "%0WDF_DMA_SYSTEM_PROFILE_CONFIG Size 0x%10!x!, expected 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerConfigureSystemProfile FUNC=imp_WdfDmaEnablerConfigureSystemProfile
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmaenablerapi_cpp559 24 "%0ProfileConfig must be non-null, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerConfigureSystemProfile FUNC=imp_WdfDmaEnablerConfigureSystemProfile
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdmaenablerapi_cpp298 19 "%0Could not allocate memory for a WDFDMAENABLER, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerCreate FUNC=imp_WdfDmaEnablerCreate
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdmaenablerapi_cpp252 16 "%0Config MaximumLength of zero is invalid, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerCreate FUNC=imp_WdfDmaEnablerCreate
{
Arg, ItemNTSTATUS -- 10
}
#typev fxdmaenablerapi_cpp242 15 "%0DMA Profile value %10!d! is unknown, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerCreate FUNC=imp_WdfDmaEnablerCreate
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmaenablerapi_cpp182 13 "%0WDF_DMA_ENABLER_CONFIG Size 0x%10!x!, expected 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerCreate FUNC=imp_WdfDmaEnablerCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxdmaenablerapi_cpp152 12 "%0For drivers bound to version <= 1.9 WdfDmaEnablerCreate uses WDFDEVICE as the parent object for the dma enabler object. Attributes->ParentObject 0x%10!p!, which is different from WDFDEVICE 0x%11!p!, gets ignored. Please note that DmaEnabler would be disposed only when device is disposed." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerCreate FUNC=imp_WdfDmaEnablerCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxdmaenablerapi_cpp128 11 "%0Attributes->ParentObject 0x%10!p! ancestor is WDFDEVICE %11!p!, but not the same WDFDEVICE 0x%12!p! passed to WdfDmaEnablerCreate, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerCreate FUNC=imp_WdfDmaEnablerCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxdmaenablerapi_cpp117 10 "%0Attributes->ParentObject 0x%10!p! must have WDFDEVICE as an eventual ancestor, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerCreate FUNC=imp_WdfDmaEnablerCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxdmaenablerapi_cpp471 22 "%0Invalid value for Dma direction %10!d!, %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerGetFragmentLength FUNC=imp_WdfDmaEnablerGetFragmentLength
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}
#typev fxdmaenablerapi_cpp417 21 "%0Cannot set MaximumElements to %10!Iu! on WDFDMAENABLER %11!p!, restricting to 0x%12!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerSetMaximumScatterGatherElements FUNC=imp_WdfDmaEnablerSetMaximumScatterGatherElements
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}
#typev fxdmaenablerapi_cpp409 20 "%0Cannot set MaximumElements of zero on WDFDMAENABLER %10!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerSetMaximumScatterGatherElements FUNC=imp_WdfDmaEnablerSetMaximumScatterGatherElements
{
Arg, ItemPtr -- 10
}
#typev fxdmaenablerapi_cpp517 23 "%0Invalid value for Dma direction %10!d!, %11!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerWdmGetDmaAdapter FUNC=imp_WdfDmaEnablerWdmGetDmaAdapter
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
6324b102-b43f-3a25-56ad-e6548400c390 km // SRC=Unknown_cxx00 MJ= MN=
#typev fxcommonbufferapi_cpp89 10 "%0Length is 0, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreate FUNC=imp_WdfCommonBufferCreate
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcommonbufferapi_cpp111 11 "%0Could not allocate memory for a WDFCOMMONBUFFER, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreate FUNC=imp_WdfCommonBufferCreate
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcommonbufferapi_cpp263 16 "%0Could not allocate memory for a WDFCOMMONBUFFER, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreateWithConfig FUNC=imp_WdfCommonBufferCreateWithConfig
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcommonbufferapi_cpp244 15 "%0Length is 0, %10!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreateWithConfig FUNC=imp_WdfCommonBufferCreateWithConfig
{
Arg, ItemNTSTATUS -- 10
}
#typev fxcommonbufferapi_cpp198 12 "%0WDF_COMMON_BUFFER_CONFIG Size 0x%10!x!, expected 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreateWithConfig FUNC=imp_WdfCommonBufferCreateWithConfig
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxcommonbufferapi_cpp213 13 "%0WDF V35+ Config parameters are supported only for V3 DMA in WdfDmaEnablerCreate" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreateWithConfig FUNC=imp_WdfCommonBufferCreateWithConfig
{
}
#typev fxcommonbufferapi_cpp224 14 "%0WDF_COMMON_BUFFER_CONFIG Size 0x%10!x!, expected 0x%11!x!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreateWithConfig FUNC=imp_WdfCommonBufferCreateWithConfig
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
15474c83-4f1d-32f0-8ae3-58bf168cdf39 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxinterruptapi_cpp627 28 "%0Can't synchronize when WDFINTERRUPT 0x%10!p! isn't connected" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::AcquireLock FUNC=imp_WdfInterruptAcquireLock
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxinterruptapi_cpp614 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfInterruptAcquireLock
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
26ebabbe-56a2-303f-e483-c04cc4793c4f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxinterruptapi_cpp445 13 "%0Not NULL InterruptRaw or InterruptTranslated in WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp445 14 "%0CanWakeDevice set in WDF_INTERRUPT_CONFIG structure  0x%10!p!during EvtDriverDeviceAdd, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp445 17 "%0Driver cannot specify an interrupt as CanWakeDevice if the CM_RESOURCE_INTERRUPT_WAKE_HINT is not present.WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp445 18 "%0Driver cannot specify an interrupt as CanWakeDevice if it is not power policy powner. WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp445 19 "%0Driver cannot specify an interrupt as CanWakeDevice for a PDO WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp445 20 "%0Driver can provide either EvtInterruptDpc or EvtInterruptWorkItem callback but not both. WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp445 21 "%0Driver cannot specify WaitLock when handling interrupts at DIRQL, WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp445 22 "%0CanWakeDevice set in WDF_INTERRUPT_CONFIG structure for aninterrupt not marked as passive 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp445 24 "%0Driver cannot specify SpinLock when handling interrupts at passive-level, WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp266 15 "%0NULL InterruptRaw or InterruptTranslated in WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp281 16 "%0Driver cannot specify ShareVector different from WdfUseDefault in EvtDevicePrepareHardware callback,WDF_INTERRUPT_CONFIG structure 0x%10!p! passed, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp208 12 "%0WDFINTERRUPTs can only be created during: (1) EvtDriverDeviceAdd when the WDFDEVICE %10!p! is initially created, or (2) EvtDevicePrepareHardware, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxinterruptapi_cpp170 11 "%0NULL EvtInterruptIsr in WDF_INTERRUPT_CONFIG structure 0x%10!p! passed" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemPtr -- 10
}
#typev fxinterruptapi_cpp116 10 "%0WDF_INTERRUPT_CONFIG size 0x%10!x! incorrect, expected 0x%11!x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate FUNC=imp_WdfInterruptCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxinterruptapi_cpp895 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfInterruptGetDevice
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
26ebabbe-56a2-303f-e483-c04cc4793c4f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxinterruptapi_cpp853 25 "%0WDF_INTERRUPT_INFO %10!p! Size %11!d! invalid, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptGetInfo FUNC=imp_WdfInterruptGetInfo
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxinterruptapi_cpp478 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfInterruptQueueDpcForIsr
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
15474c83-4f1d-32f0-8ae3-58bf168cdf39 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxinterruptapi_cpp674 29 "%0Can't synchronize when WDFINTERRUPT 0x%10!p! isn't connected" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::ReleaseLock FUNC=imp_WdfInterruptReleaseLock
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxinterruptapi_cpp661 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfInterruptReleaseLock
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
26ebabbe-56a2-303f-e483-c04cc4793c4f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxinterruptapi_cpp1035 29 "%0Policy %10!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetExtendedPolicy FUNC=imp_WdfInterruptSetExtendedPolicy
{
Arg, ItemLong -- 10
}
#typev fxinterruptapi_cpp1043 30 "%0Priority %10!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetExtendedPolicy FUNC=imp_WdfInterruptSetExtendedPolicy
{
Arg, ItemLong -- 10
}
#typev fxinterruptapi_cpp1052 31 "%0TargetProcessorSet's reserved fields are not zero" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetExtendedPolicy FUNC=imp_WdfInterruptSetExtendedPolicy
{
}
#typev fxinterruptapi_cpp1019 28 "%0WDF_INTERRUPT_EXTENDED_POLICY %10!p! Size %11!d! invalid, expected %12!d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetExtendedPolicy FUNC=imp_WdfInterruptSetExtendedPolicy
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
}
#typev fxinterruptapi_cpp951 26 "%0Policy %10!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetPolicy FUNC=imp_WdfInterruptSetPolicy
{
Arg, ItemLong -- 10
}
#typev fxinterruptapi_cpp959 27 "%0Priority %10!d! is out of range" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetPolicy FUNC=imp_WdfInterruptSetPolicy
{
Arg, ItemLong -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxinterruptapi_cpp565 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=imp_WdfInterruptSynchronize
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
26ebabbe-56a2-303f-e483-c04cc4793c4f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxinterruptapi_cpp1106 32 "%0WDFINTERRUPT %10!p! is handled at DIRQL. This API is not available for DIQRL interrupt handling." //   GLOBALS=pFxInterrupt->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptTryToAcquireLock FUNC=imp_WdfInterruptTryToAcquireLock
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
75f1d961-d7dd-388b-2414-f042adcbe366 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgpdo_cpp1837 25 "%0Could not allocate ejection device list for PDO WDFDEVICE %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::AddEjectionDevice FUNC=FxPkgPdo::AddEjectionDevice
{
Arg, ItemPtr -- 10
}
#typev fxpkgpdo_cpp246 10 "%0DeviceInit %10!p! could not allocate string for device IDs (length %11!I64d!), %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::Initialize FUNC=FxPkgPdo::Initialize
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpdo_cpp1108 16 "%0waiting on event %10!p! for device to finish scanning" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPdo::PnpEventEjectHardwareOverload FUNC=FxPkgPdo::PnpEventEjectHardwareOverload
{
Arg, ItemPtr -- 10
}
#typev fxpkgpdo_cpp1092 15 "%0Failed to mark PDO WDFDEVICE %10!p! !devobj %11!p! missing after eject %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::PnpEventEjectHardwareOverload FUNC=FxPkgPdo::PnpEventEjectHardwareOverload
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpdo_cpp1086 14 "%0PDO WDFDEVICE %10!p! !devobj %11!p! marked missing as a result of eject" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPdo::PnpEventEjectHardwareOverload FUNC=FxPkgPdo::PnpEventEjectHardwareOverload
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpdo_cpp1130 18 "%0EvtDeviceEject returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgPdo::PnpEventEjectHardwareOverload FUNC=FxPkgPdo::PnpEventEjectHardwareOverload
{
}
#typev fxpkgpdo_cpp1125 17 "%0Eject failed since driver's EvtDeviceEject returned %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::PnpEventEjectHardwareOverload FUNC=FxPkgPdo::PnpEventEjectHardwareOverload
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgpdo_cpp1246 19 "%0Removing entry reference %10!p! on FxPkgPnp %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPdo::PnpEventPdoRemovedOverload FUNC=FxPkgPdo::PnpEventPdoRemovedOverload
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpdo_cpp509 11 "%0WDFDEVICE %10!p! failing TargetDeviceRelations, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::PnpQueryDeviceRelations FUNC=FxPkgPdo::PnpQueryDeviceRelations
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpdo_cpp954 12 "%0WDFDEVICE %10!p! failing Query Device Text, type %11!d!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryDeviceText FUNC=FxPkgPdo::_PnpQueryDeviceText
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpdo_cpp1475 20 "%0WDFDEVICE %10!p! does not have a string for PnP query IdType %11!s!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryId FUNC=FxPkgPdo::_PnpQueryId
{
Arg, ItemPtr -- 10
Arg, ItemEnum(BUS_QUERY_ID_TYPE) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpdo_cpp1466 21 "%0WDFDEVICE %10!p! could not alloc string for PnP query IdType %11!s!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryId FUNC=FxPkgPdo::_PnpQueryId
{
Arg, ItemPtr -- 10
Arg, ItemEnum(BUS_QUERY_ID_TYPE) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpdo_cpp1518 24 "%0Exiting QueryPnpDeviceState handler" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryPnpDeviceState FUNC=FxPkgPdo::_PnpQueryPnpDeviceState
{
}
#typev fxpkgpdo_cpp1510 23 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! returning PNP_DEVICE_STATE 0x%12!d! IRP 0x%13!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryPnpDeviceState FUNC=FxPkgPdo::_PnpQueryPnpDeviceState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
}
#typev fxpkgpdo_cpp1502 22 "%0Entering QueryPnpDeviceState handler" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryPnpDeviceState FUNC=FxPkgPdo::_PnpQueryPnpDeviceState
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
aa18f326-ea6d-36c2-39cc-2bef74b96e74 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev pnpstatemachine_cpp1185 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering PnP State %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::PnpEnterNewState FUNC=FxPkgPnp::PnpEnterNewState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 13
}
#typev pnpstatemachine_cpp1451 15 "%0could not query caps for stack, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventHardwareAvailable FUNC=FxPkgPnp::PnpEventHardwareAvailable
{
Arg, ItemNTSTATUS -- 10
}
#typev pnpstatemachine_cpp1577 17 "%0EvtDeviceQueryRemove returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveAskDriver FUNC=FxPkgPnp::PnpEventQueryRemoveAskDriver
{
}
#typev pnpstatemachine_cpp1572 16 "%0EvtDeviceQueryRemove failed, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveAskDriver FUNC=FxPkgPnp::PnpEventQueryRemoveAskDriver
{
Arg, ItemNTSTATUS -- 10
}
#typev pnpstatemachine_cpp1635 18 "%0StopIdle on WDFDEVICE %10!p! failed, %11!s!, failing query remove" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveEnsureDeviceAwake FUNC=FxPkgPnp::PnpEventQueryRemoveEnsureDeviceAwake
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev pnpstatemachine_cpp1714 20 "%0Failing QueryRemoveDevice due to open special file counts (paging %10!d!, hiber %11!d!, dump %12!d!, boot %13!d!, guest assigned %14!d!)" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveStaticCheck FUNC=FxPkgPnp::PnpEventQueryRemoveStaticCheck
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
}
#typev pnpstatemachine_cpp1705 19 "%0Failing QueryRemoveDevice because the driver has indicated that it cannot be stopped, count %10!d!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveStaticCheck FUNC=FxPkgPnp::PnpEventQueryRemoveStaticCheck
{
Arg, ItemLong -- 10
}
#typev pnpstatemachine_cpp1824 22 "%0EvtDeviceQueryStop returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopAskDriver FUNC=FxPkgPnp::PnpEventQueryStopAskDriver
{
}
#typev pnpstatemachine_cpp1819 21 "%0EvtDeviceQueryStop failed, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopAskDriver FUNC=FxPkgPnp::PnpEventQueryStopAskDriver
{
Arg, ItemNTSTATUS -- 10
}
#typev pnpstatemachine_cpp1884 23 "%0StopIdle on WDFDEVICE %10!p! failed, %11!s!, failing query stop" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopEnsureDeviceAwake FUNC=FxPkgPnp::PnpEventQueryStopEnsureDeviceAwake
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev pnpstatemachine_cpp1961 25 "%0Failing QueryStopDevice due to open special file counts (paging %10!d!, hiber %11!d!, dump %12!d!, boot %13!d!, guest assigned %14!d!)" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopStaticCheck FUNC=FxPkgPnp::PnpEventQueryStopStaticCheck
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
}
#typev pnpstatemachine_cpp1952 24 "%0Failing QueryStopDevice because the driver has indicated that it cannot be stopped, count %10!d!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopStaticCheck FUNC=FxPkgPnp::PnpEventQueryStopStaticCheck
{
Arg, ItemLong -- 10
}
#typev pnpstatemachine_cpp4009 32 "%0Not enough interrupt objects created by WDFDEVICE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemPtr -- 10
}
#typev pnpstatemachine_cpp3966 31 "%0Could not allocate translated resource list for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev pnpstatemachine_cpp3957 30 "%0Could not allocate raw resource list for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev pnpstatemachine_cpp4108 33 "%0Exiting PnpMatchResources %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources FUNC=FxPkgPnp::PnpMatchResources
{
Arg, ItemNTSTATUS -- 10
}
#typev pnpstatemachine_cpp3937 29 "%0Entering PnpMatchResources" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources FUNC=FxPkgPnp::PnpMatchResources
{
}
#typev pnpstatemachine_cpp3602 26 "%0EvtDevicePrepareHardware returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpPrepareHardware FUNC=FxPkgPnp::PnpPrepareHardware
{
}
#typev pnpstatemachine_cpp852 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pnp state %12!s! dropping event %13!s! because of a full queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEvent FUNC=FxPkgPnp::PnpProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
}
#typev pnpstatemachine_cpp871 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pnp state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEvent FUNC=FxPkgPnp::PnpProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
}
#typev pnpstatemachine_cpp1105 13 "%0WDFDEVICE 0x%10!p! !devobj %11!p! current state %12!s!, policy event %13!s! is not a known dropped event, known dropped events are %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEventInner FUNC=FxPkgPnp::PnpProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
Arg, ItemEnum(FxPnpEvent) -- 14
}
#typev pnpstatemachine_cpp1093 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pnp state %12!s! dropping event %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEventInner FUNC=FxPkgPnp::PnpProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
Arg, ItemEnum(FxPnpEvent) -- 13
}
#typev pnpstatemachine_cpp3671 28 "%0EvtDeviceReleaseHardware returned an invalid status STATUS_NOT_SUPPORTED" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpReleaseHardware FUNC=FxPkgPnp::PnpReleaseHardware
{
}
#typev pnpstatemachine_cpp4341 37 "%0The raw PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, driver cannot change the assigned PnP resources, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpstatemachine_cpp4326 36 "%0The translated PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, driver cannot change the assigned PnP resources, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpstatemachine_cpp4309 35 "%0The raw PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpstatemachine_cpp4295 34 "%0The translated PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not valid, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateCmResource FUNC=FxPkgPnp::ValidateCmResource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpstatemachine_cpp4481 42 "%0The PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! was already used to create a passive level interrupt 0x%11!p!, WDFDEVICE 0x%12!p! and is now being used to create a wakable interrupt. A functional passive level interrupt can not be shared with wakable interrupt" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev pnpstatemachine_cpp4467 41 "%0The PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! was already used to create a wakable interrupt 0x%11!p!, WDFDEVICE 0x%12!p! and any functional interrupt being shared with wakable interrupt can not use passive level handling" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev pnpstatemachine_cpp4499 43 "%0The PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! was already used to create interrupt 0x%11!p!, WDFDEVICE 0x%12!p!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev pnpstatemachine_cpp4516 44 "%0All the MSI 2.2 interrupts for PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! are already created, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpstatemachine_cpp4453 40 "%0Multi-message MSI 2.2 interrupts must be created sequentially, WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev pnpstatemachine_cpp4422 39 "%0The translated PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not an interrupt resource, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpstatemachine_cpp4411 38 "%0The raw PCM_PARTIAL_RESOURCE_DESCRIPTOR 0x%10!p! is not an interrupt resource, WDFDEVICE 0x%11!p!, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::ValidateInterruptResourceCm FUNC=FxPkgPnp::ValidateInterruptResourceCm
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
d0a43776-3a8f-38b0-41ac-66348cfd223b WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev pnpcallbacks_cpp97 10 "%0EvtDeviceD0Entry WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0Entry::InvokeClient FUNC=FxPnpDeviceD0Entry::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev pnpcallbacks_cpp289 13 "%0EvtDeviceD0Exit WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0Exit::InvokeClient FUNC=FxPnpDeviceD0Exit::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev pnpcallbacks_cpp451 16 "%0EvtDevicePrepareHardware WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDevicePrepareHardware::InvokeClient FUNC=FxPnpDevicePrepareHardware::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpcallbacks_cpp561 18 "%0EvtDeviceReleaseHardware WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceReleaseHardware::InvokeClient FUNC=FxPnpDeviceReleaseHardware::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpcallbacks_cpp805 20 "%0EvtDeviceSelfManagedIoInit WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoInit::InvokeClient FUNC=FxPnpDeviceSelfManagedIoInit::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpcallbacks_cpp1045 25 "%0EvtDeviceSelfManagedIoRestart WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoRestart::InvokeClient FUNC=FxPnpDeviceSelfManagedIoRestart::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpcallbacks_cpp916 22 "%0EvtDeviceSelfManagedIoInit WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoSuspend::InvokeClient FUNC=FxPnpDeviceSelfManagedIoSuspend::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpcallbacks_cpp1499 28 "%0EvtDeviceArmWakeFromS0 WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerDeviceArmWakeFromS0::InvokeClient FUNC=FxPowerDeviceArmWakeFromS0::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpcallbacks_cpp1648 30 "%0EvtDeviceArmWakeFromSxWithReason WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerDeviceArmWakeFromSx::InvokeClient FUNC=FxPowerDeviceArmWakeFromSx::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpcallbacks_cpp1648 31 "%0EvtDeviceArmWakeFromSx WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerDeviceArmWakeFromSx::InvokeClient FUNC=FxPowerDeviceArmWakeFromSx::InvokeClient
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpcallbacks_cpp140 11 "%0EvtCxDevice%10!s!D0Entry WDFDEVICE 0x%11!p! !devobj 0x%12!p!, old state %13!s! failed, %14!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0Entry::InvokeCxCallback FUNC=FxPnpDeviceD0Entry::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 13
Arg, ItemNTSTATUS -- 14
}
#typev pnpcallbacks_cpp220 12 "%0EvtCxDevice%10!s!D0EntryPostHardwareEnabled WDFDEVICE 0x%11!p! !devobj 0x%12!p!, old state %13!s! failed, %14!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0EntryPostHwEnabled::InvokeCxCallback FUNC=FxPnpDeviceD0EntryPostHwEnabled::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 13
Arg, ItemNTSTATUS -- 14
}
#typev pnpcallbacks_cpp332 14 "%0EvtCxDevice%10!s!D0Exit WDFDEVICE 0x%11!p! !devobj 0x%12!p!, new state %13!s! failed, %14!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0Exit::InvokeCxCallback FUNC=FxPnpDeviceD0Exit::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 13
Arg, ItemNTSTATUS -- 14
}
#typev pnpcallbacks_cpp394 15 "%0EvtCxDevice%10!s!D0ExitPreHardwareDisabled WDFDEVICE 0x%11!p! !devobj 0x%12!p!, new state %13!s! failed, %14!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0ExitPreHwDisabled::InvokeCxCallback FUNC=FxPnpDeviceD0ExitPreHwDisabled::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 13
Arg, ItemNTSTATUS -- 14
}
#typev pnpcallbacks_cpp492 17 "%0EvtCxDevice%10!s!PrepareHardware WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDevicePrepareHardware::InvokeCxCallback FUNC=FxPnpDevicePrepareHardware::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev pnpcallbacks_cpp602 19 "%0EvtCxDevice%10!s!ReleaseHardware WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceReleaseHardware::InvokeCxCallback FUNC=FxPnpDeviceReleaseHardware::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev pnpcallbacks_cpp847 21 "%0EvtCxDevice%10!s!SelfManagedIoInit WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoInit::InvokeCxCallback FUNC=FxPnpDeviceSelfManagedIoInit::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev pnpcallbacks_cpp1135 27 "%0EvtCxDevice%10!s!SelfManagedIoRestartEx WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoRestart::InvokeCxCallback FUNC=FxPnpDeviceSelfManagedIoRestart::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev pnpcallbacks_cpp1135 26 "%0EvtCxDevice%10!s!SelfManagedIoRestart WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoRestart::InvokeCxCallback FUNC=FxPnpDeviceSelfManagedIoRestart::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev pnpcallbacks_cpp1003 24 "%0EvtCxDevice%10!s!SelfManagedIoSuspendEx WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoSuspend::InvokeCxCallback FUNC=FxPnpDeviceSelfManagedIoSuspend::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev pnpcallbacks_cpp1003 23 "%0EvtCxDevice%10!s!SelfManagedIoSuspend WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPnpDeviceSelfManagedIoSuspend::InvokeCxCallback FUNC=FxPnpDeviceSelfManagedIoSuspend::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev pnpcallbacks_cpp1541 29 "%0EvtCxDevice%10!s!ArmWakeFromS0 WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerDeviceArmWakeFromS0::InvokeCxCallback FUNC=FxPowerDeviceArmWakeFromS0::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev pnpcallbacks_cpp1722 33 "%0EvtCxDevice%10!s!ArmWakeFromSx WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerDeviceArmWakeFromSx::InvokeCxCallback FUNC=FxPowerDeviceArmWakeFromSx::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev pnpcallbacks_cpp1722 32 "%0EvtCxDevice%10!s!ArmWakeFromSxWithReason WDFDEVICE 0x%11!p! !devobj 0x%12!p! failed, %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerDeviceArmWakeFromSx::InvokeCxCallback FUNC=FxPowerDeviceArmWakeFromSx::InvokeCxCallback
{
Arg, ItemString -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
48df17c7-8a07-358f-fffa-48046a1a7a6a WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev powerstatemachine_cpp5229 34 "%0Force disconnecting interrupts on !devobj 0x%10!p!, WDFDEVICE %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DisconnectInterruptNP FUNC=FxPkgPnp::DisconnectInterruptNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev powerstatemachine_cpp5772 36 "%0Interrupt(s) disconnect on WDFDEVICE %10!p! failed, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerConnectInterruptFailed FUNC=FxPkgPnp::PowerConnectInterruptFailed
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerstatemachine_cpp2333 15 "%0EvtDeviceD0EntryPostInterruptsEnabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerD0StartingConnectInterrupt FUNC=FxPkgPnp::PowerD0StartingConnectInterrupt
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp2407 16 "%0EvtDeviceD0EntryPostHardwareEnabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerD0StartingPostHardwareEnabled FUNC=FxPkgPnp::PowerD0StartingPostHardwareEnabled
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp1650 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering Power State %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::PowerEnterNewState FUNC=FxPkgPnp::PowerEnterNewState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 13
}
#typev powerstatemachine_cpp2608 19 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoD3Stopped FUNC=FxPkgPnp::PowerGotoD3Stopped
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp2587 18 "%0EvtDeviceD0ExitPreHardwareDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoD3Stopped FUNC=FxPkgPnp::PowerGotoD3Stopped
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp2570 17 "%0EvtDeviceSelfManagedIoStop failed %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoD3Stopped FUNC=FxPkgPnp::PowerGotoD3Stopped
{
Arg, ItemNTSTATUS -- 10
}
#typev powerstatemachine_cpp2911 21 "%0EvtDeviceSelfManagedIoStop failed %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDx FUNC=FxPkgPnp::PowerGotoDx
{
Arg, ItemNTSTATUS -- 10
}
#typev powerstatemachine_cpp3031 23 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStoppedCommon FUNC=FxPkgPnp::PowerGotoDxIoStoppedCommon
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp3011 22 "%0EvtDeviceD0ExitPreHardwareDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, new state %12!s! failed, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStoppedCommon FUNC=FxPkgPnp::PowerGotoDxIoStoppedCommon
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp4283 32 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerInitialDmaEnableFailed FUNC=FxPkgPnp::PowerInitialDmaEnableFailed
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp4323 33 "%0EvtDeviceD0ExitPreHardwareDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerInitialPostHardwareEnabledFailed FUNC=FxPkgPnp::PowerInitialPostHardwareEnabledFailed
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp5438 35 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! WW !irp 0x%12!p! is a source of wake" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerMakeWakeRequestNonCancelable FUNC=FxPkgPnp::PowerMakeWakeRequestNonCancelable
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev powerstatemachine_cpp1305 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because the Event is already enqueued." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEvent FUNC=FxPkgPnp::PowerProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
}
#typev powerstatemachine_cpp1330 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEvent FUNC=FxPkgPnp::PowerProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
}
#typev powerstatemachine_cpp1572 13 "%0WDFDEVICE %10!p! !devobj 0x%11!p! current state %12!s! event %13!s! is not a known dropped event, known dropped events are %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEventInner FUNC=FxPkgPnp::PowerProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
Arg, ItemEnum(FxPowerEvent) -- 14
}
#typev powerstatemachine_cpp1557 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current power state %12!s! dropping event %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEventInner FUNC=FxPkgPnp::PowerProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
Arg, ItemEnum(FxPowerEvent) -- 13
}
#typev powerstatemachine_cpp2711 20 "%0PowerReference on parent WDFDEVICE %10!p! for child WDFDEVICE %11!p! failed, %12!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerStartingChild FUNC=FxPkgPnp::PowerStartingChild
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev powerstatemachine_cpp3649 24 "%0EvtDeviceD0EntryPostInterruptsEnabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterrupt FUNC=FxPkgPnp::PowerWakingConnectInterrupt
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp3758 26 "%0Force disconnecting interupts on !devobj %10!p!, WDFDEVICE %11!p!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterruptFailedNP FUNC=FxPkgPnp::PowerWakingConnectInterruptFailedNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev powerstatemachine_cpp3698 25 "%0EvtDeviceD0EntryPostInterruptsEnabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterruptNP FUNC=FxPkgPnp::PowerWakingConnectInterruptNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp3884 27 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingDmaEnableFailed FUNC=FxPkgPnp::PowerWakingDmaEnableFailed
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp3927 28 "%0EvtDeviceD0ExitPreInterruptsDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingDmaEnableFailedNP FUNC=FxPkgPnp::PowerWakingDmaEnableFailedNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp3971 29 "%0EvtDeviceD0EntryPostHardwareEnabled WDFDEVICE 0x%10!p! !devobj 0x%11!p!, old state %12!s! failed, %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingPostHardwareEnabledCommon FUNC=FxPkgPnp::PowerWakingPostHardwareEnabledCommon
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp4064 30 "%0EvtDeviceD0ExitPreHardwareDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingPostHardwareEnabledFailed FUNC=FxPkgPnp::PowerWakingPostHardwareEnabledFailed
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerstatemachine_cpp4104 31 "%0EvtDeviceD0ExitPreHardwareDisabled WDFDEVICE 0x%10!p! !devobj 0x%11!p! new state %12!s! failed, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingPostHardwareEnabledFailedNP FUNC=FxPkgPnp::PowerWakingPostHardwareEnabledFailedNP
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
22fa85c4-839b-35a8-c56b-b59cbaa964f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgpnp_cpp5452 78 "%0Adding FxChildList %10!p!, WDFCHILDLIST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::AddChildList FUNC=FxPkgPnp::AddChildList
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpnp_cpp5251 74 "%0Could not allocate removal device list for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AddRemovalDevice FUNC=FxPkgPnp::AddRemovalDevice
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp5183 73 "%0Could not allocate usage device list for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AddUsageDevice FUNC=FxPkgPnp::AddUsageDevice
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp5431 77 "%0Could not allocate enum info for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AllocateEnumInfo FUNC=FxPkgPnp::AllocateEnumInfo
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp288 11 "%0Could not allocate workitem for SetDeviceFailedAttemptRestart: %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AllocateWorkItemForSetDeviceFailed FUNC=FxPkgPnp::AllocateWorkItemForSetDeviceFailed
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgpnp_cpp276 10 "%0Reusing previously created workitem forSetDeviceFailedAttemptRestart" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::AllocateWorkItemForSetDeviceFailed FUNC=FxPkgPnp::AllocateWorkItemForSetDeviceFailed
{
}
#typev fxpkgpnp_cpp6891 87 "%0WDFDEVICE %10!p! !devobj %11!p! Unable to compute length of buffer required to store driver's power framework settings. RtlULongAdd failed with %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AssignPowerFrameworkSettings FUNC=FxPkgPnp::AssignPowerFrameworkSettings
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpnp_cpp6891 86 "%0WDFDEVICE %10!p! !devobj %11!p! Unable to compute length of buffer required to store driver's component information. RtlULongAdd failed with %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AssignPowerFrameworkSettings FUNC=FxPkgPnp::AssignPowerFrameworkSettings
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpnp_cpp6891 85 "%0WDFDEVICE %10!p! !devobj %11!p! Unable to compute length of buffer required to store F-states. RtlULongMult failed with %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AssignPowerFrameworkSettings FUNC=FxPkgPnp::AssignPowerFrameworkSettings
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpnp_cpp6804 88 "%0WDFDEVICE %10!p! !devobj %11!p! Unable to allocate buffer required to store F-states. %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AssignPowerFrameworkSettings FUNC=FxPkgPnp::AssignPowerFrameworkSettings
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpnp_cpp2416 41 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for device power requirement state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpnp_cpp2396 40 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pwr state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpnp_cpp2382 39 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pwr pol state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpnp_cpp2361 38 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pnp state machine to finish" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines FUNC=FxPkgPnp::CleanupStateMachines
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpnp_cpp5154 72 "%0After:  special count %10!d!, flags 0x%11!x!, device %12!p! (WDFDEVICE %13!p!)" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::CommitUsageNotification FUNC=FxPkgPnp::CommitUsageNotification
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}
#typev fxpkgpnp_cpp734 19 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! IRP_MJ_POWER, %12!s! IRP 0x%13!p! for %14!s! (S%15!d!)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_WAIT_WAKE,IRP_MN_POWER_SEQUENCE,IRP_MN_SET_POWER,IRP_MN_QUERY_POWER) -- 12
Arg, ItemPtr -- 13
Arg, ItemEnum(_SYSTEM_POWER_STATE) -- 14
Arg, ItemLong -- 15
}
#typev fxpkgpnp_cpp748 20 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! IRP_MJ_POWER, %12!s! IRP 0x%13!p! for %14!s! (S%15!d!)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_WAIT_WAKE,IRP_MN_POWER_SEQUENCE,IRP_MN_SET_POWER,IRP_MN_QUERY_POWER) -- 12
Arg, ItemPtr -- 13
Arg, ItemEnum(_SYSTEM_POWER_STATE) -- 14
Arg, ItemLong -- 15
}
#typev fxpkgpnp_cpp709 18 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!, IRP_MJ_PNP, %12!s! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemPtr -- 13
}
#typev fxpkgpnp_cpp759 21 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! IRP_MJ_POWER, %12!s! IRP 0x%13!p! for %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_WAIT_WAKE,IRP_MN_POWER_SEQUENCE,IRP_MN_SET_POWER,IRP_MN_QUERY_POWER) -- 12
Arg, ItemPtr -- 13
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 14
}
#typev fxpkgpnp_cpp689 16 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!, IRP_MJ_PNP, %12!s! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemPtr -- 13
}
#typev fxpkgpnp_cpp771 22 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! IRP_MJ_POWER, %12!s! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_WAIT_WAKE,IRP_MN_POWER_SEQUENCE,IRP_MN_SET_POWER,IRP_MN_QUERY_POWER) -- 12
Arg, ItemPtr -- 13
}
#typev fxpkgpnp_cpp698 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!, IRP_MJ_PNP, %12!s! type %13!s! IRP 0x%14!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch FUNC=FxPkgPnp::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemEnum(_DEVICE_RELATION_TYPE) -- 13
Arg, ItemPtr -- 14
}
#typev fxpkgpnp_cpp2908 46 "%0already have a ww irp %10!p!, failing new ww irp %11!p! with %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpnp_cpp2790 45 "%0wait wake irp %10!p! already canceled" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
}
#typev fxpkgpnp_cpp2761 44 "%0Failing wait wake irp %10!p! with %11!s! because wait wake irp %12!p! already pended" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
Arg, ItemPtr -- 12
}
#typev fxpkgpnp_cpp2721 43 "%0Received wait wake power irp %10!p! on device %11!p!, but the irp was not requested by the device (the power policy owner)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake FUNC=FxPkgPnp::DispatchWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpnp_cpp1126 30 "%0WDFDEVICE %10!p! could not allocate PNP_BUS_INFORMATION string,  %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusInformation FUNC=FxPkgPnp::HandleQueryBusInformation
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp1078 29 "%0PDO %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
}
#typev fxpkgpnp_cpp1070 28 "%0PDO %10!p! PDO %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpnp_cpp1061 27 "%0PDO %10!p! PDO %11!p! PDO %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev fxpkgpnp_cpp975 23 "%0WDFDEVICE %10!p!, WDFCHILDLIST %11!p! returned %12!s! from processing bus relations" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpnp_cpp1051 26 "%0PDO %10!p! PDO %11!p! PDO %12!p! PDO %13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemPtr -- 13
}
#typev fxpkgpnp_cpp1039 25 "%0WDFDEVICE %10!p! returning %11!d! devices in relations %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
}
#typev fxpkgpnp_cpp1030 24 "%0WDFDEVICE %10!p!, returning %11!s! from processing bus relations" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations FUNC=FxPkgPnp::HandleQueryBusRelations
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp1261 31 "%0WDFDEVICE %10!p! could not allocate device relations for type %11!d! string,  %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryDeviceRelations FUNC=FxPkgPnp::HandleQueryDeviceRelations
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpnp_cpp6548 82 "%0WDFINTERRUPT %10!p! failed to connect, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::NotifyResourceObjectsD0 FUNC=FxPkgPnp::NotifyResourceObjectsD0
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp6605 83 "%0WDFINTERRUPT %10!p! failed to disconnect, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::NotifyResourceObjectsDx FUNC=FxPkgPnp::NotifyResourceObjectsDx
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp4403 65 "%0Usage type %10!x! not supported, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp4968 70 "%0Exit %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgpnp_cpp4574 69 "%0WDFDEVICE %10!p! could not allocate IRP to send usage notifications to related stacks, type %11!d!, inpath %12!d!, status %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxpkgpnp_cpp4486 68 "%0Exit %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgpnp_cpp4475 67 "%0WDFDEVICE %10!p! could not allocate PIRP for parent !devobj %11!p! to send usage notification type %12!d!, inpath %13!d!, %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxpkgpnp_cpp4422 66 "%0WDFDEVICE %10!p! !devobj %11!p! could not allocate workitem to send usage notification type %12!d!, inpath %13!d!, %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemNTSTATUS -- 14
}
#typev fxpkgpnp_cpp4368 64 "%0type %10!x!, in path %11!x!, can support paging %12!x!, dump file %13!x!, hiber file %14!x!, boot file %15!x!, guest assigned %16!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
Arg, ItemLong -- 15
Arg, ItemLong -- 16
}
#typev fxpkgpnp_cpp4359 63 "%0Entering DeviceUsageNotification handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
}
#typev fxpkgpnp_cpp1629 37 "%0WDFDEVICE %10!p! could not allocate IRP to send QI to parent !devobj %11!p!, %12!s!" //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=PnpPassThroughQI FUNC=PnpPassThroughQI
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpnp_cpp1365 33 "%0Power State Machine init failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgpnp_cpp1373 34 "%0Power Policy State Machine init failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgpnp_cpp1357 32 "%0PnP State Machine init failed, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgpnp_cpp6948 89 "%0SystemWake %10!s! and DeviceWake %11!s! power state reported in device capabilities do not support wake. Both the SystemWake and DeviceWake members should be nonzero to support wake-up on this system." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyGetDeviceDeepestDeviceWakeState FUNC=FxPkgPnp::PowerPolicyGetDeviceDeepestDeviceWakeState
{
Arg, ItemEnum(_SYSTEM_POWER_STATE) -- 10
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 11
}
#typev fxpkgpnp_cpp4059 61 "%0failing system query power because the device cannot wake the machine from S%10!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyHandleSystemQueryPower FUNC=FxPkgPnp::PowerPolicyHandleSystemQueryPower
{
Arg, ItemLong -- 10
}
#typev fxpkgpnp_cpp3582 57 "%0Invalid tri-state value for ExcludeD3Cold %10!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemLong -- 10
}
#typev fxpkgpnp_cpp3383 53 "%0If registry value WdfDirectedPowerTransitionEnable was present, it was not read because DDI WdfDeviceAssignS0IdleSettings was not called at PASSIVE_LEVEL" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
}
#typev fxpkgpnp_cpp3212 52 "%0Failed to initialize USB selective suspend %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgpnp_cpp3198 51 "%0DxState specified by driver %10!s! cannot be lighter than PowerDeviceD2 for USB selective suspend %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp3182 50 "%0DxState specified by driver %10!s! cannot be lighter than lightest available device wake state %11!s!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpnp_cpp3115 48 "%0If registry value WdfDefaultIdleInWorkingState was present, it was not read because DDI WdfDeviceAssignS0IdleSettings was not called at PASSIVE_LEVEL" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
}
#typev fxpkgpnp_cpp3430 54 "%0A previous call to assign S0-idle policy specified that the idle timeout %10!s! be determined by the power manager. This decision cannot be changed. %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemString -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp3463 55 "%0Driver turned off S0Idle optimization. Device will be powered up on resume from Sx even when it is idle" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
}
#typev fxpkgpnp_cpp3470 56 "%0Driver turned on S0Idle optimization. Device will remain powered off if idle when resuming from Sx" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
}
#typev fxpkgpnp_cpp3164 49 "%0DeviceWake power state reported in device capabilities %10!s! indicates that device can not signal a wake event, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings FUNC=FxPkgPnp::PowerPolicySetS0IdleSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp3722 60 "%0DxState specified by driver %10!s! cannot be lighter than lightest available device wake state %11!s!, %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetSxWakeSettings FUNC=FxPkgPnp::PowerPolicySetSxWakeSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgpnp_cpp3705 59 "%0DeviceWake power state reported in device capabilities %10!s! indicates that device can not signal a wake event, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetSxWakeSettings FUNC=FxPkgPnp::PowerPolicySetSxWakeSettings
{
Arg, ItemEnum(_DEVICE_POWER_STATE) -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnp_cpp3664 58 "%0If registry value WdfDefaultWakeFromSleepState was present, it was not read because DDI WdfDeviceAssignSxWakeSettings was not called at PASSIVE_LEVEL" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySetSxWakeSettings FUNC=FxPkgPnp::PowerPolicySetSxWakeSettings
{
}
#typev fxpkgpnp_cpp1493 35 "%0WDFDEVICE %10!p!, !devobj %11!p! processing delayed deletion from pnp state machine" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::ProcessDelayedDeletion FUNC=FxPkgPnp::ProcessDelayedDeletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpnp_cpp3054 47 "%0Failed to register WMI power GUID %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::RegisterPowerPolicyWmiInstance FUNC=FxPkgPnp::RegisterPowerPolicyWmiInstance
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgpnp_cpp5465 79 "%0Removing FxChildList %10!p!, WDFCHILDLIST %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::RemoveChildList FUNC=FxPkgPnp::RemoveChildList
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpnp_cpp6323 81 "%0Not saving wake settings for WDFDEVICE %10!p! due to system power transition" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::SaveState FUNC=FxPkgPnp::SaveState
{
Arg, ItemPtr -- 10
}
#typev fxpkgpnp_cpp5375 75 "%0A new state changing pnp irp %10!s! IRP %11!p! arrived while another pnp irp %12!s! IRP %13!p! is still pending WDFDEVICE %14!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SetPendingPnpIrp FUNC=FxPkgPnp::SetPendingPnpIrp
{
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 12
Arg, ItemPtr -- 13
Arg, ItemPtr -- 14
}
#typev fxpkgpnp_cpp1550 36 "%0Invalid special file type %10!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SetSpecialFileSupport FUNC=FxPkgPnp::SetSpecialFileSupport
{
Arg, ItemLong -- 10
}
#typev fxpkgpnp_cpp5007 71 "%0Before:  type %10!d!, in path %11!d!, special count %12!d!, flags 0x%13!x!, device %14!p! (WDFDEVICE %15!p!), is pageable capable %16!d!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::SetUsageNotificationFlags FUNC=FxPkgPnp::SetUsageNotificationFlags
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemPtr -- 14
Arg, ItemPtr -- 15
Arg, ItemLong -- 16
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a744b6ca-3235-3fa1-84f5-e51955d1b201 version // SRC=Unknown_cxx00 MJ= MN=
#typev FxResource_hpp428 12 "%0Failed to allocate FxCmResList, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxCmResList::_CreateAndInit FUNC=FxCmResList::_CreateAndInit
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
22fa85c4-839b-35a8-c56b-b59cbaa964f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgpnp_cpp2603 42 "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for remove event to finish processing" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PnpRemoveDevice FUNC=FxPkgPnp::_PnpRemoveDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkgpnp_cpp5582 80 "%0The driver failed to return from a callback routine in a reasonable period of time.  This prevented the machine from going to sleep or from hibernating.  The machine crashed because that was the best way to get data about the cause of the crash into a minidump file." //   GLOBALS=pDevice->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWatchdog::_WatchdogDpc FUNC=FxWatchdog::_WatchdogDpc
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev poweridlestatemachine_cpp1416 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=FxPowerIdleMachine::DisableTimer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}
#typev poweridlestatemachine_cpp1416 16 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! power idle state %12!s! dropping event %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=FxPowerIdleMachine::DisableTimer
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleEvents) -- 13
}
#typev poweridlestatemachine_cpp859 11 "%0WDFDEVICE %10!p! idle (in Dx) not sending io present event (already sent)" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::InDxIoIncrement FUNC=FxPowerIdleMachine::InDxIoIncrement
{
Arg, ItemPtr -- 10
}
#typev poweridlestatemachine_cpp1788 15 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! The device is being power-dereferenced without a matching power-reference. This could occur if driver incorrectly calls WdfDeviceResumeIdle without a matching call to WdfDeviceStopIdle." //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::IoDecrement FUNC=FxPowerIdleMachine::IoDecrement
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev poweridlestatemachine_cpp1804 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=FxPowerIdleMachine::IoDecrement
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}
#typev poweridlestatemachine_cpp1607 14 "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of invalid state , %12!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker FUNC=FxPowerIdleMachine::PowerReferenceWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev poweridlestatemachine_cpp1597 13 "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of power failure, %12!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker FUNC=FxPowerIdleMachine::PowerReferenceWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev poweridlestatemachine_cpp1566 12 "%0WDFDEVICE %10!p! in thread %11!p! waiting synchronously for Dx to D0 transition" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReferenceWorker FUNC=FxPowerIdleMachine::PowerReferenceWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev poweridlestatemachine_cpp1543 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=FxPowerIdleMachine::PowerReferenceWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}
#typev poweridlestatemachine_cpp1995 16 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! power idle state %12!s! dropping event %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=FxPowerIdleMachine::ProcessEventLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleEvents) -- 13
}
#typev poweridlestatemachine_cpp2009 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power idle state %12!s! from %13!s!" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPowerIdleMachine::ProcessEventLocked FUNC=FxPowerIdleMachine::ProcessEventLocked
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxPowerIdleStates) -- 12
Arg, ItemEnum(FxPowerIdleStates) -- 13
}
#typev poweridlestatemachine_cpp714 10 "%0WDFDEVICE %10!p! idle (in D0) not sending io present event (already sent)" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::TimedOutIoIncrement FUNC=FxPowerIdleMachine::TimedOutIoIncrement
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
1a48aa22-aa02-31a6-b786-02c899c07d00 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgfdo_cpp872 22 "%0Could not convert object to handle" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::CreateDefaultDeviceList FUNC=FxPkgFdo::CreateDefaultDeviceList
{
}
#typev fxpkgfdo_cpp604 16 "%0Exiting QueryCapabilities handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilities FUNC=FxPkgFdo::HandleQueryCapabilities
{
}
#typev fxpkgfdo_cpp576 15 "%0Entering QueryCapabilities handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilities FUNC=FxPkgFdo::HandleQueryCapabilities
{
}
#typev fxpkgfdo_cpp737 18 "%0Exiting QueryCapabilities completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilitiesCompletion FUNC=FxPkgFdo::HandleQueryCapabilitiesCompletion
{
}
#typev fxpkgfdo_cpp618 17 "%0Entering QueryCapabilities completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryCapabilitiesCompletion FUNC=FxPkgFdo::HandleQueryCapabilitiesCompletion
{
}
#typev fxpkgfdo_cpp784 21 "%0Exiting QueryPnpDeviceState completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion
{
}
#typev fxpkgfdo_cpp776 20 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! returning PNP_DEVICE_STATE 0x%12!d! IRP 0x%13!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
}
#typev fxpkgfdo_cpp766 19 "%0Entering QueryPnpDeviceState completion handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion FUNC=FxPkgFdo::HandleQueryPnpDeviceStateCompletion
{
}
#typev fxpkgfdo_cpp1069 23 "%0PNP start preprocessing failed with %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpSendStartDeviceDownTheStackOverload FUNC=FxPkgFdo::PnpSendStartDeviceDownTheStackOverload
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgfdo_cpp206 10 "%0Memory allocation failed: %10!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgFdo::_Create FUNC=FxPkgFdo::_Create
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgfdo_cpp391 12 "%0Exiting QueryDeviceRelations handler, status %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpQueryDeviceRelations FUNC=FxPkgFdo::_PnpQueryDeviceRelations
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgfdo_cpp391 11 "%0Entering QueryDeviceRelations handler, type %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpQueryDeviceRelations FUNC=FxPkgFdo::_PnpQueryDeviceRelations
{
Arg, ItemEnum(_DEVICE_RELATION_TYPE) -- 10
}
#typev fxpkgfdo_cpp520 14 "%0Exiting QueryInterface handler, %10!s!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryInterface FUNC=FxPkgFdo::_PnpQueryInterface
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgfdo_cpp515 13 "%0Entering QueryInterface handler" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryInterface FUNC=FxPkgFdo::_PnpQueryInterface
{
}
#typev fxpkgfdo_cpp1516 24 "%0PNP start failed with %10!s!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpStartDeviceCompletionRoutine FUNC=FxPkgFdo::_PnpStartDeviceCompletionRoutine
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a4235d2c-9e7d-39cd-b3e8-3d81d4cf826d WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgpnpkm_cpp118 10 "%0Not enough interrupt objects created for MSI by WDFDEVICE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::FilterResourceRequirements FUNC=FxPkgPnp::FilterResourceRequirements
{
Arg, ItemPtr -- 10
}
#typev fxpkgpnpkm_cpp118 11 "%0Not enough interrupt objects created for LBI by WDFDEVICE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::FilterResourceRequirements FUNC=FxPkgPnp::FilterResourceRequirements
{
Arg, ItemPtr -- 10
}
#typev fxpkgpnpkm_cpp630 15 "%0!devobj %10!p! declined to supply D3COLD_SUPPORT_INTERFACE" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::QueryForD3ColdInterface FUNC=FxPkgPnp::QueryForD3ColdInterface
{
Arg, ItemPtr -- 10
}
#typev fxpkgpnpkm_cpp607 14 "%0Failed to allocate IRP to get D3COLD_SUPPORT_INTERFACE from !devobj %10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::QueryForD3ColdInterface FUNC=FxPkgPnp::QueryForD3ColdInterface
{
Arg, ItemPtr -- 10
}
#typev fxpkgpnpkm_cpp889 20 "%0ZwPowerInformation failed, disabling Sleep Study for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SleepStudyEvaluateDripsConstraint FUNC=FxPkgPnp::SleepStudyEvaluateDripsConstraint
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnpkm_cpp914 21 "%0SleepstudyHelper_Initialize failed, disabling for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SleepStudyEvaluateDripsConstraint FUNC=FxPkgPnp::SleepStudyEvaluateDripsConstraint
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnpkm_cpp852 19 "%0MxQueryWnfStateData failed, disabling Sleep Study for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SleepStudyEvaluateDripsConstraint FUNC=FxPkgPnp::SleepStudyEvaluateDripsConstraint
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnpkm_cpp794 16 "%0ZwPowerInformation failed aquiring AOAC state, disabling Sleep Study for WDFDEVICE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SleepStudyEvaluateParticipation FUNC=FxPkgPnp::SleepStudyEvaluateParticipation
{
Arg, ItemPtr -- 10
}
#typev fxpkgpnpkm_cpp794 17 "%0Unable to allocate SLEEP_STUDY_INTERFACE, disabling Sleep Study for WDFDEVICE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SleepStudyEvaluateParticipation FUNC=FxPkgPnp::SleepStudyEvaluateParticipation
{
Arg, ItemPtr -- 10
}
#typev fxpkgpnpkm_cpp785 18 "%0MxSubscribeWnfStateChange failed, disabling Sleep Study for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SleepStudyEvaluateParticipation FUNC=FxPkgPnp::SleepStudyEvaluateParticipation
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnpkm_cpp1100 26 "%0WDFDEVICE 0x%10!p! failed call to SleepstudyHelper_AcquireComponentLock, Sleep Study reports are disabled for the driver power references, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::SleepStudyRegisterBlockingComponents FUNC=FxPkgPnp::SleepStudyRegisterBlockingComponents
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnpkm_cpp1081 25 "%0WDFDEVICE 0x%10!p! failed call to SleepstudyHelper_RegisterComponentEx, Sleep Study reports are disabled for the driver power references, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::SleepStudyRegisterBlockingComponents FUNC=FxPkgPnp::SleepStudyRegisterBlockingComponents
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnpkm_cpp1068 24 "%0Unable create Power Ref Friendly name, disabling Sleep Study for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SleepStudyRegisterBlockingComponents FUNC=FxPkgPnp::SleepStudyRegisterBlockingComponents
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkgpnpkm_cpp1055 23 "%0Unable to allocate friendly name, disabling Sleep Study for WDFDEVICE 0x%10!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SleepStudyRegisterBlockingComponents FUNC=FxPkgPnp::SleepStudyRegisterBlockingComponents
{
Arg, ItemPtr -- 10
}
#typev fxpkgpnpkm_cpp1038 22 "%0Unable to get pdo friendly name, disabling Sleep Study for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SleepStudyRegisterBlockingComponents FUNC=FxPkgPnp::SleepStudyRegisterBlockingComponents
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
ada24b5a-55c3-3af7-a280-90471ba338f5 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev cxpnppowercallbacks_cpp212 10 "%0Could not allocate FxCxPnpPowerCallbackContext" //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPrePostCallback::_InitializeContext FUNC=FxPrePostCallback::_InitializeContext
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
fad7c1d8-989b-30c8-ae27-1a82d0837b0d WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev powerpolicystatemachine_cpp2944 14 "%0WDFDEVICE %10!p! !devobj %11!p! The driver attempted to specify power framework settings more than once. %12!s!." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::CommitPowerFrameworkSettings FUNC=IdleTimeoutManagement::CommitPowerFrameworkSettings
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev powerpolicystatemachine_cpp2944 16 "%0WDFDEVICE %10!p! !devobj %11!p! Calls to assign S0-idle settings and to specify power framework settings are happening in parallel. The driver needs to serialize these calls with respect to each other. %12!s!." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::CommitPowerFrameworkSettings FUNC=IdleTimeoutManagement::CommitPowerFrameworkSettings
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev powerpolicystatemachine_cpp2944 15 "%0WDFDEVICE %10!p! !devobj %11!p! Power framework settings must be specified before the first start IRP is completed. %12!s!." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::CommitPowerFrameworkSettings FUNC=IdleTimeoutManagement::CommitPowerFrameworkSettings
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev powerpolicystatemachine_cpp2775 13 "%0WDFDEVICE %10!p! !devobj %11!p! The driver specified power framework settings, but did not opt for system-managed idle timeout." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::FreezeIdleTimeoutManagementStatus FUNC=IdleTimeoutManagement::FreezeIdleTimeoutManagementStatus
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev powerpolicystatemachine_cpp2755 12 "%0WDFDEVICE %10!p! !devobj %11!p! The driver's S0-idle settings and/or power framework settings did not take effect because they were supplied too late. The driver must ensure that the settings are provided before the first start IRP is completed." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::FreezeIdleTimeoutManagementStatus FUNC=IdleTimeoutManagement::FreezeIdleTimeoutManagementStatus
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev powerpolicystatemachine_cpp7207 40 "%0Requesting D%10!d! irp, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendDevicePowerRequest FUNC=FxPkgPnp::PowerPolCancelingWakeForSystemSleepWakeCanceled
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp5510 31 "%0WDFDEVICE %10!p! powering down before child devices have powered down. This usually indicates a faulty child device that completed the Sx irp before sending the Dx irp" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleeping FUNC=FxPkgPnp::PowerPolSleeping
{
Arg, ItemPtr -- 10
}
#typev powerpolicystatemachine_cpp5736 32 "%0Attempting to send wait wake request for EvtDeviceArmWakeFromSx() failed, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingSendWake FUNC=FxPkgPnp::PowerPolSleepingSendWake
{
Arg, ItemNTSTATUS -- 10
}
#typev powerpolicystatemachine_cpp4938 26 "%0reverting arm for wake from Sx due to failure to allocate wait wake request or wait wake request completed immeidately.  Device will *NOT* be armed for wake from Sx" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeRevertArmWake FUNC=FxPkgPnp::PowerPolSleepingWakeRevertArmWake
{
}
#typev powerpolicystatemachine_cpp5207 30 "%0reverting arm for wake from Sx due to failure to allocate wait wake request or wait wake request completed immeidately.  Device will *NOT* be armed for wake from Sx" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeRevertArmWakeNP FUNC=FxPkgPnp::PowerPolSleepingWakeRevertArmWakeNP
{
}
#typev powerpolicystatemachine_cpp4917 25 "%0WDFDEVICE %10!p! Failed to Enable Wake at Bus, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrived FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp4902 24 "%0WDFDEVICE %10!p! Failed to arm for wake from Sx, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrived FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp4894 23 "%0WDFDEVICE %10!p! Failed in EvtCxDevicePreArmWakeFromSx/WithReason, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrived FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp5186 29 "%0WDFDEVICE %10!p! Failed to Enable Wake at Bus, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrivedNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrivedNP
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp5171 28 "%0WDFDEVICE %10!p! Failed to arm for wake from Sx, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrivedNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrivedNP
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp5162 27 "%0WDFDEVICE %10!p! a framework extension failed in EvtCxDevicePreArmWakeFromSx(WithReason), %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrivedNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrivedNP
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp4736 22 "%0Failed to allocate D0 request to disarm from wake from S0 to allow arm for wake from Sx, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSystemSleepNeedWake FUNC=FxPkgPnp::PowerPolSystemSleepNeedWake
{
Arg, ItemNTSTATUS -- 10
}
#typev powerpolicystatemachine_cpp6291 37 "%0WDFDEVICE %10!p! Calling EvtDeviceDisarmWakeFromS0 because a framework extension failed EvtCxDevicePostArmWakeFromS0" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableRevertArmWake FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableRevertArmWake
{
Arg, ItemPtr -- 10
}
#typev powerpolicystatemachine_cpp6070 33 "%0Could not allocate wake request for wake from S0, revert arming, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableSendWake FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableSendWake
{
Arg, ItemNTSTATUS -- 10
}
#typev powerpolicystatemachine_cpp6258 36 "%0WDFDEVICE %10!p! Failed to Enable Wake at Bus, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableWakeArrived FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp6243 35 "%0WDFDEVICE %10!p! EvtDeviceArmWakeFromS0 Failed, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableWakeArrived FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp6234 34 "%0WDFDEVICE %10!p! a framework extension failed in EvtCxDevicePostArmWakeFromS0, %11!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableWakeArrived FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableWakeArrived
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp10103 52 "%0WDFDEVICE %10!p! !devobj 0x%11!p! not idling out because there are %12!d! children who are powered up" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCanIdlePowerDown FUNC=FxPkgPnp::PowerPolicyCanIdlePowerDown
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
}
#typev powerpolicystatemachine_cpp9910 46 "%0No WaitWake irp to cancel" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
}
#typev powerpolicystatemachine_cpp9891 45 "%0Cancel of irp %10!p! returned %11!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
}
#typev powerpolicystatemachine_cpp9886 44 "%0Successfully got WaitWake irp %10!p! for cancelling" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
Arg, ItemPtr -- 10
}
#typev powerpolicystatemachine_cpp9840 43 "%0Completing system power irp %10!p! (S%11!d!), %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCompleteSystemPowerIrp FUNC=FxPkgPnp::PowerPolicyCompleteSystemPowerIrp
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev powerpolicystatemachine_cpp3478 18 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEvent FUNC=FxPkgPnp::PowerPolicyProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
}
#typev powerpolicystatemachine_cpp3453 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s! because the Event is already enqueued." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEvent FUNC=FxPkgPnp::PowerPolicyProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
}
#typev powerpolicystatemachine_cpp3727 20 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current state %12!s!, policy event %13!s! is not a known dropped event, known dropped events are %14!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEventInner FUNC=FxPkgPnp::PowerPolicyProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
Arg, ItemEnum(FxPowerPolicyEvent) -- 14
}
#typev powerpolicystatemachine_cpp3716 19 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current pwr pol state %12!s! dropping event %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEventInner FUNC=FxPkgPnp::PowerPolicyProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(FxPowerPolicyEvent) -- 13
}
#typev powerpolicystatemachine_cpp3881 21 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering power policy state %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::PowerPolicyEnterNewState FUNC=FxPkgPnp::PowerPolicyProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 13
}
#typev powerpolicystatemachine_cpp9761 39 "%0Could not request D%10!d! irp for device %11!p! (WDFDEVICE %12!p!), %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendDevicePowerRequest FUNC=FxPkgPnp::PowerPolicySendDevicePowerRequest
{
Arg, ItemLong -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerpolicystatemachine_cpp9770 40 "%0Requesting D%10!d! irp, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendDevicePowerRequest FUNC=FxPkgPnp::PowerPolicySendDevicePowerRequest
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp9815 42 "%0Requesting wait wake irp for S%10!d! failed, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendWaitWakeRequest FUNC=FxPkgPnp::PowerPolicySendWaitWakeRequest
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev powerpolicystatemachine_cpp9805 41 "%0Requesting wait wake irp for S%10!d!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendWaitWakeRequest FUNC=FxPkgPnp::PowerPolicySendWaitWakeRequest
{
Arg, ItemLong -- 10
}
#typev powerpolicystatemachine_cpp2716 10 "%0WDFDEVICE %10!p! !devobj %11!p! If the power framework is made responsible for determining the idle timeout, then the first call to assign S0-idle policy must occur before the first start IRP is completed. However, in this case, it occurred after the first start IRP was completed. %12!s!." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::UseSystemManagedIdleTimeout FUNC=IdleTimeoutManagement::UseSystemManagedIdleTimeout
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev powerpolicystatemachine_cpp2716 11 "%0WDFDEVICE %10!p! !devobj %11!p! Calls to assign S0-idle settings and to specify power framework settings are happening in parallel. The driver needs to serialize these calls with respect to each other. %12!s!." //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=IdleTimeoutManagement::UseSystemManagedIdleTimeout FUNC=IdleTimeoutManagement::UseSystemManagedIdleTimeout
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev powerpolicystatemachine_cpp9614 38 "%0PowerDeviceD0 requested by WDFDEVICE 0x%10!p! !devobj 0x%11!p!, is being completed by upper driver without sending it to driver that requested it" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolDevicePowerUpComplete FUNC=FxPkgPnp::_PowerPolDevicePowerUpComplete
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev powerpolicystatemachine_cpp10038 50 "%0WDFDEVICE %10!p!, !devobj %11!p! Completion of UsbSS irp %12!p!, %13!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyUsbSelectiveSuspendCompletionRoutine FUNC=FxPkgPnp::_PowerPolicyUsbSelectiveSuspendCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev powerpolicystatemachine_cpp10005 49 "%0Not completing WaitWake irp %10!p! in completion routine" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
Arg, ItemPtr -- 10
}
#typev powerpolicystatemachine_cpp9983 48 "%0Completion of WaitWake irp %10!p!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
Arg, ItemPtr -- 10
}
#typev powerpolicystatemachine_cpp9939 47 "%0WDFDEVICE %10!p! !devobj %11!p! Completion of WaitWake irp %12!p!, %13!s!" //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
15474c83-4f1d-32f0-8ae3-58bf168cdf39 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev interruptobject_cpp166 11 "%0Destroy Interrupt destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove. Possible reference count problem?" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::~FxInterrupt FUNC=FxInterrupt::~FxInterrupt
{
}
#typev interruptobject_cpp158 10 "%0Destroy Interrupt destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove. Possible reference count problem?" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::~FxInterrupt FUNC=FxInterrupt::~FxInterrupt
{
}
#typev interruptobject_cpp1790 28 "%0Can't synchronize when WDFINTERRUPT 0x%10!p! isn't connected" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::AcquireLock FUNC=FxInterrupt::AcquireLock
{
Arg, ItemPtr -- 10
}
#typev interruptobject_cpp965 21 "%0Is MSI? %10!d!, MSI-ID %11!d!, AffinityPolicy %12!s!, Priority %13!s!, Group %14!d!, Affinity 0x%15!I64x!, Irql 0x%16!x!, Vector 0x%17!x!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxInterrupt::AssignResources FUNC=FxInterrupt::AssignResources
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemEnum(_WDF_INTERRUPT_POLICY) -- 12
Arg, ItemEnum(_WDF_INTERRUPT_PRIORITY) -- 13
Arg, ItemLong -- 14
Arg, ItemLongLongX -- 15
Arg, ItemLong -- 16
Arg, ItemLong -- 17
}
#typev interruptobject_cpp1227 24 "%0EvtInterruptEnable WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p! returned %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Connect FUNC=FxInterrupt::Connect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev interruptobject_cpp1179 23 "%0IoConnectInterrupt(Ex) Failed, SpinLock 0x%10!p!, Vector 0x%11!x!, IRQL 0x%12!x!, Synchronize IRQL 0x%13!x!, Mode 0x%14!x!, ShareVector %15!s!, ProcessorGroup %16!d!, ProcessorEnableMask 0x%17!I64x!, FloatingSave %18!s!, %19!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Connect FUNC=FxInterrupt::Connect
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
Arg, ItemLong -- 14
Arg, ItemString -- 15
Arg, ItemLong -- 16
Arg, ItemLongLongX -- 17
Arg, ItemString -- 18
Arg, ItemNTSTATUS -- 19
}
#typev interruptobject_cpp240 15 "%0WDFDEVICE 0x%10!p! created wake interrupt" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxInterrupt::CreateWakeInterruptMachine FUNC=FxInterrupt::CreateWakeInterruptMachine
{
Arg, ItemPtr -- 10
}
#typev interruptobject_cpp249 14 "%0WDFDEVICE 0x%10!p! failed to init FxWakeInterruptMachine. %11!s!." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::CreateWakeInterruptMachine FUNC=FxInterrupt::CreateWakeInterruptMachine
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev interruptobject_cpp249 13 "%0WDFDEVICE 0x%10!p! failed to initialize FxWakeInterruptMachine. %11!s!." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::CreateWakeInterruptMachine FUNC=FxInterrupt::CreateWakeInterruptMachine
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev interruptobject_cpp202 12 "%0WDFDEVICE 0x%10!p! failed to allocate FxWakeInterruptMachine. %11!s!." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::CreateWakeInterruptMachine FUNC=FxInterrupt::CreateWakeInterruptMachine
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev interruptobject_cpp1365 25 "%0EvtInterruptDisable WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p! returned %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Disconnect FUNC=FxInterrupt::Disconnect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
#typev interruptobject_cpp1501 26 "%0Force disconnect called on WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxInterrupt::ForceDisconnect FUNC=FxInterrupt::ForceDisconnect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev interruptobject_cpp1535 27 "%0Force connect called on WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxInterrupt::ForceReconnect FUNC=FxInterrupt::ForceReconnect
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev interruptobject_cpp584 18 "%0The specified object 0x%10!p! is not a valid parent for a WDFINTERRUPT, WDF_INTERRUPT_CONFIG structure 0x%11!p! passed, %12!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::InitializeWorker FUNC=FxInterrupt::InitializeWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev interruptobject_cpp704 20 "%0Could not allocate workitem, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::InitializeWorker FUNC=FxInterrupt::InitializeWorker
{
Arg, ItemNTSTATUS -- 10
}
#typev interruptobject_cpp673 19 "%0Could not allocate waitlock, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::InitializeWorker FUNC=FxInterrupt::InitializeWorker
{
Arg, ItemNTSTATUS -- 10
}
#typev interruptobject_cpp1857 29 "%0Can't synchronize when WDFINTERRUPT 0x%10!p! isn't connected" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::ReleaseLock FUNC=FxInterrupt::ReleaseLock
{
Arg, ItemPtr -- 10
}
#typev interruptobject_cpp1060 22 "%0You cannot apply policy at this stage for WDFINTERRUPT 0x%10!p! For interrupts created in EvtDevicePrepareHardware you must use EvtDeviceFilter APIs or use a pre-process routine to handle the IRP_MN_FILTER_RESOURCE_REQUIREMENT, %11!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::SetPolicy FUNC=FxInterrupt::SetPolicy
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev interruptobject_cpp348 16 "%0not enough memory to allocate WDFINTERRUPT for WDFDEVICE %10!p!, %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::_CreateAndInit FUNC=FxInterrupt::_CreateAndInit
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev interruptobject_cpp365 17 "%0FxInterrupt Commit failed %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::_CreateAndInit FUNC=FxInterrupt::_CreateAndInit
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
693b8994-436f-328d-3b55-e543f6612187 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev interruptobjectkm_cpp471 10 "%0Driver is reporting WDFINTERRUPT %10!p! as being active even though it is not connected." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxInterrupt::ReportActive FUNC=FxInterrupt::ReportActive
{
Arg, ItemPtr -- 10
}
#typev interruptobjectkm_cpp480 11 "%0Driver is calling DDI WdfInterruptReportActive() on an OS that doesn't support the DDI." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxInterrupt::ReportActive FUNC=FxInterrupt::ReportActive
{
}
#typev interruptobjectkm_cpp528 12 "%0Driver is reporting WDFINTERRUPT %10!p! as being inactive even though it is not connected." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxInterrupt::ReportInactive FUNC=FxInterrupt::ReportInactive
{
Arg, ItemPtr -- 10
}
#typev interruptobjectkm_cpp537 13 "%0Driver is calling DDI WdfInterruptReportInactive() on an OS that doesn't support the DDI." //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxInterrupt::ReportInactive FUNC=FxInterrupt::ReportInactive
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
5fcab737-68f0-3687-01c7-af586f03faf4 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev pdopower_cpp173 10 "%0Received set device power irp 0x%10!p! on WDFDEVICE 0x%11!p! !devobj 0x%12!p!, but the irp was not requested by the device (the power policy owner)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::DispatchDeviceSetPower FUNC=FxPkgPdo::DispatchDeviceSetPower
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
0963b168-561d-3cbe-3e28-bbaa1efcce79 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgpdokm_cpp249 10 "%0could not register device interface on PDO WDFDEVICE %10!p!, !devobj %11!p!, failing IRP_MN_QUERY_RESOURCE_REQUIREMENTS %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::PnpQueryResourceRequirements FUNC=FxPkgPdo::PnpQueryResourceRequirements
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a744b6ca-3235-3fa1-84f5-e51955d1b201 version // SRC=Unknown_cxx00 MJ= MN=
#typev FxResource_hpp669 13 "%0Failed to allocate FxIoResReqList, returning %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxIoResReqList::_CreateAndInit FUNC=FxIoResReqList::_CreateAndInit
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
5fbc6ec0-fa94-3d3c-9995-78633b765c86 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev supportkm_cpp101 10 "%0Failed to get DEVICE_CAPABILITIES from !devobj %10!p!, %11!s!" //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=GetStackCapabilities FUNC=GetStackCapabilities
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
2faeb888-621e-37b6-1d1f-ee20394856b2 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev eventqueue_cpp206 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! not queueing work item to process event queue" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxEventQueue::QueueToThreadWorker FUNC=FxEventQueue::QueueToThreadWorker
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev eventqueue_cpp141 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! delaying deletion to outside state machine" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxEventQueue::SetDelayedDeletion FUNC=FxEventQueue::SetDelayedDeletion
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
9362c4cc-7f7b-3e03-ee76-48cf44604032 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev selfmanagediostatemachine_cpp323 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering self managed io state %12!s! from %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxSelfManagedIoMachine::ProcessEvent FUNC=FxSelfManagedIoMachine::ProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxSelfManagedIoStates) -- 12
Arg, ItemEnum(FxSelfManagedIoStates) -- 13
}
#typev selfmanagediostatemachine_cpp196 10 "%0Self managed I/O state machine allocation failed for WDFDEVICE 0x%10!p!" //   GLOBALS=PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxSelfManagedIoMachine::_CreateAndInit FUNC=FxSelfManagedIoMachine::_CreateAndInit
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
31ae291f-b4c9-3776-5330-2eccf565ed0f WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev pnpcallbackskm_cpp45 10 "%0Companion PreD0Entry for WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0Entry::InvokeCompanionCallback FUNC=FxPnpDeviceD0Entry::InvokeCompanionCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpcallbackskm_cpp68 11 "%0Companion PostD0Exit for WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceD0Exit::InvokeCompanionCallback FUNC=FxPnpDeviceD0Exit::InvokeCompanionCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpcallbackskm_cpp90 12 "%0Companion PrePrepareHardware for WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDevicePrepareHardware::InvokeCompanionCallback FUNC=FxPnpDevicePrepareHardware::InvokeCompanionCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev pnpcallbackskm_cpp113 13 "%0Companion PostReleaseHardware for WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPnpDeviceReleaseHardware::InvokeCompanionCallback FUNC=FxPnpDeviceReleaseHardware::InvokeCompanionCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
d634c947-b4e3-3943-d330-40e9521735b8 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev wakeinterruptstatemachine_cpp168 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current wake interrupt state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxWakeInterruptMachine::ProcessEvent FUNC=FxWakeInterruptMachine::ProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxWakeInterruptStates) -- 12
Arg, ItemEnum(FxWakeInterruptEvents) -- 13
}
#typev wakeinterruptstatemachine_cpp350 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! wake interrupt state %12!s! dropping event %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxWakeInterruptMachine::ProcessEventInner FUNC=FxWakeInterruptMachine::ProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxWakeInterruptStates) -- 12
Arg, ItemEnum(FxWakeInterruptEvents) -- 13
}
#typev wakeinterruptstatemachine_cpp367 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering wake interrupt state %12!s! from %13!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxWakeInterruptMachine::ProcessEventInner FUNC=FxWakeInterruptMachine::ProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxWakeInterruptStates) -- 12
Arg, ItemEnum(FxWakeInterruptStates) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
177e2db7-5068-3f72-0033-010fea24310c WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkgfdokm_cpp218 11 "%0Exiting FilterResourceRequirements handler, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpFilterResourceRequirements FUNC=FxPkgFdo::PnpFilterResourceRequirements
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgfdokm_cpp72 10 "%0Entering FilterResourceRequirements handler" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpFilterResourceRequirements FUNC=FxPkgFdo::PnpFilterResourceRequirements
{
}
#typev fxpkgfdokm_cpp526 16 "%0Function mismatch detected in DSF interface, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::QueryForDsfInterface FUNC=FxPkgFdo::QueryForDsfInterface
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgfdokm_cpp503 15 "%0Lower DSF stack supports v(%10!x!), requested v(%11!x!), %12!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::QueryForDsfInterface FUNC=FxPkgFdo::QueryForDsfInterface
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkgfdokm_cpp489 14 "%0Lower stack returned an error for query DSF interface, %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::QueryForDsfInterface FUNC=FxPkgFdo::QueryForDsfInterface
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkgfdokm_cpp481 13 "%0Lower stack does not have a DSF interface" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgFdo::QueryForDsfInterface FUNC=FxPkgFdo::QueryForDsfInterface
{
}
#typev fxpkgfdokm_cpp346 12 "%0Lower stack returned error for query pnp device state, %10!s!" //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryPnpDeviceState FUNC=FxPkgFdo::_PnpQueryPnpDeviceState
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
a3c8fd9f-4323-3552-1420-391411bfd7df WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fdopower_cpp317 10 "%0Received set device power irp 0x%10!p! on WDFDEVICE 0x%11!p! !devobj 0x%12!p!, but the irp was not requested by the device (the power policy owner)" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::DispatchDeviceSetPower FUNC=FxPkgFdo::DispatchDeviceSetPower
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
606b9ac8-a282-38ea-bc07-907a663e5183 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev powerpolicystatemachinekm_cpp58 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! WW !irp 0x%12!p! is a source of wake" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyUpdateSystemWakeSource FUNC=FxPkgPnp::PowerPolicyUpdateSystemWakeSource
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
}
#typev powerpolicystatemachinekm_cpp229 12 "%0Leaving USB Selective Suspend Idle callback" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxUsbIdleInfo::_UsbIdleCallback FUNC=FxUsbIdleInfo::_UsbIdleCallback
{
}
#typev powerpolicystatemachinekm_cpp215 11 "%0Entering USB Selective Suspend Idle callback" //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxUsbIdleInfo::_UsbIdleCallback FUNC=FxUsbIdleInfo::_UsbIdleCallback
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
94e3c03d-d873-377c-284c-8fc3cec31d15 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev notpowerpolicyownerstatemachine_cpp282 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering not power policy owner state %12!s! from %13!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxPkgPnp::NotPowerPolicyOwnerEnterNewState FUNC=FxPkgPnp::NotPowerPolicyOwnerEnterNewState
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
Arg, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
85ef7a79-2fa4-38ae-296a-72763c7600aa WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev poxinterface_cpp58 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! failed to allocate FxDevicePwrRequirementMachine. %12!s!." //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev poxinterface_cpp87 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! Device Power Requirement State Machine Init() failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev poxinterface_cpp71 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! Device Power Requirement State Machine Initialize() failed, %12!s!" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine FUNC=FxPoxInterface::CreateDevicePowerRequirementMachine
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev poxinterface_cpp196 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p!. The client driver has failed the EvtDeviceWdmPostPoFxRegisterDevice callback with %12!s!." //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::InitializeComponents FUNC=FxPoxInterface::InitializeComponents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev poxinterface_cpp148 13 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! FxPox::PoxRegisterDevice failed. %12!s!." //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::InitializeComponents FUNC=FxPoxInterface::InitializeComponents
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b4c719b6-e809-3692-58b0-f9e0fd0a6735 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev poxinterfacekm_cpp101 13 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! Invoking client driver's PO_FX_COMPONENT_ACTIVE_CONDITION_CALLBACK." //   GLOBALS=pThis->m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPoxInterface::ComponentActiveCallback FUNC=FxPoxInterface::ComponentActiveCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev poxinterfacekm_cpp79 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! PO_FX_COMPONENT_ACTIVE_CONDITION_CALLBACK invoked." //   GLOBALS=pThis->m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPoxInterface::ComponentActiveCallback FUNC=FxPoxInterface::ComponentActiveCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev poxinterfacekm_cpp158 15 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! Invoking client driver's PO_FX_COMPONENT_IDLE_CONDITION_CALLBACK." //   GLOBALS=pThis->m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPoxInterface::ComponentIdleCallback FUNC=FxPoxInterface::ComponentIdleCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev poxinterfacekm_cpp136 14 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! PO_FX_COMPONENT_IDLE_CONDITION_CALLBACK invoked." //   GLOBALS=pThis->m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPoxInterface::ComponentIdleCallback FUNC=FxPoxInterface::ComponentIdleCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev poxinterfacekm_cpp507 19 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! PO_FX_DIRECTED_POWER_DOWN_CALLBACK invoked." //   GLOBALS=pThis->m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPoxInterface::DirectedPowerDownCallback FUNC=FxPoxInterface::DirectedPowerDownCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev poxinterfacekm_cpp554 20 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! PO_FX_DIRECTED_POWER_UP_CALLBACK invoked." //   GLOBALS=pThis->m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPoxInterface::DirectedPowerUpCallback FUNC=FxPoxInterface::DirectedPowerUpCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev poxinterfacekm_cpp259 17 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! Client driver's PO_FX_POWER_CONTROL_CALLBACK returned %12!s!." //   GLOBALS=pThis->m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPoxInterface::PowerControlCallback FUNC=FxPoxInterface::PowerControlCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev poxinterfacekm_cpp227 16 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! PO_FX_POWER_CONTROL_CALLBACK invoked." //   GLOBALS=pThis->m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPoxInterface::PowerControlCallback FUNC=FxPoxInterface::PowerControlCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev poxinterfacekm_cpp409 18 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! FxPox::PoxRegisterDevice failed. %12!s!." //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPoxInterface::PoxRegisterDevice FUNC=FxPoxInterface::PoxRegisterDevice
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev poxinterfacekm_cpp49 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! Invoking client driver's PO_FX_COMPONENT_IDLE_STATE_CALLBACK." //   GLOBALS=pThis->m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPoxInterface::StateCallback FUNC=FxPoxInterface::StateCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev poxinterfacekm_cpp27 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! PO_FX_COMPONENT_IDLE_STATE_CALLBACK invoked." //   GLOBALS=pThis->m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPoxInterface::StateCallback FUNC=FxPoxInterface::StateCallback
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
64ef660e-8cd6-3e55-9cc2-29c894a05301 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev devicepwrreqstatemachine_cpp229 10 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! current device power requirement state %12!s! dropping event %13!s! because of a closed queue" //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevicePwrRequirementMachine::ProcessEvent FUNC=FxDevicePwrRequirementMachine::ProcessEvent
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 12
Arg, ItemEnum(FxDevicePwrRequirementEvents) -- 13
}
#typev devicepwrreqstatemachine_cpp413 11 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! device power requirement state %12!s! dropping event %13!s!" //   GLOBALS=m_PoxInterface->PkgPnp()->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevicePwrRequirementMachine::ProcessEventInner FUNC=FxDevicePwrRequirementMachine::ProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 12
Arg, ItemEnum(FxDevicePwrRequirementEvents) -- 13
}
#typev devicepwrreqstatemachine_cpp453 12 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! entering device power requirement state %12!s! from %13!s!" //   GLOBALS=m_PoxInterface->PkgPnp()->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNPPOWERSTATES FUNC=FxDevicePwrRequirementMachine::ProcessEventInner FUNC=FxDevicePwrRequirementMachine::ProcessEventInner
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 12
Arg, ItemEnum(FxDevicePwrRequirementStates) -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e0fcef07-b0f3-33e3-8b93-fec96f59a0e1 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkggeneral_cpp418 14 "%0WdfSynchronizationScopeDevice or WdfSynchronizationScopeInheritFromParent allowed only if the parent WDFDEVICE 0x%10!p!, ExecutionLevel is passive, %11!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureConstraints FUNC=FxPkgGeneral::ConfigureConstraints
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkggeneral_cpp381 13 "%0WdfSynchronizationScopeQueue is not allowed on FileObject, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureConstraints FUNC=FxPkgGeneral::ConfigureConstraints
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkggeneral_cpp356 12 "%0Driver 0x%10!p! - Device 0x%11!p! - synchronization scope: %12!s! should beWdfSynchronizationScopeNone, %13!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureConstraints FUNC=FxPkgGeneral::ConfigureConstraints
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 12
Arg, ItemNTSTATUS -- 13
}
#typev fxpkggeneral_cpp543 15 "%0Device 0x%10!p! - Driver 0x%11!p! - WdfFileObjectCanBeOptional (%12!d!) is not compatible with wdf extension Driver 0x%13!p! - WdfFileObjectCanBeOptional (%14!d!), %15!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureFileObjectClass FUNC=FxPkgGeneral::ConfigureFileObjectClass
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemPtr -- 13
Arg, ItemLong -- 14
Arg, ItemNTSTATUS -- 15
}
#typev fxpkggeneral_cpp571 16 "%0Converting file object class for Driver 0x%10!p! - Device 0x%11!p!, from 0x%12!x! to 0x%13!x!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureFileObjectClass FUNC=FxPkgGeneral::ConfigureFileObjectClass
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemLong -- 12
Arg, ItemLong -- 13
}
#typev fxpkggeneral_cpp739 19 "%0Another WDFQUEUE 0x%10!p! is already configured for auto dispatching create request, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::ConfigureForwarding FUNC=FxPkgGeneral::ConfigureForwarding
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkggeneral_cpp725 18 "%0Must have EvtIoDefault registered to receive WdfRequestTypeCreate requests for WDFQUEUE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::ConfigureForwarding FUNC=FxPkgGeneral::ConfigureForwarding
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkggeneral_cpp782 20 "%0WDFDEVICE 0x%10!p! !devobj 0x%11!p! %12!s! IRP 0x%13!p!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgGeneral::Dispatch FUNC=FxPkgGeneral::Dispatch
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 12
Arg, ItemPtr -- 13
}
#typev fxpkggeneral_cpp176 11 "%0Couldn't create object FileObjectInfo, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::Initialize FUNC=FxPkgGeneral::Initialize
{
Arg, ItemNTSTATUS -- 10
}
#typev fxpkggeneral_cpp126 10 "%0Couldn't create object FileObjectInfo, %10!s!" //   GLOBALS=fxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::Initialize FUNC=FxPkgGeneral::Initialize
{
Arg, ItemNTSTATUS -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cb1067eb-57f6-3268-cdff-dfcad6c03699 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkggeneral_cpp1617 16 "%0Since this is a serial port device, framework is using a workaround to allow this" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxPkgGeneral::OnCleanup
{
}
#typev fxpkggeneral_cpp1617 14 "%0NULL passed for PFILE_OBJECT when FileObject support is requested in an I/O request" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxPkgGeneral::OnCleanup
{
}
#typev fxpkggeneral_cpp1617 18 "%0Did a different PFILE_OBJECT get passed to the request than was to IRP_MJ_CREATE?" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxPkgGeneral::OnCleanup
{
}
#typev fxpkggeneral_cpp1617 17 "%0Could not locate WDFFILEOBJECT for PFILE_OBJECT 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxPkgGeneral::OnCleanup
{
Arg, ItemPtr -- 10
}
#typev fxpkggeneral_cpp1617 15 "%0The PFILE_OBJECT 0x%10!p! in this request (cleanup/close) is different from the one specified in create request 0x%11!p!.This is bad!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxPkgGeneral::OnCleanup
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e0fcef07-b0f3-33e3-8b93-fec96f59a0e1 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkggeneral_cpp1841 30 "%0Unable to acquire remove lock while handling the close IRP 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::AcquireRemoveLockForClose FUNC=FxPkgGeneral::OnClose
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cb1067eb-57f6-3268-cdff-dfcad6c03699 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkggeneral_cpp1820 11 "%0PFILE_OBJECT in close IRP is NULL, *Possible Leak of FxFileObject*" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxFileObject::_DestroyFileObject FUNC=FxPkgGeneral::OnClose
{
}
#typev fxpkggeneral_cpp1758 16 "%0Since this is a serial port device, framework is using a workaround to allow this" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxPkgGeneral::OnClose
{
}
#typev fxpkggeneral_cpp1758 14 "%0NULL passed for PFILE_OBJECT when FileObject support is requested in an I/O request" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxPkgGeneral::OnClose
{
}
#typev fxpkggeneral_cpp1758 18 "%0Did a different PFILE_OBJECT get passed to the request than was to IRP_MJ_CREATE?" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxPkgGeneral::OnClose
{
}
#typev fxpkggeneral_cpp1758 17 "%0Could not locate WDFFILEOBJECT for PFILE_OBJECT 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxPkgGeneral::OnClose
{
Arg, ItemPtr -- 10
}
#typev fxpkggeneral_cpp1758 15 "%0The PFILE_OBJECT 0x%10!p! in this request (cleanup/close) is different from the one specified in create request 0x%11!p!.This is bad!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::_GetFileObjectFromWdm FUNC=FxPkgGeneral::OnClose
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxpkggeneral_cpp1820 13 "%0Did a different PFILE_OBJECT get passed to IRP_MJ_CLOSE than did to IRP_MJ_CREATE?" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_DestroyFileObject FUNC=FxPkgGeneral::OnClose
{
}
#typev fxpkggeneral_cpp1820 12 "%0Could not find WDFFILEOBJECT for PFILE_OBJECT 0x%10!p!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::_DestroyFileObject FUNC=FxPkgGeneral::OnClose
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e0fcef07-b0f3-33e3-8b93-fec96f59a0e1 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkggeneral_cpp1263 28 "%0Couldn't forward request to the WDFQUEUE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkggeneral_cpp1154 26 "%0WDFDEVICE 0x%10!p! cannot handle create request at or above dispatch-level, fail the Irp: 0x%11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkggeneral_cpp1114 25 "%0Couldn't allocate request context for device 0x%10!p! - driver 0x%11!p!, %12!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxpkggeneral_cpp1071 24 "%0Could not create request for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkggeneral_cpp978 23 "%0Couldn't allocate file object context 0x%10!p! for device 0x%11!p! - driver 0x%12!p!, %13!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemPtr -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
cb1067eb-57f6-3268-cdff-dfcad6c03699 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkggeneral_cpp928 10 "%0WdfFileObjectWdfCanUseFsContexts is specified, but the Create IRP %10!p! doesn't have a fileObject" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxFileObject::_CreateFileObject FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e0fcef07-b0f3-33e3-8b93-fec96f59a0e1 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkggeneral_cpp938 22 "%0Could not create WDFFILEOBJECT for WDFDEVICE 0x%10!p!, failing IRP_MJ_CREATE %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkggeneral_cpp928 10 "%0Size overflow, object size 0x%10!x!, extra object size 0x%11!x!, context size 0x%12!I64x!, %13!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize2 FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemLong -- 10
Arg, ItemLong -- 11
Arg, ItemLongLongX -- 12
Arg, ItemNTSTATUS -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
e0fcef07-b0f3-33e3-8b93-fec96f59a0e1 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxpkggeneral_cpp883 21 "%0Exclusive WDFDEVICE 0x%10!p!, only one open handle is allowed" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
}
#typev fxpkggeneral_cpp1397 27 "%0Couldn't forward request to the WDFQUEUE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkggeneral_cpp1283 29 "%0Couldn't forward request to the WDFQUEUE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate FUNC=FxPkgGeneral::OnCreate
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxpkggeneral_cpp686 17 "%0Unable to create an internal queue for creates for WDFDEVICE 0x%10!p!, %11!s!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::PostCreateDeviceInitialize FUNC=FxPkgGeneral::PostCreateDeviceInitialize
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
402353e2-8c4c-364e-3a85-1a85142acf2d base // SRC=Unknown_cxx00 MJ= MN=
#typev fxcommonbuffer_cpp102 10 "%0WDFDMAENABLER %10!p! AllocateCommonBuffer:  overflow when adding Length %11!I64d! + Alignment %12!I64d!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxCommonBuffer::AllocateCommonBuffer FUNC=FxCommonBuffer::AllocateCommonBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
Arg, ItemLongLong -- 12
}
#typev fxcommonbuffer_cpp134 11 "%0WDFDMAENABLER %10!p! AllocateCommonBuffer:  overflow when subtracting RawLA %11!I64x! from AlignedLA %12!I64x!" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxCommonBuffer::AllocateCommonBuffer FUNC=FxCommonBuffer::AllocateCommonBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLongLongX -- 11
Arg, ItemLongLongX -- 12
}
#typev fxcommonbuffer_cpp144 12 "%0WDFDMAENABLER %10!p! AllocateCommonBuffer:  overflow when  converting from ULongLong %11!I64d! to ULong" //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxCommonBuffer::AllocateCommonBuffer FUNC=FxCommonBuffer::AllocateCommonBuffer
{
Arg, ItemPtr -- 10
Arg, ItemLongLong -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
99ea4072-9de7-3856-bf51-7a8112b0ca07 core // SRC=Unknown_cxx00 MJ= MN=
#typev fxsystemthread_cpp169 12 "%0Could not create system thread %10!s!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemThread::CreateThread FUNC=FxSystemThread::CreateThread
{
Arg, ItemNTSTATUS -- 10
}
#typev fxsystemthread_cpp75 10 "%0WDFDEVICE 0x%10!p! !devobj %11!p! could not allocate a thread for handling power requests %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxSystemThread::_CreateAndInit FUNC=FxSystemThread::_CreateAndInit
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
#typev fxsystemthread_cpp87 11 "%0WDFDEVICE 0x%10!p!, !devobj %11!p!, could not initialize power thread, %12!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxSystemThread::_CreateAndInit FUNC=FxSystemThread::_CreateAndInit
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
Arg, ItemNTSTATUS -- 12
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxsyncrequest_cpp80 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxSyncRequest::FxSyncRequest
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
02af2262-c88b-399f-02b2-fb7037fd57e7 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxsyncrequest_cpp157 11 "%0Request %10!p!, wait on event %11!p! done" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::~FxSyncRequest FUNC=FxSyncRequest::~FxSyncRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxsyncrequest_cpp151 10 "%0Request %10!p!, waiting on event %11!p!" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::~FxSyncRequest FUNC=FxSyncRequest::~FxSyncRequest
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
#typev fxsyncrequest_cpp186 12 "%0SyncRequest %10!p!, signaling event %11!p! on SelfDestruct" //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::SelfDestruct FUNC=FxSyncRequest::SelfDestruct
{
Arg, ItemPtr -- 10
Arg, ItemPtr -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
b63f1c73-c8d4-3de0-8a69-7d00d0f8fc8e WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestbufferkm_cpp163 11 "%0Couldn't lock pages for MDL 0x%10!p! %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::GetOrAllocateMdl FUNC=FxRequestBuffer::GetOrAllocateMdl
{
Arg, ItemPtr -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestbufferkm_cpp228 12 "%0Couldn't allocate memory for MDL of length 0x%10!x! %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::GetOrAllocateMdl FUNC=FxRequestBuffer::GetOrAllocateMdl
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
#typev fxrequestbufferkm_cpp146 10 "%0Couldn't allocate memory for MDL of length 0x%10!x! %11!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::GetOrAllocateMdl FUNC=FxRequestBuffer::GetOrAllocateMdl
{
Arg, ItemLong -- 10
Arg, ItemNTSTATUS -- 11
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
5c7f77fd-824f-3f5e-7027-1054ef68d2c1 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestbuffer_cpp71 11 "%0A NULL Buffer is not allowed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}
#typev fxrequestbuffer_cpp103 14 "%0MDL is NULL, but a length (0x%10!x!) is specified" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
Arg, ItemLong -- 10
}
#typev fxrequestbuffer_cpp96 13 "%0A NULL MDL is not allowed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}
#typev fxrequestbuffer_cpp123 15 "%0A NULL WDFMEMORY handle is not allowed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}
#typev fxrequestbuffer_cpp54 10 "%0A NULL Descriptor is not allowed" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
4ed73968-00d8-34f3-557f-85fe0ce17799 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestbuffer_cpp131 11 "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!" //   GLOBALS=Object->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtrQI FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
Arg, ItemPtr -- 10
Arg, ItemLong -- 11
Arg, ItemPtr -- 12
Arg, ItemLong -- 13
}
// PDB:  d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2025-02-21:01:55:57:163 (UTC) [tracepdb]
5c7f77fd-824f-3f5e-7027-1054ef68d2c1 WdfCore // SRC=Unknown_cxx00 MJ= MN=
#typev fxrequestbuffer_cpp78 12 "%0Buffer is NULL, but a length (0x%10!x!) is specified" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
Arg, ItemLong -- 10
}
#typev fxrequestbuffer_cpp139 16 "%0Memory offset values are not valid %10!s!" //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
Arg, ItemNTSTATUS -- 10
}
726c9341-86b6-34b8-3188-b2d437396489 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_DMA_PROFILE
{
WdfDmaProfileInvalid,0x0
WdfDmaProfilePacket,0x1
WdfDmaProfileScatterGather,0x2
WdfDmaProfilePacket64,0x3
WdfDmaProfileScatterGather64,0x4
WdfDmaProfileScatterGatherDuplex,0x5
WdfDmaProfileScatterGather64Duplex,0x6
WdfDmaProfileSystem,0x7
WdfDmaProfileSystemDuplex,0x8
}
#enumv _WDF_DMA_DIRECTION
{
WdfDmaDirectionReadFromDevice,0x0
WdfDmaDirectionWriteToDevice,0x1
}
#enumv _WDF_REQUEST_TYPE
{
WdfRequestTypeCreate,0x0
WdfRequestTypeCreateNamedPipe,0x1
WdfRequestTypeClose,0x2
WdfRequestTypeRead,0x3
WdfRequestTypeWrite,0x4
WdfRequestTypeQueryInformation,0x5
WdfRequestTypeSetInformation,0x6
WdfRequestTypeQueryEA,0x7
WdfRequestTypeSetEA,0x8
WdfRequestTypeFlushBuffers,0x9
WdfRequestTypeQueryVolumeInformation,0xA
WdfRequestTypeSetVolumeInformation,0xB
WdfRequestTypeDirectoryControl,0xC
WdfRequestTypeFileSystemControl,0xD
WdfRequestTypeDeviceControl,0xE
WdfRequestTypeDeviceControlInternal,0xF
WdfRequestTypeShutdown,0x10
WdfRequestTypeLockControl,0x11
WdfRequestTypeCleanup,0x12
WdfRequestTypeCreateMailSlot,0x13
WdfRequestTypeQuerySecurity,0x14
WdfRequestTypeSetSecurity,0x15
WdfRequestTypePower,0x16
WdfRequestTypeSystemControl,0x17
WdfRequestTypeDeviceChange,0x18
WdfRequestTypeQueryQuota,0x19
WdfRequestTypeSetQuota,0x1A
WdfRequestTypePnp,0x1B
WdfRequestTypeOther,0x1C
WdfRequestTypeUsb,0x40
WdfRequestTypeNoFormat,0xFF
WdfRequestTypeMax,0x100
}
ff5ed2ad-90c3-3625-80bc-821a11a612a5 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv FxObjectState
{
FxObjectStateInvalid,0x0
FxObjectStateCreated,0x1
FxObjectStateDisposed,0x2
FxObjectStateDisposingEarly,0x3
FxObjectStateDisposingDisposeChildren,0x4
FxObjectStateDeferedDisposing,0x5
FxObjectStateDeferedDeleting,0x6
FxObjectStateWaitingForEarlyDispose,0x7
FxObjectStateWaitingForParentDeleteAndDisposed,0x8
FxObjectStateDeletedDisposing,0x9
FxObjectStateDeletedAndDisposed,0xA
FxObjectStateDeferedDestroy,0xB
FxObjectStateDestroyed,0xC
FxObjectStateMaximum,0xD
}
#enumv FxObjectDroppedEvent
{
FxObjectDroppedEventAssignParentObject,0x0
FxObjectDroppedEventAddChildObjectInternal,0x1
FxObjectDroppedEventRemoveChildObjectInternal,0x2
FxObjectDroppedEventDeleteObject,0x3
FxObjectDroppedEventPerformEarlyDispose,0x4
FxObjectDroppedEventRemoveParentAssignment,0x5
FxObjectDroppedEventParentDeleteEvent,0x6
}
fc2c1296-a520-3fd4-5453-e7971188f69e d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_DMA_PROFILE
{
WdfDmaProfileInvalid,0x0
WdfDmaProfilePacket,0x1
WdfDmaProfileScatterGather,0x2
WdfDmaProfilePacket64,0x3
WdfDmaProfileScatterGather64,0x4
WdfDmaProfileScatterGatherDuplex,0x5
WdfDmaProfileScatterGather64Duplex,0x6
WdfDmaProfileSystem,0x7
WdfDmaProfileSystemDuplex,0x8
}
#enumv _WDF_DMA_DIRECTION
{
WdfDmaDirectionReadFromDevice,0x0
WdfDmaDirectionWriteToDevice,0x1
}
1406772a-302d-36d4-88e5-876798f69c07 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_CHILD_LIST_RETRIEVE_DEVICE_STATUS
{
WdfChildListRetrieveDeviceUndefined,0x0
WdfChildListRetrieveDeviceSuccess,0x1
WdfChildListRetrieveDeviceNotYetCreated,0x2
WdfChildListRetrieveDeviceNoSuchDevice,0x3
}
cccdeeec-82cf-3d7c-33ad-e8851fbbfe94 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv FxPowerIdleStates
{
FxIdleStopped,0x1
FxIdleStarted,0x2
FxIdleStartedPowerUp,0x3
FxIdleStartedPowerFailed,0x4
FxIdleDisabled,0x5
FxIdleCheckIoCount,0x6
FxIdleBusy,0x7
FxIdleDecrementIo,0x8
FxIdleStartTimer,0x9
FxIdleTimerRunning,0xA
FxIdleTimingOut,0xB
FxIdleTimedOut,0xC
FxIdleTimedOutIoIncrement,0xD
FxIdleTimedOutPowerDown,0xE
FxIdleTimedOutPowerDownFailed,0xF
FxIdleGoingToDx,0x10
FxIdleInDx,0x11
FxIdleInDxIoIncrement,0x12
FxIdleInDxPowerUpFailure,0x13
FxIdleInDxStopped,0x14
FxIdleInDxDisabled,0x15
FxIdleInDxEnabled,0x16
FxIdlePowerUp,0x17
FxIdlePowerUpComplete,0x18
FxIdleTimedOutDisabled,0x19
FxIdleTimedOutEnabled,0x1A
FxIdleCancelTimer,0x1B
FxIdleWaitForTimeout,0x1C
FxIdleTimerExpired,0x1D
FxIdleDisabling,0x1E
FxIdleDisablingWaitForTimeout,0x1F
FxIdleDisablingTimerExpired,0x20
FxIdlePowerFailedWaitForTimeout,0x21
FxIdlePowerFailed,0x22
FxIdleMax,0x23
}
#enumv FxPowerIdleEvents
{
PowerIdleEventPowerUpFailed,0x2
PowerIdleEventPowerUpComplete,0x4
PowerIdleEventPowerDown,0x8
PowerIdleEventPowerDownFailed,0x10
PowerIdleEventTimerExpired,0x20
PowerIdleEventEnabled,0x40
PowerIdleEventDisabled,0x80
PowerIdleEventIoDecrement,0x100
PowerIdleEventIoIncrement,0x200
PowerIdleEventStart,0x400
PowerIdleEventStop,0x800
PowerIdleNull,0x0
}
44222e63-eb82-3038-ff04-ae87051d36a9 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_REQUEST_TYPE
{
WdfRequestTypeCreate,0x0
WdfRequestTypeCreateNamedPipe,0x1
WdfRequestTypeClose,0x2
WdfRequestTypeRead,0x3
WdfRequestTypeWrite,0x4
WdfRequestTypeQueryInformation,0x5
WdfRequestTypeSetInformation,0x6
WdfRequestTypeQueryEA,0x7
WdfRequestTypeSetEA,0x8
WdfRequestTypeFlushBuffers,0x9
WdfRequestTypeQueryVolumeInformation,0xA
WdfRequestTypeSetVolumeInformation,0xB
WdfRequestTypeDirectoryControl,0xC
WdfRequestTypeFileSystemControl,0xD
WdfRequestTypeDeviceControl,0xE
WdfRequestTypeDeviceControlInternal,0xF
WdfRequestTypeShutdown,0x10
WdfRequestTypeLockControl,0x11
WdfRequestTypeCleanup,0x12
WdfRequestTypeCreateMailSlot,0x13
WdfRequestTypeQuerySecurity,0x14
WdfRequestTypeSetSecurity,0x15
WdfRequestTypePower,0x16
WdfRequestTypeSystemControl,0x17
WdfRequestTypeDeviceChange,0x18
WdfRequestTypeQueryQuota,0x19
WdfRequestTypeSetQuota,0x1A
WdfRequestTypePnp,0x1B
WdfRequestTypeOther,0x1C
WdfRequestTypeUsb,0x40
WdfRequestTypeNoFormat,0xFF
WdfRequestTypeMax,0x100
}
#enumv _WDF_DEVICE_FAILED_ACTION
{
WdfDeviceFailedUndefined,0x0
WdfDeviceFailedAttemptRestart,0x1
WdfDeviceFailedNoRestart,0x2
}
0a20494f-b9d5-3e29-f2e4-028226f4575b d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_IO_QUEUE_STATE
{
WdfIoQueueAcceptRequests,0x1
WdfIoQueueDispatchRequests,0x2
WdfIoQueueNoRequests,0x4
WdfIoQueueDriverNoRequests,0x8
WdfIoQueuePnpHeld,0x10
}
#enumv _WDF_REQUEST_TYPE
{
WdfRequestTypeCreate,0x0
WdfRequestTypeCreateNamedPipe,0x1
WdfRequestTypeClose,0x2
WdfRequestTypeRead,0x3
WdfRequestTypeWrite,0x4
WdfRequestTypeQueryInformation,0x5
WdfRequestTypeSetInformation,0x6
WdfRequestTypeQueryEA,0x7
WdfRequestTypeSetEA,0x8
WdfRequestTypeFlushBuffers,0x9
WdfRequestTypeQueryVolumeInformation,0xA
WdfRequestTypeSetVolumeInformation,0xB
WdfRequestTypeDirectoryControl,0xC
WdfRequestTypeFileSystemControl,0xD
WdfRequestTypeDeviceControl,0xE
WdfRequestTypeDeviceControlInternal,0xF
WdfRequestTypeShutdown,0x10
WdfRequestTypeLockControl,0x11
WdfRequestTypeCleanup,0x12
WdfRequestTypeCreateMailSlot,0x13
WdfRequestTypeQuerySecurity,0x14
WdfRequestTypeSetSecurity,0x15
WdfRequestTypePower,0x16
WdfRequestTypeSystemControl,0x17
WdfRequestTypeDeviceChange,0x18
WdfRequestTypeQueryQuota,0x19
WdfRequestTypeSetQuota,0x1A
WdfRequestTypePnp,0x1B
WdfRequestTypeOther,0x1C
WdfRequestTypeUsb,0x40
WdfRequestTypeNoFormat,0xFF
WdfRequestTypeMax,0x100
}
ec86774d-778e-3a5d-ae00-80a3f98fe7e6 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv FxRequestIrpOwnership
{
FxRequestOwnsIrp,0x1
FxRequestDoesNotOwnIrp,0x2
}
867b34d2-f3aa-3706-4654-33a8ec52241e d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_EXECUTION_LEVEL
{
WdfExecutionLevelInvalid,0x0
WdfExecutionLevelInheritFromParent,0x1
WdfExecutionLevelPassive,0x2
WdfExecutionLevelDispatch,0x3
}
#enumv _WDF_SYNCHRONIZATION_SCOPE
{
WdfSynchronizationScopeInvalid,0x0
WdfSynchronizationScopeInheritFromParent,0x1
WdfSynchronizationScopeDevice,0x2
WdfSynchronizationScopeQueue,0x3
WdfSynchronizationScopeNone,0x4
}
70e2676f-22fc-3dad-9dfb-99056a39aac8 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_IO_TARGET_STATE
{
WdfIoTargetStateUndefined,0x0
WdfIoTargetStarted,0x1
WdfIoTargetStopped,0x2
WdfIoTargetClosedForQueryRemove,0x3
WdfIoTargetClosed,0x4
WdfIoTargetDeleted,0x5
WdfIoTargetPurged,0x6
}
97a27462-c3fd-3580-6ec4-ae7bdf916214 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_IO_TARGET_STATE
{
WdfIoTargetStateUndefined,0x0
WdfIoTargetStarted,0x1
WdfIoTargetStopped,0x2
WdfIoTargetClosedForQueryRemove,0x3
WdfIoTargetClosed,0x4
WdfIoTargetDeleted,0x5
WdfIoTargetPurged,0x6
}
e53e948c-03e1-37c7-0603-227c120d6c3f d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_USB_PIPE_TYPE
{
WdfUsbPipeTypeInvalid,0x0
WdfUsbPipeTypeControl,0x1
WdfUsbPipeTypeIsochronous,0x2
WdfUsbPipeTypeBulk,0x3
WdfUsbPipeTypeInterrupt,0x4
}
0968cc89-c7a7-39bd-3b43-e0f36f3bc7bf d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WdfUsbTargetDeviceSelectConfigType
{
WdfUsbTargetDeviceSelectConfigTypeInvalid,0x0
WdfUsbTargetDeviceSelectConfigTypeDeconfig,0x1
WdfUsbTargetDeviceSelectConfigTypeSingleInterface,0x2
WdfUsbTargetDeviceSelectConfigTypeMultiInterface,0x3
WdfUsbTargetDeviceSelectConfigTypeInterfacesPairs,0x4
WdfUsbTargetDeviceSelectConfigTypeInterfacesDescriptor,0x5
WdfUsbTargetDeviceSelectConfigTypeUrb,0x6
}
32418b6b-3d5c-3267-21ee-bf9b6a55156d d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_IO_TARGET_PURGE_IO_ACTION
{
WdfIoTargetPurgeIoUndefined,0x0
WdfIoTargetPurgeIoAndWait,0x1
WdfIoTargetPurgeIo,0x2
}
#enumv _WDF_IO_TARGET_SENT_IO_ACTION
{
WdfIoTargetSentIoUndefined,0x0
WdfIoTargetCancelSentIo,0x1
WdfIoTargetWaitForSentIoToComplete,0x2
WdfIoTargetLeaveSentIoPending,0x3
}
#enumv _WDF_IO_TARGET_STATE
{
WdfIoTargetStateUndefined,0x0
WdfIoTargetStarted,0x1
WdfIoTargetStopped,0x2
WdfIoTargetClosedForQueryRemove,0x3
WdfIoTargetClosed,0x4
WdfIoTargetDeleted,0x5
WdfIoTargetPurged,0x6
}
2060831f-e143-324a-983e-9a09a7eb65f5 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_REQUEST_TYPE
{
WdfRequestTypeCreate,0x0
WdfRequestTypeCreateNamedPipe,0x1
WdfRequestTypeClose,0x2
WdfRequestTypeRead,0x3
WdfRequestTypeWrite,0x4
WdfRequestTypeQueryInformation,0x5
WdfRequestTypeSetInformation,0x6
WdfRequestTypeQueryEA,0x7
WdfRequestTypeSetEA,0x8
WdfRequestTypeFlushBuffers,0x9
WdfRequestTypeQueryVolumeInformation,0xA
WdfRequestTypeSetVolumeInformation,0xB
WdfRequestTypeDirectoryControl,0xC
WdfRequestTypeFileSystemControl,0xD
WdfRequestTypeDeviceControl,0xE
WdfRequestTypeDeviceControlInternal,0xF
WdfRequestTypeShutdown,0x10
WdfRequestTypeLockControl,0x11
WdfRequestTypeCleanup,0x12
WdfRequestTypeCreateMailSlot,0x13
WdfRequestTypeQuerySecurity,0x14
WdfRequestTypeSetSecurity,0x15
WdfRequestTypePower,0x16
WdfRequestTypeSystemControl,0x17
WdfRequestTypeDeviceChange,0x18
WdfRequestTypeQueryQuota,0x19
WdfRequestTypeSetQuota,0x1A
WdfRequestTypePnp,0x1B
WdfRequestTypeOther,0x1C
WdfRequestTypeUsb,0x40
WdfRequestTypeNoFormat,0xFF
WdfRequestTypeMax,0x100
}
#enumv FxIoStopProcessingForPowerAction
{
FxIoStopProcessingForPowerHold,0x1
FxIoStopProcessingForPowerPurgeManaged,0x2
FxIoStopProcessingForPowerPurgeNonManaged,0x3
}
75f1d961-d7dd-388b-2414-f042adcbe366 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv BUS_QUERY_ID_TYPE
{
BusQueryDeviceID,0x0
BusQueryHardwareIDs,0x1
BusQueryCompatibleIDs,0x2
BusQueryInstanceID,0x3
BusQueryDeviceSerialNumber,0x4
BusQueryContainerID,0x5
}
aa18f326-ea6d-36c2-39cc-2bef74b96e74 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_DEVICE_PNP_STATE
{
WdfDevStatePnpInvalid,0x0
WdfDevStatePnpObjectCreated,0x100
WdfDevStatePnpCheckForDevicePresence,0x101
WdfDevStatePnpEjectFailed,0x102
WdfDevStatePnpEjectHardware,0x103
WdfDevStatePnpEjectedWaitingForRemove,0x104
WdfDevStatePnpInit,0x105
WdfDevStatePnpInitStarting,0x106
WdfDevStatePnpInitSurpriseRemoved,0x107
WdfDevStatePnpHardwareAvailable,0x108
WdfDevStatePnpEnableInterfaces,0x109
WdfDevStatePnpHardwareAvailablePowerPolicyFailed,0x10A
WdfDevStatePnpQueryRemoveAskDriver,0x10B
WdfDevStatePnpQueryRemovePending,0x10C
WdfDevStatePnpQueryRemoveStaticCheck,0x10D
WdfDevStatePnpQueriedRemoving,0x10E
WdfDevStatePnpQueryStopAskDriver,0x10F
WdfDevStatePnpQueryStopPending,0x110
WdfDevStatePnpQueryStopStaticCheck,0x111
WdfDevStatePnpQueryCanceled,0x112
WdfDevStatePnpRemoved,0x113
WdfDevStatePnpPdoRemoved,0x114
WdfDevStatePnpRemovedPdoWait,0x115
WdfDevStatePnpRemovedPdoSurpriseRemoved,0x116
WdfDevStatePnpRemovingDisableInterfaces,0x117
WdfDevStatePnpRestarting,0x118
WdfDevStatePnpStarted,0x119
WdfDevStatePnpStartedCancelStop,0x11A
WdfDevStatePnpStartedCancelRemove,0x11B
WdfDevStatePnpStartedRemoving,0x11C
WdfDevStatePnpStartingFromStopped,0x11D
WdfDevStatePnpStopped,0x11E
WdfDevStatePnpStoppedWaitForStartCompletion,0x11F
WdfDevStatePnpStartedStopping,0x120
WdfDevStatePnpSurpriseRemove,0x121
WdfDevStatePnpInitQueryRemove,0x122
WdfDevStatePnpInitQueryRemoveCanceled,0x123
WdfDevStatePnpFdoRemoved,0x124
WdfDevStatePnpRemovedWaitForChildren,0x125
WdfDevStatePnpQueriedSurpriseRemove,0x126
WdfDevStatePnpSurpriseRemoveIoStarted,0x127
WdfDevStatePnpFailedPowerDown,0x128
WdfDevStatePnpFailedIoStarting,0x129
WdfDevStatePnpFailedOwnHardware,0x12A
WdfDevStatePnpFailed,0x12B
WdfDevStatePnpFailedSurpriseRemoved,0x12C
WdfDevStatePnpFailedStarted,0x12D
WdfDevStatePnpFailedWaitForRemove,0x12E
WdfDevStatePnpFailedInit,0x12F
WdfDevStatePnpPdoInitFailed,0x130
WdfDevStatePnpRestart,0x131
WdfDevStatePnpRestartReleaseHardware,0x132
WdfDevStatePnpRestartHardwareAvailable,0x133
WdfDevStatePnpPdoRestart,0x134
WdfDevStatePnpFinal,0x135
WdfDevStatePnpRemovedChildrenRemoved,0x136
WdfDevStatePnpQueryRemoveEnsureDeviceAwake,0x137
WdfDevStatePnpQueryStopEnsureDeviceAwake,0x138
WdfDevStatePnpFailedPowerPolicyRemoved,0x139
WdfDevStatePnpNull,0x13A
}
#enumv FxPnpEvent
{
PnpEventInvalid,0x0
PnpEventAddDevice,0x1
PnpEventStartDevice,0x2
PnpEventStartDeviceComplete,0x4
PnpEventStartDeviceFailed,0x8
PnpEventQueryRemove,0x10
PnpEventQueryStop,0x20
PnpEventCancelRemove,0x40
PnpEventCancelStop,0x80
PnpEventStop,0x100
PnpEventRemove,0x200
PnpEventSurpriseRemove,0x400
PnpEventEject,0x800
PnpEventPwrPolStopped,0x1000
PnpEventPwrPolStopFailed,0x2000
PnpEventPowerUpFailed,0x4000
PnpEventPowerDownFailed,0x8000
PnpEventParentRemoved,0x10000
PnpEventChildrenRemovalComplete,0x20000
PnpEventPwrPolStarted,0x40000
PnpEventPwrPolStartFailed,0x80000
PnpEventDeviceInD0,0x100000
PnpEventPwrPolRemoved,0x200000
PnpEventPending,0xDF4
PnpPriorityEventsMask,0x3C3000
PnpEventNull,0xFF
}
d0a43776-3a8f-38b0-41ac-66348cfd223b d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_POWER_DEVICE_STATE
{
WdfPowerDeviceInvalid,0x0
WdfPowerDeviceD0,0x1
WdfPowerDeviceD1,0x2
WdfPowerDeviceD2,0x3
WdfPowerDeviceD3,0x4
WdfPowerDeviceD3Final,0x5
WdfPowerDevicePrepareForHibernation,0x6
WdfPowerDeviceMaximum,0x7
}
48df17c7-8a07-358f-fffa-48046a1a7a6a d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_POWER_DEVICE_STATE
{
WdfPowerDeviceInvalid,0x0
WdfPowerDeviceD0,0x1
WdfPowerDeviceD1,0x2
WdfPowerDeviceD2,0x3
WdfPowerDeviceD3,0x4
WdfPowerDeviceD3Final,0x5
WdfPowerDevicePrepareForHibernation,0x6
WdfPowerDeviceMaximum,0x7
}
#enumv _WDF_DEVICE_POWER_STATE
{
WdfDevStatePowerInvalid,0x0
WdfDevStatePowerObjectCreated,0x300
WdfDevStatePowerCheckDeviceType,0x301
WdfDevStatePowerCheckDeviceTypeNP,0x8302
WdfDevStatePowerCheckParentState,0x303
WdfDevStatePowerCheckParentStateNP,0x8304
WdfDevStatePowerEnablingWakeAtBus,0x305
WdfDevStatePowerEnablingWakeAtBusNP,0x8306
WdfDevStatePowerD0,0x307
WdfDevStatePowerD0NP,0x8308
WdfDevStatePowerD0BusWakeOwner,0x309
WdfDevStatePowerD0BusWakeOwnerNP,0x830A
WdfDevStatePowerD0ArmedForWake,0x30B
WdfDevStatePowerD0ArmedForWakeNP,0x830C
WdfDevStatePowerD0DisarmingWakeAtBus,0x30D
WdfDevStatePowerD0DisarmingWakeAtBusNP,0x830E
WdfDevStatePowerD0Starting,0x30F
WdfDevStatePowerD0StartingConnectInterrupt,0x310
WdfDevStatePowerD0StartingDmaEnable,0x311
WdfDevStatePowerD0StartingStartSelfManagedIo,0x312
WdfDevStatePowerDecideD0State,0x313
WdfDevStatePowerGotoD3Stopped,0x314
WdfDevStatePowerStopped,0x315
WdfDevStatePowerStartingCheckDeviceType,0x316
WdfDevStatePowerStartingChild,0x317
WdfDevStatePowerDxDisablingWakeAtBus,0x318
WdfDevStatePowerDxDisablingWakeAtBusNP,0x8319
WdfDevStatePowerGotoDx,0x31A
WdfDevStatePowerGotoDxNP,0x831B
WdfDevStatePowerGotoDxIoStopped,0x31C
WdfDevStatePowerGotoDxIoStoppedNP,0x831D
WdfDevStatePowerGotoDxNPFailed,0x831E
WdfDevStatePowerDx,0x31F
WdfDevStatePowerDxNP,0x8320
WdfDevStatePowerGotoDxArmedForWake,0x321
WdfDevStatePowerGotoDxArmedForWakeNP,0x8322
WdfDevStatePowerGotoDxIoStoppedArmedForWake,0x323
WdfDevStatePowerGotoDxIoStoppedArmedForWakeNP,0x8324
WdfDevStatePowerDxArmedForWake,0x325
WdfDevStatePowerDxArmedForWakeNP,0x8326
WdfDevStatePowerCheckParentStateArmedForWake,0x327
WdfDevStatePowerCheckParentStateArmedForWakeNP,0x8328
WdfDevStatePowerWaitForParentArmedForWake,0x329
WdfDevStatePowerWaitForParentArmedForWakeNP,0x832A
WdfDevStatePowerStartSelfManagedIo,0x32B
WdfDevStatePowerStartSelfManagedIoNP,0x832C
WdfDevStatePowerStartSelfManagedIoFailed,0x32D
WdfDevStatePowerStartSelfManagedIoFailedNP,0x832E
WdfDevStatePowerWaitForParent,0x32F
WdfDevStatePowerWaitForParentNP,0x8330
WdfDevStatePowerWakePending,0x331
WdfDevStatePowerWakePendingNP,0x8332
WdfDevStatePowerWaking,0x333
WdfDevStatePowerWakingNP,0x8334
WdfDevStatePowerWakingConnectInterrupt,0x335
WdfDevStatePowerWakingConnectInterruptNP,0x8336
WdfDevStatePowerWakingConnectInterruptFailed,0x337
WdfDevStatePowerWakingConnectInterruptFailedNP,0x8338
WdfDevStatePowerWakingDmaEnable,0x339
WdfDevStatePowerWakingDmaEnableNP,0x833A
WdfDevStatePowerWakingDmaEnableFailed,0x33B
WdfDevStatePowerWakingDmaEnableFailedNP,0x833C
WdfDevStatePowerReportPowerUpFailedDerefParent,0x33D
WdfDevStatePowerReportPowerUpFailed,0x33E
WdfDevStatePowerPowerFailedPowerDown,0x33F
WdfDevStatePowerReportPowerDownFailed,0x340
WdfDevStatePowerInitialConnectInterruptFailed,0x341
WdfDevStatePowerInitialDmaEnableFailed,0x342
WdfDevStatePowerInitialSelfManagedIoFailed,0x343
WdfDevStatePowerInitialPowerUpFailedDerefParent,0x344
WdfDevStatePowerInitialPowerUpFailed,0x345
WdfDevStatePowerDxStoppedDisarmWake,0x346
WdfDevStatePowerDxStoppedDisarmWakeNP,0x8347
WdfDevStatePowerGotoDxStoppedDisableInterruptNP,0x8348
WdfDevStatePowerGotoDxStopped,0x349
WdfDevStatePowerDxStopped,0x34A
WdfDevStatePowerGotoStopped,0x34B
WdfDevStatePowerStoppedCompleteDx,0x34C
WdfDevStatePowerDxStoppedDecideDxState,0x34D
WdfDevStatePowerDxStoppedArmForWake,0x34E
WdfDevStatePowerDxStoppedArmForWakeNP,0x834F
WdfDevStatePowerFinalPowerDownFailed,0x350
WdfDevStatePowerFinal,0x351
WdfDevStatePowerGotoImplicitD3DisarmWakeAtBus,0x352
WdfDevStatePowerUpFailed,0x353
WdfDevStatePowerUpFailedDerefParent,0x354
WdfDevStatePowerGotoDxFailed,0x355
WdfDevStatePowerGotoDxStoppedDisableInterrupt,0x356
WdfDevStatePowerUpFailedNP,0x8357
WdfDevStatePowerUpFailedDerefParentNP,0x8358
WdfDevStatePowerNotifyingD0ExitToWakeInterrupts,0x359
WdfDevStatePowerNotifyingD0EntryToWakeInterrupts,0x35A
WdfDevStatePowerNotifyingD0ExitToWakeInterruptsNP,0x835B
WdfDevStatePowerNotifyingD0EntryToWakeInterruptsNP,0x835C
WdfDevStatePowerInitialPowerUpFailedPowerDown,0x35D
WdfDevStatePowerUpFailedPowerDown,0x35E
WdfDevStatePowerUpFailedPowerDownNP,0x835F
WdfDevStatePowerInitialSelfManagedIoFailedStarted,0x360
WdfDevStatePowerStartSelfManagedIoFailedStarted,0x361
WdfDevStatePowerStartSelfManagedIoFailedStartedNP,0x8362
WdfDevStatePowerWakingPostHardwareEnabled,0x363
WdfDevStatePowerWakingPostHardwareEnabledNP,0x8364
WdfDevStatePowerWakingPostHardwareEnabledFailed,0x365
WdfDevStatePowerWakingPostHardwareEnabledFailedNP,0x8366
WdfDevStatePowerD0StartingPostHardwareEnabled,0x367
WdfDevStatePowerInitialPostHardwareEnabledFailed,0x368
WdfDevStatePowerNull,0x369
}
#enumv FxPowerEvent
{
PowerEventInvalid,0x0
PowerD0,0x1
PowerDx,0x2
PowerWakeArrival,0x4
PowerWakeSucceeded,0x8
PowerWakeFailed,0x10
PowerWakeCanceled,0x20
PowerImplicitD0,0x40
PowerImplicitD3,0x80
PowerParentToD0,0x100
PowerMarkPageable,0x200
PowerMarkNonpageable,0x400
PowerCompleteD0,0x800
PowerCompleteDx,0x1000
PowerWakeInterruptCompleteTransition,0x2000
PowerPriorityEventsMask,0x3900
PowerSingularEventMask,0x100
PowerEventMaximum,0xFF
}
22fa85c4-839b-35a8-c56b-b59cbaa964f5 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _SYSTEM_POWER_STATE
{
PowerSystemUnspecified,0x0
PowerSystemWorking,0x1
PowerSystemSleeping1,0x2
PowerSystemSleeping2,0x3
PowerSystemSleeping3,0x4
PowerSystemHibernate,0x5
PowerSystemShutdown,0x6
PowerSystemMaximum,0x7
}
#enumv _DEVICE_POWER_STATE
{
PowerDeviceUnspecified,0x0
PowerDeviceD0,0x1
PowerDeviceD1,0x2
PowerDeviceD2,0x3
PowerDeviceD3,0x4
PowerDeviceMaximum,0x5
}
#enumv _DEVICE_RELATION_TYPE
{
BusRelations,0x0
EjectionRelations,0x1
PowerRelations,0x2
RemovalRelations,0x3
TargetDeviceRelation,0x4
SingleBusRelations,0x5
TransportRelations,0x6
}
1a48aa22-aa02-31a6-b786-02c899c07d00 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _DEVICE_RELATION_TYPE
{
BusRelations,0x0
EjectionRelations,0x1
PowerRelations,0x2
RemovalRelations,0x3
TargetDeviceRelation,0x4
SingleBusRelations,0x5
TransportRelations,0x6
}
fad7c1d8-989b-30c8-ae27-1a82d0837b0d d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_DEVICE_POWER_POLICY_STATE
{
WdfDevStatePwrPolInvalid,0x0
WdfDevStatePwrPolObjectCreated,0x500
WdfDevStatePwrPolStarting,0x501
WdfDevStatePwrPolStartingSucceeded,0x502
WdfDevStatePwrPolStartingFailed,0x503
WdfDevStatePwrPolStartingDecideS0Wake,0x504
WdfDevStatePwrPolStartedIdleCapable,0x505
WdfDevStatePwrPolTimerExpiredNoWake,0x506
WdfDevStatePwrPolTimerExpiredNoWakeCompletePowerDown,0x507
WdfDevStatePwrPolWaitingUnarmed,0x508
WdfDevStatePwrPolWaitingUnarmedQueryIdle,0x509
WdfDevStatePwrPolS0NoWakePowerUp,0x50A
WdfDevStatePwrPolS0NoWakeCompletePowerUp,0x50B
WdfDevStatePwrPolSystemSleepFromDeviceWaitingUnarmed,0x50C
WdfDevStatePwrPolSystemSleepNeedWake,0x50D
WdfDevStatePwrPolSystemSleepNeedWakeCompletePowerUp,0x50E
WdfDevStatePwrPolSystemSleepPowerRequestFailed,0x50F
WdfDevStatePwrPolCheckPowerPageable,0x510
WdfDevStatePwrPolSleepingWakeWakeArrived,0x511
WdfDevStatePwrPolSleepingWakeRevertArmWake,0x512
WdfDevStatePwrPolSystemAsleepWakeArmed,0x513
WdfDevStatePwrPolSystemWakeDeviceWakeEnabled,0x514
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledWakeCanceled,0x515
WdfDevStatePwrPolSystemWakeDeviceWakeDisarm,0x516
WdfDevStatePwrPolSystemWakeDeviceWakeTriggered,0x517
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredS0,0x518
WdfDevStatePwrPolSystemWakeDeviceWokeDisarm,0x519
WdfDevStatePwrPolSleepingWakeWakeArrivedNP,0x851A
WdfDevStatePwrPolSleepingWakeRevertArmWakeNP,0x851B
WdfDevStatePwrPolSleepingWakePowerDownFailed,0x51C
WdfDevStatePwrPolSleepingWakePowerDownFailedWakeCanceled,0x51D
WdfDevStatePwrPolSystemAsleepWakeArmedNP,0x851E
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledNP,0x851F
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledWakeCanceledNP,0x8520
WdfDevStatePwrPolSystemWakeDeviceWakeDisarmNP,0x8521
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredNP,0x8522
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredS0NP,0x8523
WdfDevStatePwrPolSystemWakeDeviceWokeDisarmNP,0x8524
WdfDevStatePwrPolSystemWakeDeviceWakeCompletePowerUp,0x525
WdfDevStatePwrPolSleeping,0x526
WdfDevStatePwrPolSleepingNoWakePowerDown,0x527
WdfDevStatePwrPolSleepingNoWakeCompletePowerDown,0x528
WdfDevStatePwrPolSleepingNoWakeDxRequestFailed,0x529
WdfDevStatePwrPolSleepingWakePowerDown,0x52A
WdfDevStatePwrPolSleepingSendWake,0x52B
WdfDevStatePwrPolSystemAsleepNoWake,0x52C
WdfDevStatePwrPolSystemWakeDeviceWakeDisabled,0x52D
WdfDevStatePwrPolSystemWakeDeviceToD0,0x52E
WdfDevStatePwrPolSystemWakeDeviceToD0CompletePowerUp,0x52F
WdfDevStatePwrPolSystemWakeQueryIdle,0x530
WdfDevStatePwrPolStartedWakeCapable,0x531
WdfDevStatePwrPolTimerExpiredDecideUsbSS,0x532
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDown,0x533
WdfDevStatePwrPolTimerExpiredWakeCapableSendWake,0x534
WdfDevStatePwrPolTimerExpiredWakeCapableUsbSS,0x535
WdfDevStatePwrPolTimerExpiredWakeCapableWakeArrived,0x536
WdfDevStatePwrPolTimerExpiredWakeCapableCancelWake,0x537
WdfDevStatePwrPolTimerExpiredWakeCapableWakeCanceled,0x538
WdfDevStatePwrPolTimerExpiredWakeCapableCleanup,0x539
WdfDevStatePwrPolTimerExpiredWakeCapableDxAllocFailed,0x53A
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerDown,0x53B
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerUp,0x53C
WdfDevStatePwrPolWaitingArmedUsbSS,0x53D
WdfDevStatePwrPolWaitingArmed,0x53E
WdfDevStatePwrPolWaitingArmedQueryIdle,0x53F
WdfDevStatePwrPolIoPresentArmed,0x540
WdfDevStatePwrPolIoPresentArmedWakeCanceled,0x541
WdfDevStatePwrPolS0WakeDisarm,0x542
WdfDevStatePwrPolS0WakeCompletePowerUp,0x543
WdfDevStatePwrPolTimerExpiredWakeSucceeded,0x544
WdfDevStatePwrPolTimerExpiredWakeCompletedDisarm,0x545
WdfDevStatePwrPolTimerExpiredWakeCapableWakeSucceeded,0x546
WdfDevStatePwrPolTimerExpiredWakeCapableWakeFailed,0x547
WdfDevStatePwrPolWakeFailedUsbSS,0x548
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedCancelWake,0x549
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedWakeCanceled,0x54A
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedUsbSS,0x54B
WdfDevStatePwrPolCancelingWakeForSystemSleep,0x54C
WdfDevStatePwrPolCancelingWakeForSystemSleepWakeCanceled,0x54D
WdfDevStatePwrPolDisarmingWakeForSystemSleepCompletePowerUp,0x54E
WdfDevStatePwrPolPowerUpForSystemSleepFailed,0x54F
WdfDevStatePwrPolWokeFromS0UsbSS,0x550
WdfDevStatePwrPolWokeFromS0,0x551
WdfDevStatePwrPolWokeFromS0NotifyDriver,0x552
WdfDevStatePwrPolStoppingResetDevice,0x553
WdfDevStatePwrPolStoppingResetDeviceCompletePowerUp,0x554
WdfDevStatePwrPolStoppingResetDeviceFailed,0x555
WdfDevStatePwrPolStoppingD0,0x556
WdfDevStatePwrPolStoppingD0Failed,0x557
WdfDevStatePwrPolStoppingDisarmWake,0x558
WdfDevStatePwrPolStoppingDisarmWakeCancelWake,0x559
WdfDevStatePwrPolStoppingDisarmWakeWakeCanceled,0x55A
WdfDevStatePwrPolStopping,0x55B
WdfDevStatePwrPolStoppingFailed,0x55C
WdfDevStatePwrPolStoppingSendStatus,0x55D
WdfDevStatePwrPolStoppingCancelTimer,0x55E
WdfDevStatePwrPolStoppingWaitForIdleTimeout,0x55F
WdfDevStatePwrPolStoppingCancelUsbSS,0x560
WdfDevStatePwrPolStoppingWaitForUsbSSCompletion,0x561
WdfDevStatePwrPolStoppingCancelWake,0x562
WdfDevStatePwrPolStopped,0x563
WdfDevStatePwrPolCancelUsbSS,0x564
WdfDevStatePwrPolStarted,0x565
WdfDevStatePwrPolStartedCancelTimer,0x566
WdfDevStatePwrPolStartedWaitForIdleTimeout,0x567
WdfDevStatePwrPolStartedWakeCapableCancelTimerForSleep,0x568
WdfDevStatePwrPolStartedWakeCapableWaitForIdleTimeout,0x569
WdfDevStatePwrPolStartedWakeCapableSleepingUsbSS,0x56A
WdfDevStatePwrPolStartedIdleCapableCancelTimerForSleep,0x56B
WdfDevStatePwrPolStartedIdleCapableWaitForIdleTimeout,0x56C
WdfDevStatePwrPolDeviceD0PowerRequestFailed,0x56D
WdfDevStatePwrPolDevicePowerRequestFailed,0x56E
WdfDevStatePwrPolGotoDx,0x56F
WdfDevStatePwrPolGotoDxInDx,0x570
WdfDevStatePwrPolDx,0x571
WdfDevStatePwrPolGotoD0,0x572
WdfDevStatePwrPolGotoD0InD0,0x573
WdfDevStatePwrPolFinal,0x574
WdfDevStatePwrPolSleepingPowerDownNotProcessed,0x575
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownNotProcessed,0x576
WdfDevStatePwrPolTimerExpiredNoWakePowerDownNotProcessed,0x577
WdfDevStatePwrPolTimerExpiredNoWakePoweredDownDisableIdleTimer,0x578
WdfDevStatePwrPolStoppingWaitingForImplicitPowerDown,0x579
WdfDevStatePwrPolStoppingPoweringUp,0x57A
WdfDevStatePwrPolStoppingPoweringDown,0x57B
WdfDevStatePwrPolPowerUpForSystemSleepNotSeen,0x57C
WdfDevStatePwrPolWaitingArmedStoppingCancelUsbSS,0x57D
WdfDevStatePwrPolWaitingArmedWakeFailedCancelUsbSS,0x57E
WdfDevStatePwrPolWaitingArmedIoPresentCancelUsbSS,0x57F
WdfDevStatePwrPolWaitingArmedWakeSucceededCancelUsbSS,0x580
WdfDevStatePwrPolCancelingUsbSSForSystemSleep,0x581
WdfDevStatePwrPolStoppingD0CancelUsbSS,0x582
WdfDevStatePwrPolStartingPoweredUp,0x583
WdfDevStatePwrPolIdleCapableDeviceIdle,0x584
WdfDevStatePwrPolDeviceIdleReturnToActive,0x585
WdfDevStatePwrPolDeviceIdleSleeping,0x586
WdfDevStatePwrPolDeviceIdleStopping,0x587
WdfDevStatePwrPolTimerExpiredNoWakeUndoPowerDown,0x588
WdfDevStatePwrPolWakeCapableDeviceIdle,0x589
WdfDevStatePwrPolWakeCapableUsbSSCompleted,0x58A
WdfDevStatePwrPolTimerExpiredWakeCapableUndoPowerDown,0x58B
WdfDevStatePwrPolTimerExpiredWakeCompletedHardwareStarted,0x58C
WdfDevStatePwrPolStoppedRemoving,0x58D
WdfDevStatePwrPolRemoved,0x58E
WdfDevStatePwrPolRestarting,0x58F
WdfDevStatePwrPolRestartingFailed,0x590
WdfDevStatePwrPolStartingPoweredUpFailed,0x591
WdfDevStatePwrPolTimerExpiredNoWakeReturnToActive,0x592
WdfDevStatePwrPolWaitingArmedWakeInterruptFired,0x593
WdfDevStatePwrPolSystemWakeDeviceWakeInterruptFired,0x594
WdfDevStatePwrPolSystemWakeDeviceWakeInterruptFiredNP,0x8595
WdfDevStatePwrPolTimerExpiredWakeCapableWakeInterruptArrived,0x596
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedWakeInterruptArrived,0x597
WdfDevStatePwrPolWaitingArmedWakeInterruptFiredDuringPowerDown,0x598
WdfDevStatePwrPolStartedNotIdleCapableDirectedDown,0x599
WdfDevStatePwrPolStartedIdleCapableTimerCanceledForSleep,0x59A
WdfDevStatePwrPolTimerExpiredNoWakeUndoPowerDownWaitForDirectedUp,0x59B
WdfDevStatePwrPolIdleCapableTimerNotExpiredDirectedDown,0x59C
WdfDevStatePwrPolIdleCapableDirectedDownTriggerDPNR,0x59D
WdfDevStatePwrPolWaitingUnarmedDirectedDown,0x59E
WdfDevStatePwrPolIdleCapableDirectedDownTriggerDPR,0x59F
WdfDevStatePwrPolStartedWakeCapableTimerCanceledForSleep,0x5A0
WdfDevStatePwrPolWakeCapableTimerNotExpiredDirectedDown,0x5A1
WdfDevStatePwrPolWakeCapableDirectedDownTriggerDPNR,0x5A2
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerDownWaitForDirectedUp,0x5A3
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerDownDirectedTriggerDPR,0x5A4
WdfDevStatePwrPolTimerExpiredWakeCapableUndoPowerDownWaitForDirectedUp,0x5A5
WdfDevStatePwrPolWakeCapableUsbSSCompletedUndoWaitForDirectedUp,0x5A6
WdfDevStatePwrPolTimerExpiredWakeCapableUsbSSDirectedDown,0x5A7
WdfDevStatePwrPolWaitingArmedWakeInterruptFiredDuringPowerDownCheckDirected,0x5A8
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerDownCheckDirected,0x5A9
WdfDevStatePwrPolTimerExpiredWakeCapableWakeSucceededCheckDirected,0x5AA
WdfDevStatePwrPolTimerExpiredWakeCapableWakeSucceededWaitForDirectedUp,0x5AB
WdfDevStatePwrPolTimerExpiredWakeCapableWakeSucceededTriggerDPR,0x5AC
WdfDevStatePwrPolTimerExpiredWakeCapableWakeFailedCheckDirected,0x5AD
WdfDevStatePwrPolTimerExpiredWakeCapableWakeFailedWaitForDirectedUp,0x5AE
WdfDevStatePwrPolTimerExpiredWakeCapableWakeFailedTriggerDPR,0x5AF
WdfDevStatePwrPolWaitingArmedDirectedDownWakeInterruptFiredTriggerDPR,0x5B0
WdfDevStatePwrPolWaitingArmedDirectedDownWakeInterruptFired,0x5B1
WdfDevStatePwrPolWaitingArmedDirectedDown,0x5B2
WdfDevStatePwrPolWaitingArmedDirectedDownWakeSucceededCancelUsbSS,0x5B3
WdfDevStatePwrPolWaitingArmedDirectedDownWakeFailedCancelUsbSS,0x5B4
WdfDevStatePwrPolWaitingArmedDirectedDownTriggerDPR,0x5B5
WdfDevStatePwrPolWaitingArmedDirectedDownWakeSucceededTriggerDPR,0x5B6
WdfDevStatePwrPolWaitingArmedDirectedDownUsbSSCompleted,0x5B7
WdfDevStatePwrPolWaitingArmedDirectedDownUsbSSCompletedTriggerDPR,0x5B8
WdfDevStatePwrPolWaitingArmedDirectedDownWakeFailedCancelUsbSSTriggerDPR,0x5B9
WdfDevStatePwrPolUsbSSCancelled,0x5BA
WdfDevStatePwrPolTimerExpiredWakeCapableRevertArmWake,0x5BB
WdfDevStatePwrPolSleepingWakeCancelWake,0x5BC
WdfDevStatePwrPolSleepingWakeCancelWakeNP,0x85BD
WdfDevStatePwrPolSystemWakeDeviceD0PowerRequestFailed,0x5BE
WdfDevStatePwrPolSystemWakeDevicePowerRequestFailed,0x5BF
WdfDevStatePwrPolNull,0x5C0
}
#enumv FxPowerPolicyEvent
{
PwrPolInvalid,0x0
PwrPolStart,0x1
PwrPolStop,0x2
PwrPolSx,0x4
PwrPolS0,0x8
PwrPolPowerDown,0x10
PwrPolPowerUp,0x20
PwrPolPowerDownIoStopped,0x40
PwrPolPowerUpHwStarted,0x80
PwrPolWakeArrived,0x100
PwrPolWakeSuccess,0x200
PwrPolWakeFailed,0x400
PwrPolIoPresent,0x800
PwrPolPowerTimeoutExpired,0x1000
PwrPolS0IdlePolicyChanged,0x2000
PwrPolSurpriseRemove,0x4000
PwrPolUsbSelectiveSuspendCallback,0x8000
PwrPolUsbSelectiveSuspendCompleted,0x10000
PwrPolPowerDownFailed,0x20000
PwrPolPowerUpFailed,0x40000
PwrPolImplicitPowerDown,0x80000
PwrPolImplicitPowerDownFailed,0x100000
PwrPolPowerUpNotSeen,0x200000
PwrPolDevicePowerNotRequired,0x400000
PwrPolDevicePowerRequired,0x800000
PwrPolRemove,0x1000000
PwrPolWakeInterruptFired,0x2000000
PwrPolDeviceDirectedPowerDown,0x4000000
PwrPolDeviceDirectedPowerUp,0x8000000
PwrPolDevicePowerNotRequiredDirected,0x10000000
PwrPolDevicePowerRequiredDirected,0x20000000
PwrPolPriorityEventsMask,0x3A3F07F0
PwrPolNotOwnerPriorityEventsMask,0x60030
PowerPolSingularEventMask,0x2002000
PwrPolNull,0xFF
}
15474c83-4f1d-32f0-8ae3-58bf168cdf39 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_INTERRUPT_POLICY
{
WdfIrqPolicyMachineDefault,0x0
WdfIrqPolicyAllCloseProcessors,0x1
WdfIrqPolicyOneCloseProcessor,0x2
WdfIrqPolicyAllProcessorsInMachine,0x3
WdfIrqPolicySpecifiedProcessors,0x4
WdfIrqPolicySpreadMessagesAcrossAllProcessors,0x5
}
#enumv _WDF_INTERRUPT_PRIORITY
{
WdfIrqPriorityUndefined,0x0
WdfIrqPriorityLow,0x1
WdfIrqPriorityNormal,0x2
WdfIrqPriorityHigh,0x3
}
9362c4cc-7f7b-3e03-ee76-48cf44604032 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv FxSelfManagedIoStates
{
FxSelfManagedIoInvalid,0x0
FxSelfManagedIoCreated,0x1
FxSelfManagedIoInit,0x2
FxSelfManagedIoInitFailed,0x3
FxSelfManagedIoInitStartedFailedPost,0x4
FxSelfManagedIoStarted,0x5
FxSelfManagedIoSuspending,0x6
FxSelfManagedIoStopped,0x7
FxSelfManagedIoRestarting,0x8
FxSelfManagedIoRestartedFailedPost,0x9
FxSelfManagedIoFailed,0xA
FxSelfManagedIoFlushing,0xB
FxSelfManagedIoFlushed,0xC
FxSelfManagedIoCleanup,0xD
FxSelfManagedIoFinal,0xE
FxSelfManagedIoMax,0xF
}
d634c947-b4e3-3943-d330-40e9521735b8 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv FxWakeInterruptStates
{
WakeInterruptInvalid,0x0
WakeInterruptFailed,0x1
WakeInterruptD0,0x2
WakeInterruptDx,0x3
WakeInterruptWaking,0x4
WakeInterruptInvokingEvtIsrPostWake,0x5
WakeInterruptCompletingD0,0x6
WakeInterruptInvokingEvtIsrInD0,0x7
WakeInterruptDxNotArmedForWake,0x8
WakeInterruptInvokingEvtIsrInDxNotArmedForWake,0x9
WakeInterruptMax,0xA
}
#enumv FxWakeInterruptEvents
{
WakeInterruptEventInvalid,0x0
WakeInterruptEventIsr,0x1
WakeInterruptEventEnteringD0,0x2
WakeInterruptEventLeavingD0,0x4
WakeInterruptEventD0EntryFailed,0x8
WakeInterruptEventLeavingD0NotArmedForWake,0x10
WakeInterruptEventNull,0xFF
}
94e3c03d-d873-377c-284c-8fc3cec31d15 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_DEVICE_POWER_POLICY_STATE
{
WdfDevStatePwrPolInvalid,0x0
WdfDevStatePwrPolObjectCreated,0x500
WdfDevStatePwrPolStarting,0x501
WdfDevStatePwrPolStartingSucceeded,0x502
WdfDevStatePwrPolStartingFailed,0x503
WdfDevStatePwrPolStartingDecideS0Wake,0x504
WdfDevStatePwrPolStartedIdleCapable,0x505
WdfDevStatePwrPolTimerExpiredNoWake,0x506
WdfDevStatePwrPolTimerExpiredNoWakeCompletePowerDown,0x507
WdfDevStatePwrPolWaitingUnarmed,0x508
WdfDevStatePwrPolWaitingUnarmedQueryIdle,0x509
WdfDevStatePwrPolS0NoWakePowerUp,0x50A
WdfDevStatePwrPolS0NoWakeCompletePowerUp,0x50B
WdfDevStatePwrPolSystemSleepFromDeviceWaitingUnarmed,0x50C
WdfDevStatePwrPolSystemSleepNeedWake,0x50D
WdfDevStatePwrPolSystemSleepNeedWakeCompletePowerUp,0x50E
WdfDevStatePwrPolSystemSleepPowerRequestFailed,0x50F
WdfDevStatePwrPolCheckPowerPageable,0x510
WdfDevStatePwrPolSleepingWakeWakeArrived,0x511
WdfDevStatePwrPolSleepingWakeRevertArmWake,0x512
WdfDevStatePwrPolSystemAsleepWakeArmed,0x513
WdfDevStatePwrPolSystemWakeDeviceWakeEnabled,0x514
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledWakeCanceled,0x515
WdfDevStatePwrPolSystemWakeDeviceWakeDisarm,0x516
WdfDevStatePwrPolSystemWakeDeviceWakeTriggered,0x517
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredS0,0x518
WdfDevStatePwrPolSystemWakeDeviceWokeDisarm,0x519
WdfDevStatePwrPolSleepingWakeWakeArrivedNP,0x851A
WdfDevStatePwrPolSleepingWakeRevertArmWakeNP,0x851B
WdfDevStatePwrPolSleepingWakePowerDownFailed,0x51C
WdfDevStatePwrPolSleepingWakePowerDownFailedWakeCanceled,0x51D
WdfDevStatePwrPolSystemAsleepWakeArmedNP,0x851E
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledNP,0x851F
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledWakeCanceledNP,0x8520
WdfDevStatePwrPolSystemWakeDeviceWakeDisarmNP,0x8521
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredNP,0x8522
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredS0NP,0x8523
WdfDevStatePwrPolSystemWakeDeviceWokeDisarmNP,0x8524
WdfDevStatePwrPolSystemWakeDeviceWakeCompletePowerUp,0x525
WdfDevStatePwrPolSleeping,0x526
WdfDevStatePwrPolSleepingNoWakePowerDown,0x527
WdfDevStatePwrPolSleepingNoWakeCompletePowerDown,0x528
WdfDevStatePwrPolSleepingNoWakeDxRequestFailed,0x529
WdfDevStatePwrPolSleepingWakePowerDown,0x52A
WdfDevStatePwrPolSleepingSendWake,0x52B
WdfDevStatePwrPolSystemAsleepNoWake,0x52C
WdfDevStatePwrPolSystemWakeDeviceWakeDisabled,0x52D
WdfDevStatePwrPolSystemWakeDeviceToD0,0x52E
WdfDevStatePwrPolSystemWakeDeviceToD0CompletePowerUp,0x52F
WdfDevStatePwrPolSystemWakeQueryIdle,0x530
WdfDevStatePwrPolStartedWakeCapable,0x531
WdfDevStatePwrPolTimerExpiredDecideUsbSS,0x532
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDown,0x533
WdfDevStatePwrPolTimerExpiredWakeCapableSendWake,0x534
WdfDevStatePwrPolTimerExpiredWakeCapableUsbSS,0x535
WdfDevStatePwrPolTimerExpiredWakeCapableWakeArrived,0x536
WdfDevStatePwrPolTimerExpiredWakeCapableCancelWake,0x537
WdfDevStatePwrPolTimerExpiredWakeCapableWakeCanceled,0x538
WdfDevStatePwrPolTimerExpiredWakeCapableCleanup,0x539
WdfDevStatePwrPolTimerExpiredWakeCapableDxAllocFailed,0x53A
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerDown,0x53B
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerUp,0x53C
WdfDevStatePwrPolWaitingArmedUsbSS,0x53D
WdfDevStatePwrPolWaitingArmed,0x53E
WdfDevStatePwrPolWaitingArmedQueryIdle,0x53F
WdfDevStatePwrPolIoPresentArmed,0x540
WdfDevStatePwrPolIoPresentArmedWakeCanceled,0x541
WdfDevStatePwrPolS0WakeDisarm,0x542
WdfDevStatePwrPolS0WakeCompletePowerUp,0x543
WdfDevStatePwrPolTimerExpiredWakeSucceeded,0x544
WdfDevStatePwrPolTimerExpiredWakeCompletedDisarm,0x545
WdfDevStatePwrPolTimerExpiredWakeCapableWakeSucceeded,0x546
WdfDevStatePwrPolTimerExpiredWakeCapableWakeFailed,0x547
WdfDevStatePwrPolWakeFailedUsbSS,0x548
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedCancelWake,0x549
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedWakeCanceled,0x54A
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedUsbSS,0x54B
WdfDevStatePwrPolCancelingWakeForSystemSleep,0x54C
WdfDevStatePwrPolCancelingWakeForSystemSleepWakeCanceled,0x54D
WdfDevStatePwrPolDisarmingWakeForSystemSleepCompletePowerUp,0x54E
WdfDevStatePwrPolPowerUpForSystemSleepFailed,0x54F
WdfDevStatePwrPolWokeFromS0UsbSS,0x550
WdfDevStatePwrPolWokeFromS0,0x551
WdfDevStatePwrPolWokeFromS0NotifyDriver,0x552
WdfDevStatePwrPolStoppingResetDevice,0x553
WdfDevStatePwrPolStoppingResetDeviceCompletePowerUp,0x554
WdfDevStatePwrPolStoppingResetDeviceFailed,0x555
WdfDevStatePwrPolStoppingD0,0x556
WdfDevStatePwrPolStoppingD0Failed,0x557
WdfDevStatePwrPolStoppingDisarmWake,0x558
WdfDevStatePwrPolStoppingDisarmWakeCancelWake,0x559
WdfDevStatePwrPolStoppingDisarmWakeWakeCanceled,0x55A
WdfDevStatePwrPolStopping,0x55B
WdfDevStatePwrPolStoppingFailed,0x55C
WdfDevStatePwrPolStoppingSendStatus,0x55D
WdfDevStatePwrPolStoppingCancelTimer,0x55E
WdfDevStatePwrPolStoppingWaitForIdleTimeout,0x55F
WdfDevStatePwrPolStoppingCancelUsbSS,0x560
WdfDevStatePwrPolStoppingWaitForUsbSSCompletion,0x561
WdfDevStatePwrPolStoppingCancelWake,0x562
WdfDevStatePwrPolStopped,0x563
WdfDevStatePwrPolCancelUsbSS,0x564
WdfDevStatePwrPolStarted,0x565
WdfDevStatePwrPolStartedCancelTimer,0x566
WdfDevStatePwrPolStartedWaitForIdleTimeout,0x567
WdfDevStatePwrPolStartedWakeCapableCancelTimerForSleep,0x568
WdfDevStatePwrPolStartedWakeCapableWaitForIdleTimeout,0x569
WdfDevStatePwrPolStartedWakeCapableSleepingUsbSS,0x56A
WdfDevStatePwrPolStartedIdleCapableCancelTimerForSleep,0x56B
WdfDevStatePwrPolStartedIdleCapableWaitForIdleTimeout,0x56C
WdfDevStatePwrPolDeviceD0PowerRequestFailed,0x56D
WdfDevStatePwrPolDevicePowerRequestFailed,0x56E
WdfDevStatePwrPolGotoDx,0x56F
WdfDevStatePwrPolGotoDxInDx,0x570
WdfDevStatePwrPolDx,0x571
WdfDevStatePwrPolGotoD0,0x572
WdfDevStatePwrPolGotoD0InD0,0x573
WdfDevStatePwrPolFinal,0x574
WdfDevStatePwrPolSleepingPowerDownNotProcessed,0x575
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownNotProcessed,0x576
WdfDevStatePwrPolTimerExpiredNoWakePowerDownNotProcessed,0x577
WdfDevStatePwrPolTimerExpiredNoWakePoweredDownDisableIdleTimer,0x578
WdfDevStatePwrPolStoppingWaitingForImplicitPowerDown,0x579
WdfDevStatePwrPolStoppingPoweringUp,0x57A
WdfDevStatePwrPolStoppingPoweringDown,0x57B
WdfDevStatePwrPolPowerUpForSystemSleepNotSeen,0x57C
WdfDevStatePwrPolWaitingArmedStoppingCancelUsbSS,0x57D
WdfDevStatePwrPolWaitingArmedWakeFailedCancelUsbSS,0x57E
WdfDevStatePwrPolWaitingArmedIoPresentCancelUsbSS,0x57F
WdfDevStatePwrPolWaitingArmedWakeSucceededCancelUsbSS,0x580
WdfDevStatePwrPolCancelingUsbSSForSystemSleep,0x581
WdfDevStatePwrPolStoppingD0CancelUsbSS,0x582
WdfDevStatePwrPolStartingPoweredUp,0x583
WdfDevStatePwrPolIdleCapableDeviceIdle,0x584
WdfDevStatePwrPolDeviceIdleReturnToActive,0x585
WdfDevStatePwrPolDeviceIdleSleeping,0x586
WdfDevStatePwrPolDeviceIdleStopping,0x587
WdfDevStatePwrPolTimerExpiredNoWakeUndoPowerDown,0x588
WdfDevStatePwrPolWakeCapableDeviceIdle,0x589
WdfDevStatePwrPolWakeCapableUsbSSCompleted,0x58A
WdfDevStatePwrPolTimerExpiredWakeCapableUndoPowerDown,0x58B
WdfDevStatePwrPolTimerExpiredWakeCompletedHardwareStarted,0x58C
WdfDevStatePwrPolStoppedRemoving,0x58D
WdfDevStatePwrPolRemoved,0x58E
WdfDevStatePwrPolRestarting,0x58F
WdfDevStatePwrPolRestartingFailed,0x590
WdfDevStatePwrPolStartingPoweredUpFailed,0x591
WdfDevStatePwrPolTimerExpiredNoWakeReturnToActive,0x592
WdfDevStatePwrPolWaitingArmedWakeInterruptFired,0x593
WdfDevStatePwrPolSystemWakeDeviceWakeInterruptFired,0x594
WdfDevStatePwrPolSystemWakeDeviceWakeInterruptFiredNP,0x8595
WdfDevStatePwrPolTimerExpiredWakeCapableWakeInterruptArrived,0x596
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedWakeInterruptArrived,0x597
WdfDevStatePwrPolWaitingArmedWakeInterruptFiredDuringPowerDown,0x598
WdfDevStatePwrPolStartedNotIdleCapableDirectedDown,0x599
WdfDevStatePwrPolStartedIdleCapableTimerCanceledForSleep,0x59A
WdfDevStatePwrPolTimerExpiredNoWakeUndoPowerDownWaitForDirectedUp,0x59B
WdfDevStatePwrPolIdleCapableTimerNotExpiredDirectedDown,0x59C
WdfDevStatePwrPolIdleCapableDirectedDownTriggerDPNR,0x59D
WdfDevStatePwrPolWaitingUnarmedDirectedDown,0x59E
WdfDevStatePwrPolIdleCapableDirectedDownTriggerDPR,0x59F
WdfDevStatePwrPolStartedWakeCapableTimerCanceledForSleep,0x5A0
WdfDevStatePwrPolWakeCapableTimerNotExpiredDirectedDown,0x5A1
WdfDevStatePwrPolWakeCapableDirectedDownTriggerDPNR,0x5A2
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerDownWaitForDirectedUp,0x5A3
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerDownDirectedTriggerDPR,0x5A4
WdfDevStatePwrPolTimerExpiredWakeCapableUndoPowerDownWaitForDirectedUp,0x5A5
WdfDevStatePwrPolWakeCapableUsbSSCompletedUndoWaitForDirectedUp,0x5A6
WdfDevStatePwrPolTimerExpiredWakeCapableUsbSSDirectedDown,0x5A7
WdfDevStatePwrPolWaitingArmedWakeInterruptFiredDuringPowerDownCheckDirected,0x5A8
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerDownCheckDirected,0x5A9
WdfDevStatePwrPolTimerExpiredWakeCapableWakeSucceededCheckDirected,0x5AA
WdfDevStatePwrPolTimerExpiredWakeCapableWakeSucceededWaitForDirectedUp,0x5AB
WdfDevStatePwrPolTimerExpiredWakeCapableWakeSucceededTriggerDPR,0x5AC
WdfDevStatePwrPolTimerExpiredWakeCapableWakeFailedCheckDirected,0x5AD
WdfDevStatePwrPolTimerExpiredWakeCapableWakeFailedWaitForDirectedUp,0x5AE
WdfDevStatePwrPolTimerExpiredWakeCapableWakeFailedTriggerDPR,0x5AF
WdfDevStatePwrPolWaitingArmedDirectedDownWakeInterruptFiredTriggerDPR,0x5B0
WdfDevStatePwrPolWaitingArmedDirectedDownWakeInterruptFired,0x5B1
WdfDevStatePwrPolWaitingArmedDirectedDown,0x5B2
WdfDevStatePwrPolWaitingArmedDirectedDownWakeSucceededCancelUsbSS,0x5B3
WdfDevStatePwrPolWaitingArmedDirectedDownWakeFailedCancelUsbSS,0x5B4
WdfDevStatePwrPolWaitingArmedDirectedDownTriggerDPR,0x5B5
WdfDevStatePwrPolWaitingArmedDirectedDownWakeSucceededTriggerDPR,0x5B6
WdfDevStatePwrPolWaitingArmedDirectedDownUsbSSCompleted,0x5B7
WdfDevStatePwrPolWaitingArmedDirectedDownUsbSSCompletedTriggerDPR,0x5B8
WdfDevStatePwrPolWaitingArmedDirectedDownWakeFailedCancelUsbSSTriggerDPR,0x5B9
WdfDevStatePwrPolUsbSSCancelled,0x5BA
WdfDevStatePwrPolTimerExpiredWakeCapableRevertArmWake,0x5BB
WdfDevStatePwrPolSleepingWakeCancelWake,0x5BC
WdfDevStatePwrPolSleepingWakeCancelWakeNP,0x85BD
WdfDevStatePwrPolSystemWakeDeviceD0PowerRequestFailed,0x5BE
WdfDevStatePwrPolSystemWakeDevicePowerRequestFailed,0x5BF
WdfDevStatePwrPolNull,0x5C0
}
64ef660e-8cd6-3e55-9cc2-29c894a05301 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv FxDevicePwrRequirementStates
{
DprInvalid,0x0
DprUnregistered,0x1
DprDevicePowerRequiredD0,0x2
DprDevicePowerNotRequiredD0,0x3
DprDevicePowerNotRequiredDx,0x4
DprDevicePowerRequiredDx,0x5
DprReportingDevicePowerAvailable,0x6
DprWaitingForDevicePowerRequiredD0,0x7
DprDirectedPowerDownInitiate,0x8
DprDirectedPowerDownComplete,0x9
DprDirectedPowerUpInitiate,0xA
DprDirectedPowerUpComplete,0xB
DprDirectedPowerDownFailedWaitingForUp,0xC
DprDirectedPowerDownFailedUpArrived,0xD
DprDirectedPowerUpFailedComplete,0xE
DprMax,0xF
}
#enumv FxDevicePwrRequirementEvents
{
DprEventInvalid,0x0
DprEventRegisteredWithPox,0x1
DprEventUnregisteredWithPox,0x2
DprEventPoxRequiresPower,0x4
DprEventPoxDoesNotRequirePower,0x8
DprEventDeviceGoingToDx,0x10
DprEventDeviceReturnedToD0,0x20
DprEventDeviceDirectedPoweredDown,0x40
DprEventDeviceDirectedPoweredUp,0x80
DprEventPoxDirectedPowerDown,0x100
DprEventPoxDirectedPowerUp,0x200
DprEventNull,0xFFFF
}
e0fcef07-b0f3-33e3-8b93-fec96f59a0e1 d:\os\obj\amd64fre\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
#enumv _WDF_SYNCHRONIZATION_SCOPE
{
WdfSynchronizationScopeInvalid,0x0
WdfSynchronizationScopeInheritFromParent,0x1
WdfSynchronizationScopeDevice,0x2
WdfSynchronizationScopeQueue,0x3
WdfSynchronizationScopeNone,0x4
}
